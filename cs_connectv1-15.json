{
  "openapi": "3.0.1",
  "info": {
    "title": "Creditsafe Connect",
    "version": "1.8.7",
    "description": "Last Updated: 26th July 2023<br><br>Creditsafe Connect is a REST API that provides access to the <a href=\"https://www.creditsafe.com/gb/en/more/about/our-data.html\" target=\"_blank\">Creditsafe Global Company Database.</a> This allows you to: <ul><li>Control your master data</li><li>Utilize up-to-date Business and Director information, enhancing your onboarding and qualification processes</li><li>Receive alerts when your customer's and supplier's Credit Report changes</li></ul><br>Check the status of Creditsafe Services <a href=\"https://status.creditsafe.com/\" target=\"_blank\">HERE</a>   <h2>Customer Feedback</h2> Use the buttons below to let us know what you think of this documentation. Please leave comments in your feedback for the author to consider for future versions.<br><br><a href=\"https://app.customerthermometer.com/?template=log_feedback&hash=f49570f5&embed_data=dGVtcGVyYXR1cmVfaWQ9MSZ0aGVybW9tZXRlcl9pZD0xNjM2NTImbnBzX3JhdGluZz0=&e=&f=&l=&c=&c1=&c2=&c3=&c4=&c5=&c6=&c7=&c8=&c9=&c10=\" target=\"_blank\"> <img src=\"https://app.customerthermometer.com/sites/app/images/icon_sets/icon_set_3s/gold.png\" /></a><a href=\"https://app.customerthermometer.com/?template=log_feedback&hash=601a6fd1&embed_data=dGVtcGVyYXR1cmVfaWQ9MiZ0aGVybW9tZXRlcl9pZD0xNjM2NTImbnBzX3JhdGluZz0=&e=&f=&l=&c=&c1=&c2=&c3=&c4=&c5=&c6=&c7=&c8=&c9=&c10=\" target=\"_blank\"><img src=\"https://app.customerthermometer.com/sites/app/images/icon_sets/icon_set_3s/green.png\" /></a><a href=\"https://app.customerthermometer.com/?template=log_feedback&hash=f1f7701c&embed_data=dGVtcGVyYXR1cmVfaWQ9MyZ0aGVybW9tZXRlcl9pZD0xNjM2NTImbnBzX3JhdGluZz0=&e=&f=&l=&c=&c1=&c2=&c3=&c4=&c5=&c6=&c7=&c8=&c9=&c10=\" target=\"_blank\"><img src=\"https://app.customerthermometer.com/sites/app/images/icon_sets/icon_set_3s/amber.png\" /></a><a href=\"https://app.customerthermometer.com/?template=log_feedback&hash=73951e8b&embed_data=dGVtcGVyYXR1cmVfaWQ9NCZ0aGVybW9tZXRlcl9pZD0xNjM2NTImbnBzX3JhdGluZz0=&e=&f=&l=&c=&c1=&c2=&c3=&c4=&c5=&c6=&c7=&c8=&c9=&c10=\" target=\"_blank\"><img src=\"https://app.customerthermometer.com/sites/app/images/icon_sets/icon_set_3s/red.png\" /></a> <br><br> Selecting one of the buttons above will open a new tab to the feedback portal. <h2>Quick Start</h2> To start your Creditsafe Connect API integration you will need to have activated your account and set a password by following the instructions in your Welcome Email. If you have not received a Welcome Email please contact your Creditsafe Account Manager.</br></br>By default, you will have been setup on our Sandbox environment.</br></br>\nUsing a REST API client construct an `/authenticate` POST request and enter your username & password (case-sensitive) into the POST body. A successful response will return an  `authentication token`.</br></br>\nUse the `authentication token` in an `Authorization` header on all other Creditsafe Connect calls as proof of your authenticity.\n\n<h2>Environments</h2>Production Environment baseurl: <code> https://connect.creditsafe.com/v1 </code> </br> Sandbox Test Environment baseurl:  <code>https://connect.sandbox.creditsafe.com/v1</code>  <h2>Resources</h2> \n  <ul> \n    <li><a href=\"https://creditsafe.github.io/connect-docs/cs_connectv1-15.html\" target=\"_blank\">OpenAPI</a> specification.</li>\n    <li><a href=\"https://www.getpostman.com/collections/4406bbddb81c308db8ff\" target=\"_blank\">Postman Collection</a> of the most common example calls to Creditsafe Connect.</li> \n    <li><a href=\"https://connect-portal.creditsafe.com\" target=\"_blank\"> A Front End Demo Site</a>. Use this as a quick easy way to validate your username & password and form requests.</li> \n    <li><a href=\"https://help.creditsafeuk.com/en/support/solutions\" target=\"_blank\"> Help Articles</a>  including: <ul><li><a href=\"https://help.creditsafeuk.com/en/support/solutions/7000007130\" target=\"_blank\">FAQs</a></li>\n    <li><a href=\"https://help.creditsafeuk.com/en/support/solutions/articles/7000053487-connect-api-data-dictionaries\" target=\"_blank\"> Data Dictionaries </a></li>\n    <li><a href=\"https://help.creditsafeuk.com/en/support/solutions/articles/7000054765-connect-api-data-availability-per-country\" target=\"_blank\"> Data Availability per Country </a></li>\n    <li><a href=\"https://help.creditsafeuk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\" target=\"_blank\"> Feature Availability Matrix</a></li>\n    <li><a href=\"https://help.creditsafeuk.com/en/support/solutions/articles/7000081984-connect-api-server-response-codes\" target=\"_blank\"> Connect API Response Codes </a></li>\n   </ul></ul><br>\n<br><h2>Versioning and Changes</h2><h3>Non-Breaking Changes</h3>These will be as a rule, additive functions or bug fixing. It is important that the code is integrated in such a way that it does not depend on which order items are returned.<h3>Breaking Changes</h3>This is when changes to the functionality will break the contract of the current API. This will invoke stakeholder communication and major version number update. "
  },
  "servers": [
    {
      "url": "https://connect.creditsafe.com/v1"
    },
    {
      "url": "https://connect.sandbox.creditsafe.com/v1"
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "Endpoint to generate a Bearer JWT (Authentication Token). It is mandatory to include this token under the Header `Authorization` When calling all other endpoints as proof of authenticity. Tokens can exist concurrently and persist for 1 hour from its issued time.<br><br><a href=\"https://help.creditsafeuk.com/en/support/solutions/articles/7000052598-what-to-do-if-you-see-access-denied-please-check-that-your-username-and-password-are-correct-\" target=\"_blank\">Authenticate Help - Access Denied.</a>."
    },
    {
      "name": "Companies",
      "description": "Endpoints to search for Companies in the Creditsafe Global Company Database. Companies are uniquely identified by the `connectId` - the identifier used to order a Company Credit Report. The Company Credit Report is a JSON object comprising of key business and financial data points such as Credit Score & Limit, Industry Code, Directors, Balance Sheet and Negative Information. A full list of Company data points can be found in the Data Matrix, in the help resources."
    },
    {
      "name": "People/Directors",
      "description": "Endpoints to find People/Directors and order Director Reports. A Director Report will contain a person's registered information and Active & Previous Directorships, where available. This endpoint is not advised to get a list of directors for a specific Company. Instead, order a Company Credit Report using the `/companies/{id}` endpoint, and use  the `directors` section in the response. <br><br> Please refer to the following matrix for 'persons report' availability in each country: <br><br><a href=\"https://help.creditsafeuk.com/en/support/solutions/articles/7000054656-connect-api-feature-availability-per-country\" target=\"_blank\"> Feature Availability Matrix</a>"
    },
    {
      "name": "Images",
      "description": "Endpoints to order official Company Image/Filing Documents from source. Company Filings such as Annual Account Statements, Annual Returns, Liquidations and Changes of Registered Information can be downloaded as PDFs, and are typically used as a resource in extended company auditing/compliance."
    },
    {
      "name": "Fresh Investigations",
      "description": "Endpoints to manage Fresh Investigation requests. With the need for accurate data, you can check on any company that is not available within our instant online database by placing a Fresh Investigation (Offline Order). Depending on the market, the information we obtain will vary. Using official sources and registries we are able to quickly answer questions about a company's stability and financial health. Where official information is not available we will conduct a direct interview with the business."
    },
    {
      "name": "Global Monitoring",
      "description": "Endpoints to Monitor changes to Company Information. Company changes can be retrieved by creating a Portfolio (a collection of companies) and configuring the `eventRules` (the criteria in which to trigger a change, e.g. company name changes, limit changes) on the portfolio. When a company in your Portfolio changes to satisfy an eventRule, a `notificationEvent` will be raised to inform you of the nature of the change. See <a href=\"https://www.creditsafe.com/gb/en/credit-risk/credit-reports/company-credit-reports/company-monitoring.html\"> here</a> for Creditsafe's Global Monitoring capabilities. <br><br><a href=\"https://help.creditsafeuk.com/en/support/solutions/articles/7000083503-global-monitoring-basic-integration-guide\" target=\"_blank\">Global Monitoring Basic Integration Guide</a>"
    },
    {
      "name": "Decision Engine",
      "description": "Endpoints to access pre-configured decision trees to automate credit decisions. Decision Engine can help you save time and money across your company by automating time consuming processes which drain your company's resources. This can free you and your staff to spend more time to work on achieving your business goals.</br></br>A full audit trail of previous decisions is maintained for user access and decisions in a pending state can be manually approved or declined."
    },
    {
      "name": "Protect",
      "description": "The focus on screening clients and third parties is increasing. International regulators are demanding that firms improve their ongoing sanctions screening process. World Compliance data through Connect allows customers to mitigate risk around Anti-Bribery and Corruption under local and international regulations such as the UK Bribery Act, by enabling users to screen their third party agents, suppliers or employees against watch lists.  With World Compliance through Creditsafe Connect, compliance is easy, efficient and cost-effective, even as the regulatory mountain grows.<br><br> <a href=\"https://help.creditsafeuk.com/en/support/solutions/articles/7000063160-integrating-with-protect#Profiles\" target=\"_blank\"> How to use Protect API Document </a>"
    },
    {
      "name": "Protect Profile",
      "description": "Profiles can be used as an additional category to group related investigations together. For instance - You may want to investigate all  Branches, Directors and Shareholders of one business, and keep them in the same Profile."
    },
    {
      "name": "Protect Investigations",
      "description": "An Investigation is the terminology used within Protect for a search.<br><br>Investigations are created against Businesses or Individuals, but you also need to decide which additional parameters you have available to base your Investigation on. This is typically a Name and an Address.<br><br> Searches are exclusively populated by Businesses and Individuals that meet a strict criteria e.g. They possess PEPs, SEOs, Sanctions."
    },
    {
      "name": "Protect Audit",
      "description": "Provides a log of all actions taken against endpoints to evidence any necessary that checks were carried out correctly."
    },
    {
      "name": "Protect Schedules",
      "description": "A Schedule has a 1:1 relationship with an Investigation. Investigations that are scheduled will automatically check for new re-screen your initial search criteria on a nightly basis allowing you to review any new alerts each day."
    },
    {
      "name": "Protect IDV",
      "description": "Person identity verification by validating against other known sources."
    },
    {
      "name": "Protect Batch Uploads",
      "description": "Allows for a file to be uploaded to create multiple searches.<br><br> Once the status is 'Complete' you can view all the files by calling - GET List all Protect Investigations.<br><br>Refer to the 'Selected Template' endpoint for help guide and file header templates."
    },
    {
      "name": "Local Solutions",
      "description": "A toolbox of country-specific functionality. See the description under each endpoint for more information on a particular solution."
    },
    {
      "name": "GB Consumers and AML",
      "description": "The identity service endpoints are used to run GB Consumer and AML searches. You must specify the product type and search parameters you want to obtain a response for in the body of the request."
    },
    {
      "name": "Data Cleaning",
      "description": "A suite of endpoints to allow you to upload, map, match and then append Creditsafe company data to your own master data. Maintaining the quality of company data is of greatest importance to ensure efficiency and maximisation of opportunity."
    },
    {
      "name": "Consumers",
      "description": "Endpoints to order Consumer Reports. In order to order a Consumer Report, sufficient information to uniquely identify the Consumer (search criteria) must be provided to filter potential results down to one record. When one record has been found, the returned object will be the Consumer Report. Currently only piloting with German Consumers."
    },
    {
      "name": "Misc",
      "description": "Supporting endpoints for metadata/discovery. Not frequently used directly in integrations."
    },
    {
      "name": "Change Log",
      "description": "List of updates to the connect API documentation.<br><h2>Feature being developed</h2>"
    }
  ],
  "paths": {
    "/authenticate": {
      "post": {
        "operationId": "Authenticate",
        "summary": "Authenticate",
        "security": [],
        "tags": [
          "Authentication"
        ],
        "description": "Supply username and password to generate Authentication Token. <br><br><h3>Rate Limiting Authenticate</h3>Rate limiting has been made active on the authenticate endpoint. The following basis makes up the rate limiting which will need to be accounted for:<br><br><li>5 of the same invalid requests are allowed within 2 minutes.<li> After 5 invalid requests, customer will get 429 HTTP Status for the same request.<li>After 2 minutes, you can re-call the endpoint and will get 401s (as the credentials are invalid).",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Authentication.AuthRequest"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Authentication.AuthResponse"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Authentication.Unauthorised"
                }
              }
            }
          }
        }
      }
    },
    "/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "description": "Endpoint to search for Companies according to the provided Search Criteria. To get the most relevant results, it is recommended to use a unique identifier such as `regNo` where available. If a unique identifier is not available, use a combination of the companies registered `postCode` and `name` for the next best hit rate.",
        "summary": "Company Search",
        "operationId": "companySearch",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "name": "countries",
            "in": "query",
            "example": "GB,FR",
            "description": "comma-separated list of iso-2 country codes.<br>The code `PLC` can be used here to search for companies of this type across all countries.",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "Only used for Countries where more than one Company Name exists for different languages e.g.  Japanese Kanji and English.<br>Country -  Languages Available<br>Brazil [BR] - EN & PT <br> Japan [JP] - EN & JA ",
            "schema": {
              "type": "string",
              "nullable": true,
              "default": null,
              "maxLength": 2,
              "minLength": 2
            }
          },
          {
            "name": "id",
            "in": "query",
            "description": "connectId - The primary Company identifier that is used to uniquely identify all companies across Creditsafes Universe and Partner Network. This is returned on all Company Search Results. Use this field to use in other operations such as Ordering Company Credit Report by Id, and Adding Company to Monitoring Portfolio.",
            "schema": {
              "type": "string",
              "nullable": true,
              "default": null
            }
          },
          {
            "name": "safeNo",
            "in": "query",
            "description": "Safe Number - Identifier for Companies in Creditsafe's Home Countries.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "regNo",
            "in": "query",
            "description": "Local Company Identifier - The Company identifier associated with it's Domestic Filing Agency. i.e. French SIREN/SIRET, United Kingdom Companies House CRN.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "vatNo",
            "in": "query",
            "description": "Company VAT Number",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Company Name",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "tradeName",
            "in": "query",
            "description": "Trade Name of the Company, typically used in Countries where Name is not uniquely registered.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "acronym",
            "in": "query",
            "description": "A (non-unique) identifier to look for Companies by their more commonly known acronym rather than their lesser known full name. Acronym is predominantly available on French Companies.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Provide as `true` to find Companies matching a Name exactly.",
            "schema": {
              "type": "boolean",
              "nullable": true
            }
          },
          {
            "name": "address",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "street",
            "in": "query",
            "description": "Address part identifier - Street of the Company",
            "schema": {
              "type": "string",
              "nullable": true,
              "default": null
            }
          },
          {
            "name": "houseNo",
            "in": "query",
            "description": "Address part identifier - House/Building Number of the Company",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Address part identifier - City of the Company",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "postCode",
            "in": "query",
            "description": "Address part identifier - Postcode/Zip Code of the Company. Can be provided partially to extend to a region with a * as a wildcard. I.e. CF* can represent all postcodes starting with CF.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "province",
            "in": "query",
            "description": "Address part identifier - Province/State of the Company",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string",
              "nullable": true,
              "default": null
            }
          },
          {
            "name": "officeType",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.OfficeType",
              "nullable": true
            }
          },
          {
            "name": "phoneNo",
            "in": "query",
            "description": "Provides Array of phone numbers or Null",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "nullable": true
            }
          },
          {
            "name": "status",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyStatus",
              "nullable": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyType"
            },
            "allowEmptyValue": true
          },
          {
            "name": "website",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "customData",
            "in": "query",
            "description": "Not currently used.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchResponse_1_Creditsafe.GlobalData.Company"
                    },
                    {
                      "$ref": "#/components/schemas/Connect.CompanySearch.NoResults"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/companies/{connectId}": {
      "get": {
        "operationId": "companyCreditReport",
        "summary": "Company Credit Report",
        "tags": [
          "Companies"
        ],
        "description": "Orders a Company Credit Report by connectId.<br><br> To acquire a PDF version of the report use the optional request in 'Header'.<br><br> This request will provide a 'Base64-encoded' script to convert to a PDF, this will appear at the end of the JSON response.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "Accept",
            "in": "header",
            "required": false,
            "description": "Applies request for PDF link to Company Report.",
            "schema": {
              "type": "string"
            },
            "example": "application/json+pdf"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Report Language - The JSON structure of the Report is language invariant, but field content will return as the given language, where available.",
            "schema": {
              "pattern": "^[a-zA-Z]{2}$",
              "type": "string",
              "default": "en",
              "nullable": true
            }
          },
          {
            "name": "template",
            "in": "query",
            "description": "Optional parameter to request a Templated Company Report. A Template adds/reduces sections of the Credit Report depending on your subscription. Do not include this parameter if you have not been given a template to use.",
            "schema": {
              "type": "string",
              "default": "full",
              "nullable": true
            }
          },
          {
            "name": "includeIndicators",
            "in": "query",
            "description": "Optional parameter to include the indicator scores in to a company report - `Covid Score` , `Financial Strength` , `Estimated Turnover`<br>",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "customData",
            "in": "query",
            "description": "Additional Report Parameters e.g.  German Report Reason Code value is `de_reason_code::1` . Use /reportcustomdata/{country} endpoint to see all values.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string",
              "default": null,
              "nullable": true
            },
            "required": false
          },
          {
            "name": "connectId",
            "in": "path",
            "description": "The connectId (optionally Safe Number where available) of the Company required to order their Credit Report. Obtained from `/companies` search results.",
            "required": true,
            "example": "GB-0-03836192",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyReportResponse"
                }
              },
              "application/json+pdf": {
                "schema": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Core.Attachment.BinaryAttachment"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/access": {
      "get": {
        "operationId": "subscriptionDetails",
        "summary": "Subscription Details",
        "tags": [
          "Authentication"
        ],
        "description": "Returns the available countries in your subscription - Company Report, Director Report, Offline Reports and Monitoring.",
        "security": [
          {
            "bearerToken": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Authentication.AccessCountries"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/companies/searchcriteria": {
      "get": {
        "operationId": "companySearchCriteria",
        "summary": "Company Search Criteria",
        "tags": [
          "Companies"
        ],
        "description": "Returns the set of available Company Search parameters/fields for a provided list of countries.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "countries",
            "required": true,
            "in": "query",
            "description": "A comma separated list of ISO/Alpha 2 format country codes, or singular country Code. e.g. US,GB will return the common searchable Company fields in the United States and Great Britain.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchemaCountry"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/companies/match": {
      "get": {
        "tags": [
          "Companies"
        ],
        "description": "Supply all company search criteria to find potential company matches ranked by a `single score`.   - <a href=\"https://creditsafe.freshdesk.com/en/support/solutions/articles/7000059769-interpreting-confidence-match-scores\" target=\"_blank\">See here for more information</a>.",
        "operationId": "confidenceMatchSearch",
        "summary": "Confidence Match Search",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "country",
            "in": "query",
            "example": "GB",
            "description": "Iso-2 country code",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "matchThreshold",
            "in": "query",
            "example": 905,
            "description": "Return matches above this score (900 - 999)",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "regNo",
            "in": "query",
            "description": "Local Company Identifier - The Company identifier associated with it's Domestic Filing Agency. i.e. French SIREN/SIRET, United Kingdom Companies House CRN.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "vatNo",
            "in": "query",
            "description": "Company VAT Number",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "name",
            "in": "query",
            "description": "Company Name",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "street",
            "in": "query",
            "description": "Address part identifier - Street of the Company",
            "schema": {
              "type": "string",
              "nullable": true,
              "default": null
            }
          },
          {
            "name": "houseNo",
            "in": "query",
            "description": "Address part identifier - House/Building Number of the Company",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "city",
            "in": "query",
            "description": "Address part identifier - City of the Company",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "postCode",
            "in": "query",
            "description": "Address part identifier - Postcode/Zip Code of the Company.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "province",
            "in": "query",
            "description": "Address part identifier - Province of the Company",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "Address part identifier - State of the Company",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "phoneNo",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "reference1",
            "in": "query",
            "description": "Customer supplied free text reference 1 of 3",
            "example": "free text 1",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reference2",
            "in": "query",
            "description": "Customer supplied free text reference 2 of 3",
            "example": "free text 2",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reference3",
            "in": "query",
            "description": "Customer supplied free text reference 3 of 3",
            "example": "free text 3",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string",
              "nullable": true,
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Connect.ConfidenceMatch.MatchResults"
                    },
                    {
                      "$ref": "#/components/schemas/Connect.ConfidenceMatch.NoResults"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/people/searchcriteria": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "description": "Returns the set of available People Search parameters/fields for a provided list of countries.",
        "operationId": "people/DirectorSearchCriteria",
        "summary": "People/Director Search Criteria",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "countries",
            "in": "query",
            "description": "A comma separated list of ISO/Alpha 2 format country codes, or singular country Code. e.g. US,GB will return the common searchable People/Director fields in the United States and Great Britain.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchemaSetDirector"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/people": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "description": "Endpoint to find Directors based on search criteria to order a Creditsafe Director Report.",
        "operationId": "directorSSearch",
        "summary": "Director Search",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "name": "countries",
            "in": "query",
            "example": "GB,FR",
            "description": "comma-separated list of iso-2 country codes",
            "required": true,
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
              }
            }
          },
          {
            "name": "peopleId",
            "in": "query",
            "description": "Person/Director Identifier - used to order a Director Report.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Person's First Name.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Person's Last Name",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "localDirectorNumber",
            "in": "query",
            "description": "Local Identifier of the Director, the PNR in GB.",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "dateOfBirth",
            "in": "query",
            "description": "Person DOB - provide YYYY-MM-DD or YYYY-MM format.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchResponse_1_Creditsafe.GlobalData.DirectorSearchData"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/people/{peopleId}": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "operationId": "directorReport",
        "summary": "Director Report",
        "description": "Returns a report from the ID supplied to the search.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Report Language - The JSON structure of the Report is language invariant, but field content will return as the given language, where available.",
            "schema": {
              "pattern": "^[a-zA-Z]{2}$",
              "type": "string",
              "default": "en"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "peopleId",
            "in": "path",
            "description": "Identifier of the Person/Director required to order their Director Report. Obtained from `/people` search results.",
            "required": true,
            "schema": {
              "pattern": "^[a-zA-Z]{2}([0-9]{1,3})?[-]{1}[a-zA-Z0-9$]+$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directors.DirectorReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/images/companies": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Returns the available Images for a given Company connectId.",
        "operationId": "companyImageDocuments",
        "summary": "Company Image Documents",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "name": "Id",
            "in": "query",
            "description": "The company's connectId.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "olderThan",
            "in": "query",
            "description": "Returns Images older than this date. Use with newerThan parameter.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "newerThan",
            "in": "query",
            "description": "Returns Images newer than this date. Use with olderThan parameter.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Images.CompanyImages"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/images/companies/types": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Lists available Image Document formats, types and languages per country.",
        "operationId": "imageDocumentCategoryTypes",
        "summary": "Image Document Category Types",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "countries",
            "in": "query",
            "description": "Filter Images by country.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Images.CompanyImageTypes"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/images/{imageId}": {
      "get": {
        "tags": [
          "Images"
        ],
        "description": "Endpoint to order an Image Document by Image ID.",
        "operationId": "companyImage",
        "summary": "Company Image",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "imageId",
            "in": "path",
            "description": "Image ID retrieved from `images/companies`",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Image object as a binary stream.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Core.Attachment.BinaryAttachment"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/freshinvestigations": {
      "post": {
        "operationId": "createFreshInvestigation",
        "summary": "Create Fresh Investigation",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Places an order for a Fresh Investigation (Offline Report). Providing as much detail as possible about the Company, our team will use official sources and registries to quickly answer questions about a company's stability and financial health. Fresh Investigations take 5.5 days on average to complete. By adding `consent:true` to the request, you are allowing Creditsafe to disclose your company details to the company you have requested the Investigation against, to be used only in the aim of improving our Investigation report.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.FreshInv.CreateInvestigation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.FreshInv.InvestigationConfirmed"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getFreshInvestigations",
        "summary": "Get Fresh Investigations",
        "tags": [
          "Fresh Investigations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "name": "transactionId",
            "in": "query",
            "description": "Fresh Investigation Identifier used internally and with our data partners.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "reportCreatedAfter",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Fresh Investigations processed after this date",
            "example": "2020-01-01T11:23:56Z"
          },
          {
            "name": "reportCreatedBefore",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns ordered Fresh Investigations that were processed before this date",
            "example": "2020-01-01T11:23:56Z"
          },
          {
            "name": "createdBefore",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns Fresh Investigations created before this date"
          },
          {
            "name": "createdSince",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "description": "Returns ordered Fresh Investigations created after this date"
          },
          {
            "name": "lookUpOrderBy",
            "description": "Use to search for your Fresh Investigations by either the returned Company Details in the `GET` `freshInvestigations/{orderId}` endpoint or your supplied Search Criteria in the `POST` `/freshInvestigations` endpoint",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "CompanyDetails",
                "SearchCriteria"
              ]
            }
          },
          {
            "name": "companyDetailsCountry",
            "in": "query",
            "description": "Looks for your returned Fresh Investigations where the returned Company Country is named this. Use with lookUpOrderBy=CompanyDetails",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyDetailsName",
            "in": "query",
            "description": "Looks for your returned Fresh Investigations where the returned Company Name is named this. Use with lookUpOrderBy=CompanyDetails",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteriaCountry",
            "in": "query",
            "description": "Looks for your returned Fresh Investigations where your submitted Search Criteria Company Country is this. Use with lookUpOrderBy=searchCriteria",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "searchCriteriaName",
            "in": "query",
            "description": "Looks for your Fresh Investigations where your submitted Search Criteria Company Name is this. Use with lookUpOrderBy=searchCriteria",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sorts  returned Fresh Investigations by this field",
            "schema": {
              "type": "string",
              "enum": [
                "creationDate",
                "lastStatusChangeDate",
                "orderID",
                "status"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/sortDir"
          }
        ],
        "description": "Returns a list of your submitted Fresh Investigation Orders.",
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.FreshInv.ListInvestigations"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/freshinvestigations/{orderId}": {
      "get": {
        "operationId": "retrieveFreshInvestigationOrder",
        "summary": "Retrieve FreshInvestigation Order",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Returns a specific Fresh Investigation order.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "sections",
            "in": "query",
            "description": "Specify a value to return a single section, or multiple-comma separated sections of the completed Fresh Investigation. Leave null to return all sections. Available sections; - `companyIdentification` - `creditScore` - `contactInformation` - `directors` - `otherInformation` - `groupStructure` - `extendedGroupStructure` - `financialStatements` - `negativeInformation` - `additionalInformation`- `directorships` - `localFinancialStatements` - `paymentData` - `companySummary` - `alternateSummary`",
            "schema": {
              "type": "string"
            },
            "example": "companyIdentification,creditScore"
          },
          {
            "name": "comments",
            "in": "query",
            "description": "Selects number of comments which should be returned with the order details.",
            "schema": {
              "type": "string",
              "enum": [
                "last",
                "recent",
                "none"
              ],
              "default": "last"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns a specific Fresh Investigation Order. For completed orders this will contain the Investigation content as Report Sections.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.FreshInv.CompletedInvestigation"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deleteFreshInvestigations",
        "summary": "Delete Fresh Investigations",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Deletes specified investigations.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "Investigation id.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeleteFreshInvetigationsByOrderId"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          }
        }
      },
      "patch": {
        "operationId": "updateFreshInvestigationReportContent",
        "summary": "Update FreshInvestigation Report Content",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Update the Fresh Investigation Report data for a specific order, after the order has a status of delivered.",
        "parameters": [
          {
            "name": "orderId",
            "description": "Fresh investigation orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectUpdateFreshInvestigation"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Investigation Report.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Success response of updated fresh investigation.",
                      "example": "FreshInvestigation OrderId is being updated"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Resource not found"
                    },
                    "details": {
                      "type": "string",
                      "description": "Provides further information on why the request was rejected"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/freshinvestigations/{orderId}/attachments'": {
      "post": {
        "operationId": "uploadAttachmentsForFreshInvestigationOrderId",
        "summary": "Upload attachments for fresh investigation orderId",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Returns the status of attachment upload for the partcular order.",
        "parameters": [
          {
            "name": "orderId",
            "description": "Fresh investigation orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/FreshInvestigationAttachmentUploadForOrderRequest"
              },
              "example": {
                "file": "FILE_PATH"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreshInvestigationAttachmentUploadForOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "getAttachmentsForTheGivenFreshInvestigationOrderId",
        "summary": "Get attachments for the given fresh investigation orderId",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Returns attachments available for that particular order.",
        "parameters": [
          {
            "name": "orderId",
            "description": "fresh investigation orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreshInvestigationGetAttachmentsForOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/freshinvestigations/{orderId}/attachments/{id}": {
      "get": {
        "operationId": "getAttachmentForTheGivenFreshInvestigationAttachmentId",
        "summary": "Get attachment for the given fresh investigation attachment Id",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Retrieve attachment for the given attachmentId.",
        "parameters": [
          {
            "name": "orderId",
            "description": "fresh investigation orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "description": "fresh investigation attachment id for the given order",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Attachment as a binary stream.",
            "content": {
              "application/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreditsafeGlobalDataCoreAttachmentBinaryAttachment"
                }
              },
              "text/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreditsafeGlobalDataCoreAttachmentBinaryAttachment"
                }
              },
              "image/*": {
                "schema": {
                  "$ref": "#/components/schemas/CreditsafeGlobalDataCoreAttachmentBinaryAttachment"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/freshinvestigations/{orderId}/comments": {
      "post": {
        "operationId": "commentsForFreshInvestigationOrderId",
        "summary": "Comments for fresh investigation orderId",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Returns the status of comments for the particular order.",
        "parameters": [
          {
            "name": "orderId",
            "description": "fresh investigation orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FreshInvestigationCommentsForOrderRequest"
              },
              "example": {
                "comments": "comments by user"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FreshInvestigationCommentsForOrderResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "retrieveCommentsOfSpecifiedFreshInvestigationReport",
        "summary": "Retrieve comments of specified FreshInvestigation Report",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Returns the Fresh Investigation Report comments for a specific order.",
        "parameters": [
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "description": "FreshInvestigation Report Id",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Investigation Report.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetFreshInvestigationCommentsByOrderIdResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/freshinvestigations/{orderId}/report": {
      "get": {
        "operationId": "retrieveFreshInvestigationReportContent",
        "summary": "Retrieve FreshInvestigation Report Content",
        "tags": [
          "Fresh Investigations"
        ],
        "description": "Returns the Fresh Investigation Report data for a specific order, after the order has a status of delivered.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "orderId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Investigation Report.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyReportResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/user/details": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "You would use this endpoint to retrieve the user details related to the Global Monitoring product, such as the user's information.",
        "operationId": "monitoringUserDetails",
        "summary": "Monitoring User Details",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.UserDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint allows you to manage portfolios. You can use the GET method to retrieve all portfolios associated with the user.",
        "operationId": "listAllPortfolios",
        "summary": "List All Portfolios",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return portfolios that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.ListPortfolios"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio resource not found"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint to create a new Portfolio based on the supplied criteria.<br><br> A portfolio can contain any number of companies that you wish to monitor changes to. The only required Body parameter is \"name\" for Connect users.",
        "operationId": "createMonitoringPortfolio",
        "summary": "Create Monitoring Portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.CreatePortfolioRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.CreatePortfolioResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/import": {
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint allows you to import a list of companies to add to the selected portfolio along with some personal information for the company. Importing a portfolio will add the companies to the specified portfolio, duplicates in the import file will be ignored.You may also optionally add an email to the body of the request and get an email notification when the import is processed..",
        "operationId": "importAPortfolioFile",
        "summary": "Import A Portfolio File",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.ImportAndSyncPortfolioRequest"
              },
              "example": {
                "importCsv": "FILE_PATH",
                "email": "john.smith@creditsafe.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.ImportAndSyncPortfolioResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/sync": {
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint allows you to sync a portfolio file with your portfolio. Sync action will delete all companies in your specified portfolio, and then add the companies from the file into the portfolio.",
        "operationId": "syncAPortfolioFile",
        "summary": "Sync A Portfolio File",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.ImportAndSyncPortfolioRequest"
              },
              "example": {
                "importCsv": "FILE_PATH",
                "email": "john.smith@creditsafe.com"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.ImportAndSyncPortfolioResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint allows you to retrieve the portfolio details from the portfolioId.",
        "operationId": "retrievePortfolioById",
        "summary": "Retrieve Portfolio By Id",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier for the portfolio that you wish to retrieve, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.GetPortfolioById"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio resource not found"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint allows you to delete the portfolio using the portfolioId.",
        "operationId": "deletePortfolio",
        "summary": "Delete Portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio that you wish to delete, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.DeletePortfolio"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio resource not found"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint allows you to update Portfolio details such as Name, email recipients, language and subject line.",
        "operationId": "updatePortfolioDetails",
        "summary": "Update Portfolio Details",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.UpdatePortfolioRequest"
              },
              "example": {
                "name": "New portfolio Name",
                "emails": [
                  {
                    "firstName": "John",
                    "lastName": "Smith",
                    "emailAddress": "john.smith@creditsafe.com"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/countries": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint provides a list of distinct countries associated with the companies monitored within a specific portfolio.",
        "operationId": "listCountriesOfMonitoredCompanies",
        "summary": "List Countries of Monitored Companies",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.MonitoredCountriesInPortfolio"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoints gets all companies from a specific portfolio based on the portfolio id, optionally filter with query parameters.",
        "operationId": "listCompaniesInAPortfolio",
        "summary": "List Companies In A Portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return companies that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Return <<resourcePathName>> that match the given countryCode",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.CompaniesInAPortfolio"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to add a company using a company id, into a portfolio provided in as a path parameter. Optional fields can be used to add a personalReference, freeText, and personalLimit.",
        "operationId": "addCompanyToPortfolio",
        "summary": "Add Company To Portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.AddCompanyToPortfolioRequest"
              },
              "example": {
                "id": "GB-0-12345678",
                "personalReference": "Some text",
                "freeText": "Some useful test",
                "personalLimit": "40"
              }
            }
          },
          "required": false
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.AddCompanyToPortfolioResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            }
          },
          "409": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "correlationId": {
                      "type": "string",
                      "description": "A unique ID assigned to this request.",
                      "example": "23921650-c073-11ea-860f-06bc8182190e"
                    },
                    "message": {
                      "type": "string",
                      "description": "A status message relating to your request.",
                      "example": "Company  GB-1-7586731 already in portfolio"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/copy": {
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint allows you to copy companies from one portfolio to another. You can specify the source and destination portfolios to perform the copy operation.",
        "operationId": "copyCompaniesBetweenPortfolios",
        "summary": "Copy Companies Between Portfolios",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio you want to copy companies from, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "copyAll",
            "in": "query",
            "description": "When CopyAll query parameter is False, portfolios and companies list needs to be passed. When CopyAll query parameter is True, only portfolios need to be passed and companies List must be empty. All companies are copied from current portfolio are considered here.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.CopyAndMoveCompaniesRequest"
              },
              "example": {
                "portfolios": [
                  196854,
                  197369
                ],
                "companies": [
                  {
                    "id": "BE-X-733313367"
                  },
                  {
                    "id": "BE-X-868222848"
                  },
                  {
                    "id": "BE-X-835695382"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.CopyAndMoveCompaniesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/remove": {
      "post": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint allows you to move companies from one portfolio to single (or) multiple portfolios. Removes the companies from the portfolio provided in the path parameter.",
        "operationId": "moveCompaniesBetweenPortfolios",
        "summary": "Move Companies Between Portfolios",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio you want to move companies from, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "removeAll",
            "in": "query",
            "description": "When RemoveAll query parameter is False, a portfolios and companies list needs to be passed. When RemoveAll query parameter is True, only portfolios need to be passed and companies List must be empty. All companies are moved and deleted from current portfolio.",
            "schema": {
              "type": "boolean",
              "default": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.CopyAndMoveCompaniesRequest"
              },
              "example": {
                "portfolios": [
                  196854,
                  197369
                ],
                "companies": [
                  {
                    "id": "BE-X-733313367"
                  },
                  {
                    "id": "BE-X-868222848"
                  },
                  {
                    "id": "BE-X-835695382"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.CopyAndMoveCompaniesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/clear": {
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "This endpoint allows for companies to be deleted from the specified portfolio.",
        "operationId": "clearCompaniesFromPortfolio",
        "summary": "Clear Companies From Portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "clearAll",
            "in": "query",
            "description": "When ClearAll query parameter is False,Companies List needs to be passed. When ClearAll query parameter is True, Companies List must be empty. All companies will be deleted",
            "schema": {
              "type": "boolean",
              "default": false
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio you want to delete companies from, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.ClearCompaniesRequest"
              },
              "example": {
                "companies": [
                  "BE-X-733313367",
                  "BE-X-868222848"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.ClearCompaniesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolios not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/{companyId}": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "operationId": "getCompanyDetailsFromAPortfolio",
        "summary": "Get Company Details From A Portfolio",
        "description": "This endpoint allows you to get various company details from a portfolio. Requires a portfolioID and companyID in the PATH of the request.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.GetCompanyFromPortfolio"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to delete a company from a portfolio.",
        "operationId": "deleteCompanyFromPortfolio",
        "summary": "Delete Company From Portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.DeleteCompanyFromPortfolio"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "example": "{\"message\": \"Company not found\" }"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Updates the company details in a specified portfolio.",
        "operationId": "updateCompanyDetailsInPortfolio",
        "summary": "Update Company Details In Portfolio",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.UpdateCompanyDetailsInPortfolioRequest"
              },
              "example": {
                "personalReference": "personal reference",
                "freeText": "Some useful text",
                "personalLimit": "40"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.UpdateCompanyInPortfolio"
                }
              }
            }
          },
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/eventRules": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all notification `eventRules` for the given `portfolioId`. Notification event rules allow you to control which events you wish to monitor for the `companies` contained within the given `portfolio`.",
        "operationId": "listPortfolioEventRules",
        "summary": "List Portfolio Event Rules",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "description": "The unique identifier for the portfolio that you wish to retrieve notification event rules for, obtained from `/portfolios`.",
            "required": true,
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.ListPortfolioEventRules"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/eventRules/{countryCode}": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to that lists all the eventRules, their status and parameters based on a portfolio Id, filtered by country. Newly created portfolios are without any notification event rules by default, but you can switch rules on/off per country or on a global basis. There are different rules available for each country due to the different type of change event data that's available. The following GET request lists all the available rules for a portfolio.",
        "operationId": "listPortfolioEventRulesByCountry",
        "summary": "List Portfolio Event Rules By Country",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country code to show events for.",
            "required": true,
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.ListPortfolioEventRules"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found"
                  }
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to update an eventRule in a portfolio. Must provide a portfolio unique identifier and a country code in the URL of the PUT request. The Body of the request must contain the `ruleCode` number of the eventRule you want to update, with an `isActive` parameter. Some event rules may also contain specific parameters, which can be set with `param0`, `param1` and `param2`. parameters. Get the above information by calling the List All eventRules endpoint.",
        "operationId": "updateEventRules",
        "summary": "Update EventRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country code to show events for",
            "required": true,
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.UpdateEventRulesRequest"
              },
              "example": [
                {
                  "ruleCode": 101,
                  "isActive": 1,
                  "param0": true,
                  "param1": "15",
                  "param2": "10"
                },
                {
                  "ruleCode": 1802,
                  "isActive": 1,
                  "param0": "10"
                },
                {
                  "ruleCode": 1815,
                  "isActive": 0
                }
              ]
            }
          },
          "required": true
        },
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/eventRules/setDefault": {
      "put": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Update a portfolios event rules to default state. In Connect, default state means all rules are turned off.",
        "operationId": "setPortfolioDefaultRules",
        "summary": "Set Portfolio Default Rules",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "message": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/riskSummary": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get current portfolio risk summary information.",
        "operationId": "portfolioRiskSummary",
        "summary": "Portfolio Risk Summary",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.RiskSummary"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/notificationEvents": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all notificationEvents based on the portfolio id, optionally filter with query parameters.",
        "operationId": "listPortfolioNotifications",
        "summary": "List Portfolio Notifications",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/sortDir"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/startDate"
          },
          {
            "$ref": "#/components/parameters/endDate"
          },
          {
            "$ref": "#/components/parameters/filterByCreatedDate"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.AllNotificationsEvents"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/companies/{id}/notificationEvents": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "operationId": "listCompanySpecificNotificationEvents",
        "summary": "List Company Specific NotificationEvents",
        "description": "List of notification events based on the company id,optionally filtered with query parameters.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/sortDir"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "schema": {
              "type": "integer",
              "default": 50
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "name": "isProcessed",
            "in": "query",
            "description": "A flag that can be set to `true` boolean value to mark it as an event that has been actioned.",
            "schema": {
              "type": "boolean",
              "enum": [
                true,
                false
              ]
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
            "schema": {
              "type": "string",
              "default": "companyName",
              "enum": [
                "companyName",
                "countryCode",
                "eventId",
                "eventDate"
              ]
            }
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/portfolios/{portfolioId}/sharingPermissions": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "operationId": "portfolioUserPermissions",
        "summary": "Portfolio User Permissions",
        "description": "Retrieve user permissions within the customer for a portfolio.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.ListSharingPermissions"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Update/Create user permissions within the customer for portfolio.",
        "operationId": "sharePortfolioWithUsers",
        "summary": "Share Portfolio With Users",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the portfolio, obtained from `/portfolios`.",
            "schema": {
              "type": "number"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Monitoring.SharePortfolioRequest"
              },
              "example": {
                "revokeAll": "false",
                "userPermissions": [
                  {
                    "csUserId": 101106166,
                    "permissions": "View,Add"
                  },
                  {
                    "csUserId": 1000027380,
                    "permissions": "View,Add,Edit,Remove"
                  }
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.SharePortfolioRequestResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Portfolio not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/companies/{id}/events": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Endpoint to return a collection of `events` for the given company, optionally filtered on the supplied search criteria. Event information will only be returned if the company exists in at least one of your `portfolios`.",
        "operationId": "listCompanyEvents",
        "summary": "List Company Events",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "$ref": "#/components/parameters/startDate"
          },
          {
            "$ref": "#/components/parameters/endDate"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The connectId of the company that you wish to retrieve events for.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.CompanyEvents"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/eventRules": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all available notification event rules. Notification event rules allow you to control which events you wish to monitor for the `companies` contained within a given `portfolio`.",
        "operationId": "allEventRules",
        "summary": "All EventRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.EventRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found "
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/eventRules/{countryCode}": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all available notification event rules for the given `countryCode`. Notification event rules allow you to control which events you wish to monitor for the `companies` contained within a given `portfolio`.",
        "operationId": "filteredEventRules",
        "summary": "Filtered EventRules",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "ISO/Alpha 2 format country code for which notification event rules will be returned.",
            "required": true,
            "schema": {
              "maxLength": 2,
              "minLength": 2,
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.EventRulesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "EventRule resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/monitoring/notificationEvents": {
      "get": {
        "tags": [
          "Global Monitoring"
        ],
        "description": "Get all notification events generated for companies monitored in your portfolios, based on the notification rules enabled. The notification events returned will be filtered based upon the supplied search criteria.",
        "operationId": "allNotificationEvents",
        "summary": "All Notification Events",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "schema": {
              "type": "string"
            }
          },
          {
            "$ref": "#/components/parameters/sortBy"
          },
          {
            "$ref": "#/components/parameters/sortDir"
          },
          {
            "$ref": "#/components/parameters/startDate"
          },
          {
            "$ref": "#/components/parameters/endDate"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "$ref": "#/components/parameters/filterByCreatedDate"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Monitoring.AllNotificationsEvents"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "NotificationEvent resource not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/decisionEngine/instances": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Returns all instances (Decision Trees) a user has permission to access.",
        "operationId": "returnAllInstances",
        "summary": "Return All Available Instances",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "customerId",
            "description": "The unique identifier of the customer. If used it will return all the Decision Trees associated to that customer.",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "userId",
            "description": "The unique identifier of the user. If used it will return all the Decision Trees that user has access to.",
            "in": "query",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetDecisionEngineInstancesResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesResourceNotFoundRequest"
                }
              }
            }
          }
        }
      }
    },
    "/decisionEngine/instance/{guid}": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Returns instance user has permission to access.",
        "operationId": "instanceConfiguration",
        "summary": "Instance Configuration",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "description": "Get results by guid.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesResourceNotFoundRequest"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Update the instances information.<br><br>You will need to call the `GET /decisionEngine/instance/{guid}` endpoint to get the current configuration and then update the fields you want to change.",
        "operationId": "updateInstanceConfiguration",
        "summary": "Update Instance Configuration",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDecisionEngineInstanceRequestBodyWithExample"
              }
            }
          }
        },
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "guid",
            "in": "path",
            "required": true,
            "description": "get results by guid.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesResourceNotFoundRequest"
                }
              }
            }
          }
        }
      }
    },
    "/decisionEngine/GUID": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Returns all decision trees that the user has permission to access.",
        "operationId": "decisionTrees",
        "summary": "Decision Trees",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Filter the returned decision trees by their associated decision tree type.",
            "schema": {
              "type": "string",
              "enum": [
                "Credit Approval",
                "Bespoke",
                "Demo"
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.DecisionEngine.GUIDListResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/decisionEngine/{provenirId}/userDataFields": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Returns the user data fields defined for the given decision tree GUID.",
        "operationId": "userDataFields",
        "summary": "User Data Fields",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "provenirId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the decision tree, obtained from `/GUID`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.DecisionEngine.UserDataFieldsResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/decisionEngine/{provenirId}": {
      "post": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Runs the provided decision tree for the given company, optionally using the data provided in the body of the call.",
        "operationId": "runDecisionTree",
        "summary": "Run Decision Tree",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "provenirId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the decision tree to run, obtained from `/GUID`.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "required": true,
            "description": "The Connect ID for the company that you wish to run the decision tree on. Obtained from `/companies` search results. A Connect ID is the primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
            "schema": {
              "type": "string",
              "example": "GB-0-03836192"
            }
          },
          {
            "name": "originationId",
            "in": "query",
            "required": false,
            "description": "An optional field that will allow text passed through to be stored against the decision. Typically used for internal identifiers (e.g. SalesForce IDs).",
            "schema": {
              "type": "string",
              "example": "SFC-1976"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "The POST body should contain the User Data Fields for the decision tree you want to run obtained via the `/{guid}/userDataFields` endpoint.",
                "example": {
                  "productType": "Product A",
                  "isCustomer": "Yes",
                  "salesValue": 197600
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.DecisionEngine.RunDecisionResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/decisionEngine/usageLog": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Returns a log of all previously ran decisions that the user has permission to access, optionally filtered.",
        "operationId": "decisionHistory",
        "summary": "Decision History",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "provenirId",
            "in": "query",
            "description": "Filter the returned usage log by the GUID for the associated decision trees, obtained from `/GUID`.",
            "schema": {
              "type": "string",
              "example": "repoObj_0ed6a4aa_16e17d977e9_07ffb16e17d977e9"
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "Filter the returned usage log by the Connect ID for the associated companies for each decision.",
            "schema": {
              "type": "string",
              "example": "US001-X-US60521352"
            }
          },
          {
            "name": "companyName",
            "in": "query",
            "description": "Filter the returned usage log by the Company Name for the associated companies for each decision.",
            "schema": {
              "type": "string",
              "example": "CREDITSAFE"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter the returned usage log by the status for each decision.",
            "schema": {
              "type": "number",
              "example": 1
            }
          },
          {
            "name": "fromDate",
            "in": "query",
            "description": "Filter the returned usage log by the date the the decision was run.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "toDate",
            "in": "query",
            "description": "Filter the returned usage log by the date the the decision was run.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.DecisionEngine.UsageLogResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/decisionEngine/usageLog/{decisionLogId}": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Returns a specified decision log for a previously ran decision.",
        "operationId": "getDecisionLog",
        "summary": "Get Decision Log",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "decisionLogId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the decision log to retrieve, obtained from `/usageLog`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.DecisionEngine.DecisionLogResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Updates the status and/or notes for a specified decision.",
        "operationId": "updateDecisionLog",
        "summary": "Update Decision Log",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "decisionLogId",
            "in": "path",
            "required": true,
            "description": "The unique identifier of the decision log to retrieve, obtained from `/usageLog`.",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.DecisionEngine.UpdateDecisionRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.DecisionEngine.DecisionLogResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/consumers": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "description": "Consumer Search and Report endpoint. When sufficient information has been provided to filter potential Consumer results down to one record then the Consumer Report will be returned.",
        "operationId": "consumerReport",
        "summary": "Consumer Report",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "countries",
            "in": "query",
            "example": "DE",
            "description": "ISO-2 country code",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "",
            "schema": {
              "type": "string",
              "nullable": true,
              "default": "EN",
              "maxLength": 2,
              "minLength": 2
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Consumer's First Name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Consumer's Last Name",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "street",
            "in": "query",
            "description": "Address part identifier - Street of the Consumer",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "houseNo",
            "in": "query",
            "description": "Address part identifier - House/Building Number of the Consumer",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "city",
            "in": "query",
            "description": "Address part identifier - City of the Consumer",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "postCode",
            "in": "query",
            "description": "Address part identifier - Postcode/Zip Code of the Consumer",
            "schema": {
              "type": "string"
            },
            "required": true
          },
          {
            "name": "dateOfBirth",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "customData",
            "in": "query",
            "example": "de_reason_code::ER",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string",
              "nullable": true,
              "default": null
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalSize": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "consumers": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerReport"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/consumers/searchcriteria": {
      "get": {
        "tags": [
          "Consumers"
        ],
        "description": "Returns country specific fields that can be used to search for a Consumer.",
        "operationId": "consumerSearchCriteria",
        "summary": "Consumer Search Criteria",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "countries",
            "in": "query",
            "description": "Comma-separated list of ISO-2 country codes",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "allOf": [
                      {
                        "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ConsumerCriteriaSet"
                      }
                    ]
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/protect/investigations": {
      "post": {
        "operationId": "createProtectInvestigation",
        "summary": "Create Protect Investigation",
        "description": "Creates an Investigation according to the provided Investigation criteria. Each result is potential match which is attributed a relevancy/match score between 1-100 and a high level reason for it's inclusion in the World Compliance Database by looking at the Reason Listed and Comments to firstly ascertain whether the entry is a match for you search criteria and then utilize the data available for your own onboarding needs.",
        "tags": [
          "Protect Investigations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Protect.CreateInvestigationQueryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.InvestigationResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "listAllProtectInvestigations",
        "summary": "List All Protect Investigations",
        "description": "Endpoint to return all investigations. Filter response by using query parameters. Use the alertsCount parameter to only return Investigations with alerts greater than the supplied value.",
        "tags": [
          "Protect Investigations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "scheduled",
            "in": "query",
            "schema": {
              "type": "boolean",
              "nullable": false
            }
          },
          {
            "name": "alertsCount",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "business",
                "individual"
              ]
            }
          },
          {
            "name": "q",
            "description": "Keyword search: It searches in the 'name' fields of the investigation.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "asc",
                "desc"
              ]
            }
          },
          {
            "name": "orderBy",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "alertCount",
                "city",
                "country",
                "createdAt",
                "dateOfBirth",
                "name",
                "profile",
                "province",
                "searchAt",
                "street"
              ]
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "Successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connect.Protect.Investigation"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/protect/investigations/{investigationId}": {
      "get": {
        "operationId": "returnProtectInvestigationById",
        "summary": "Return Protect Investigation By Id",
        "description": "Endpoint to return a specific Investigation by ID. Can also be used to retrieve the associated Schedule Id that has been linked to the Investigation.",
        "tags": [
          "Protect Investigations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.InvestigationResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "deleteInvestigation",
        "summary": "Delete Investigation",
        "description": "Deletes an Investigation by {Id} number. This will remove the entire Investigation and all results within it.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully Processed"
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/investigations/{investigationId}/records": {
      "post": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "addInvestigationsRecords",
        "summary": "Add Investigations Records",
        "description": "Requires the 'Investigation Id' in path, followed by 'Record Id' in the request body to add a record to the previously created Investigation.<br><br>By adding InvestigationRecords you are confirming that the result is a match to your search criteria. <br><br>To return to the original Investigation search to allocate other records, use \"GET Investigation results by ID.\".",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Protect.CreateInvestigationRecordBody"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Protect.CreateInvestigationRecordBody"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Protect.CreateInvestigationRecordBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connect.Protect.Record"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connect.Protect.Record"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "get": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "returnInvestigationsRecords",
        "summary": "Return Investigation Records",
        "description": "Requires the 'Investigation Id' in path.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "description": "Investigation Id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connect.Protect.Record"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL5bb0b0"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "updateInvestigationsRecords",
        "summary": "Update Investigation Records",
        "description": "Sends an update to the investigation specified by the ID and changes will be reflected within that investigation.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvestigationRecordsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvestigationRecordsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateInvestigationRecordsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Record"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Record"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "deleteInvestigationRecords",
        "summary": "Delete Investigation Records",
        "description": "Deletes a record from an Investigation ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRecordsDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRecordsDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/DeleteRecordsDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Record"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Record"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dto"
      }
    },
    "/protect/investigations/{investigationId}/results": {
      "get": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "getInvestigationResultsById",
        "summary": "Get Investigation Results By Id",
        "description": "Returns original Investigation search results to assign any other results to the records.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "items": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Record"
                      }
                    }
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Record"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/investigations/{id}/risk": {
      "put": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "assignRiskToInvestigation",
        "summary": "Assign Risk to Investigation",
        "description": "Allows user to update the risk with an Investigation.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRiskToInvestigationDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRiskToInvestigationDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AssignRiskToInvestigationDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestigationRiskResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestigationRiskResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "assignedRiskDto"
      }
    },
    "/protect/investigations/file": {
      "post": {
        "tags": [
          "Protect Investigations"
        ],
        "description": "Creates an investigation and returns a link to the report.",
        "operationId": "createInvestigationAndReturnReportLink",
        "summary": "Create Investigation And Return Report Link",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvestigationQueryDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvestigationQueryDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvestigationQueryDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          },
          "default": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "query"
      }
    },
    "/protect/investigations/{investigationId}/records/file": {
      "post": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "returnsInvestigationReport",
        "summary": "Returns Investigation Report",
        "description": "This endpoint will Return a report by providing a file path.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvestigationFileBodyDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvestigationFileBodyDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/GetInvestigationFileBodyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dto"
      }
    },
    "/protect/investigations/{id}/notes": {
      "post": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "createInvestigationNote",
        "summary": "Create Investigation Note",
        "description": "Creates a note to a specific investigation ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvestigationNoteDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvestigationNoteDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateInvestigationNoteDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestigationNote"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvestigationNote"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "note"
      },
      "get": {
        "tags": [
          "Protect Investigations"
        ],
        "operationId": "getInvestigationNotes",
        "summary": "Get Investigation Notes",
        "description": "Returns the notes created against a specific investigation ID.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvestigationNote"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvestigationNote"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvestigationNote"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/InvestigationNote"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/protect/profiles": {
      "post": {
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "operationId": "createProtectProfile",
        "summary": "Create Protect Profile",
        "description": "Creates an empty profile for collating investigations.",
        "tags": [
          "Protect Profile"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Protect.CreateProfileDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.Profile"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          }
        }
      },
      "get": {
        "operationId": "listAllProtectProfiles",
        "summary": "List All Protect Profiles",
        "description": "Returns all profiles for the logged in user or filtered with a matching profile name.",
        "tags": [
          "Protect Profile"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "name",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connect.Protect.Profile"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/protect/profiles/{profileId}": {
      "get": {
        "operationId": "retrieveProtectProfileByID",
        "summary": "Retrieve Protect Profile By ID",
        "description": "Retrieves a profile by Id in the Path.",
        "tags": [
          "Protect Profile"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.Profile"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "put": {
        "description": "Endpoint to change the name of a profile.",
        "operationId": "editProtectProfile",
        "summary": "Edit Protect Profile",
        "tags": [
          "Protect Profile"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Protect.CreateProfileDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.Profile"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/profiles/{profileId}/investigations": {
      "get": {
        "operationId": "listInvestigationsInAProfile",
        "summary": "List Investigations In A Profile.",
        "description": "Endpoint to retrieve all Investigations associated with a specific Profile.",
        "tags": [
          "Protect Profile"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          },
          {
            "name": "query.type",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Connect.Protect.CreateInvestigationQueryDto"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connect.Protect.Investigation"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/profiles/{profileId}/investigations/{investigationId}": {
      "put": {
        "operationId": "addInvestigationToProfile",
        "summary": "Add Investigation To Profile",
        "description": "Adds an Investigation to a Profile.",
        "tags": [
          "Protect Profile"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "profileId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/investigations/{investigationId}/file": {
      "post": {
        "operationId": "createProtectInvestigationPDF",
        "summary": "Create Protect Investigation PDF",
        "description": "Creates a PDF that shows the full report for the selected entities. This report will include search criteria used, user, time/date stamp and full World Compliance Report. It is recommended to call this endpoint before adding InvestigationRecords to an Investigation, as only non-processed alerts populate the PDF.",
        "tags": [
          "Protect Investigations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "investigationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Protect.GetInvestigationFileBodyDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.InvestigationFileResponse"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/schedules": {
      "post": {
        "operationId": "createProtectSchedule",
        "summary": "Create Protect Schedule",
        "description": "Creates a Schedule to check against new sanctions that effect your chosen Investigation. <br>The frequency of the schedule is set to 'daily' as a default.<br><br> To receive notifications of alerts you need to follow this POST call with PUT/Update Schedules to set the 'isEmailRequired' to `true`.",
        "tags": [
          "Protect Schedules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectProtectCreateScheduleRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.Schedule"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/schedules/{id}": {
      "put": {
        "tags": [
          "Protect Schedules"
        ],
        "operationId": "updatesSchedule",
        "summary": " Updates Schedule",
        "description": "Endpoint will update the details around the schedule.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "description": "Enter the schedule id.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScheduleDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScheduleDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/CreateScheduleDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Schedule"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "dto"
      },
      "get": {
        "operationId": "retrieveScheduleById",
        "summary": "Retrieve Schedule By Id",
        "description": "Endpoint to retrieve a specific Schedule by Id. A Schedule Id can be retrieved from the associated Investigation.",
        "tags": [
          "Protect Schedules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "description": "Enter the schedule id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.Schedule"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "deletesScheduleFromInvestigation",
        "summary": "Deletes Schedule from Investigation",
        "description": "Deletes a Schedule from an Investigation meaning entity will no longer be monitored on a nightly basis but record will still remain in the audit trail.",
        "tags": [
          "Protect Schedules"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "description": "Enter the schedule id.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "204": {
            "description": "",
            "content": {}
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/idv/gdc/search": {
      "post": {
        "tags": [
          "Protect IDV"
        ],
        "description": "Creates a search request for a GDC IDV search.",
        "operationId": "idvSearch",
        "summary": "IDV Search",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/IdvRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/IdvRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/IdvRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdvResponseDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/IdvResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        },
        "x-codegen-request-body-name": "request"
      }
    },
    "/protect/idv/file": {
      "get": {
        "tags": [
          "Protect IDV"
        ],
        "operationId": "returnsIdvReport",
        "summary": "Returns IDV Report",
        "description": "Returns an IDV Report with the potential results and the sources they were matched against.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "idvSearchId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/protect/audits": {
      "get": {
        "operationId": "retrieveProtectAuditLog",
        "summary": "Retrieve Protect Audit Log",
        "description": "Returns logged interactions with Protect endpoints for audit purposes. Actions logged include creating an Investigation, Investigation Record and Schedule.",
        "tags": [
          "Protect Audit"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          },
          {
            "name": "type",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true,
              "enum": [
                "alert.accepted",
                "alert.rejected",
                "alert.received",
                "investigation.accepted",
                "investigation.created",
                "investigation.rejected",
                "investigation.removed",
                "investigation.file_downloaded",
                "investigation.risk_assigned",
                "investigation.record_removed",
                "investigation.note_removed",
                "investigation.assigned_to",
                "investigation.status",
                "idv.file_downloaded",
                "idv.gdc_search",
                "note.created",
                "profile.created",
                "profile.added",
                "profile.updated",
                "schedule.created",
                "schedule.recharged",
                "schedule.disabled",
                "schedule.deleted",
                "schedule.removed",
                "schedule.updated",
                "report.monitoring.requested",
                "report.monitoring.submitted",
                "report.monitoring.completed",
                "report.monitoring.failed"
              ]
            }
          },
          {
            "name": "newerThan",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "olderThan",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "profileId",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": true
            }
          },
          {
            "name": "order",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Connect.Protect.AuditDto"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL5bdbb3"
                }
              }
            }
          }
        }
      },
      "post": {
        "operationId": "exportAuditLogFile",
        "summary": "Export Audit Log File",
        "description": "Produces a collection a csv of Audit records.",
        "tags": [
          "Protect Audit"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Protect.AuditExportRequestDto"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Protect.AuditsExportResponseDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL5bdbb3"
                }
              }
            }
          }
        }
      }
    },
    "/protect/batchUploads": {
      "post": {
        "tags": [
          "Protect Batch Uploads"
        ],
        "operationId": "batchUploadFile",
        "summary": "Batch Upload File",
        "description": "Endpoint to upload a file that generates multiple searches and investigations. <br><br> Note - file needs to be structured as per the template.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "required": [
                  "File"
                ],
                "properties": {
                  "investigationType": {
                    "type": "string",
                    "nullable": false,
                    "enum": [
                      "business",
                      "individual"
                    ],
                    "x-schema": {
                      "$ref": "#/components/schemas/InvestigationType"
                    }
                  },
                  "File": {
                    "type": "string",
                    "format": "binary",
                    "description": "Uploads a file to the server in `csv` format. Ensure the file follows the same format as the template. ",
                    "nullable": true
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpload"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpload"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Protect Batch Uploads"
        ],
        "operationId": "returnsBatchUploads",
        "summary": "Returns Batch Uploads",
        "description": "Returns all the Batch Uploads created by a user.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          },
          {
            "name": "limit",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BatchUpload"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/BatchUpload"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL5bdbb3"
                }
              }
            }
          }
        }
      }
    },
    "/protect/batchUploads/{batchUploadId}": {
      "get": {
        "tags": [
          "Protect Batch Uploads"
        ],
        "operationId": "returnsBatchUploadByID",
        "summary": "Returns Batch Uploads by ID",
        "description": "Will return the batch upload details of a specific file id.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "batchUploadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpload"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/BatchUpload"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL5bdbb3"
                }
              }
            }
          }
        }
      }
    },
    "/protect/batchUploads/{batchUploadId}/errorFile": {
      "get": {
        "tags": [
          "Protect Batch Uploads"
        ],
        "description": "Provides a link to the file in error.",
        "operationId": "returnsErrorFileLink",
        "summary": "Returns Error File Link",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "batchUploadId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "guid",
              "nullable": false
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL5bdbb3"
                }
              }
            }
          }
        }
      }
    },
    "/protect/batchUploads/templates/{type}": {
      "get": {
        "tags": [
          "Protect Batch Uploads"
        ],
        "operationId": "returnsSelectedTemplateLink",
        "summary": "Returns Selected Template Link",
        "description": "Provides template for the file upload csv structure.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "type",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "description": "`template` returns a header list for the file upload.",
              "nullable": false,
              "enum": [
                "template"
              ],
              "x-schema": {
                "$ref": "#/components/schemas/BatchUploadFileType"
              }
            },
            "x-schema": {
              "$ref": "#/components/schemas/BatchUploadFileType"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FileDownloadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/landRegistry/{companyId}": {
      "get": {
        "tags": [
          "Local Solutions"
        ],
        "operationId": "gbLandRegistry",
        "summary": "GB Land Registry",
        "description": "Allows users to return Land Registry details of a company.",
        "parameters": [
          {
            "name": "companyId",
            "in": "path",
            "required": true,
            "description": "A company Safe Number or Connect ID.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "language",
            "in": "query",
            "description": "language the report is requested in.",
            "schema": {
              "pattern": "^[a-zA-Z]{2}$",
              "type": "string",
              "default": "en"
            }
          },
          {
            "$ref": "#/components/parameters/page"
          },
          {
            "$ref": "#/components/parameters/pageSize"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CreditsafeLocalSolutionsGBLandRegistry"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Company not found"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/bankmatch": {
      "get": {
        "operationId": "bankMatch",
        "summary": "Bank Match",
        "tags": [
          "Local Solutions"
        ],
        "description": "The Bank Verification tool allows customers to instantly verify that small and medium sized companies you are working with are providing correct bank details, to reduce fraud and avoid delays in your on boarding process. The bank data for these companies is provided to Creditsafe by various financial providers, including major banks. When you provide us with a company number and their bank details, we are able to perform instant checks to verify that those bank details are associated with that company and return - </br> Match – We have bank information on the company, and the data provided by the customer matches the company records </br> No Match – We have bank information on the company, but the data provided does not match any of the company records </br> Data Unavailable - We do not have bank information on the company.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "checkType",
            "in": "query",
            "description": "Validation uses an algorithm to determine if a SCAN or IBAN exists, but does not let you know if that SCAN or IBAN actually belongs to the company who has provided it. Verification takes this a step further and checks the Creditsafe database for a match on the SCAN/IBAN, and tells you if the bank details actually belong to the company, so you can be assured that you are sending your money to the correct entity.",
            "required": true,
            "schema": {
              "enum": [
                "Both",
                "Validate",
                "Verify"
              ]
            }
          },
          {
            "name": "companyId",
            "in": "query",
            "description": "The connectId or safeNumber of the company to check against.",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "GB-0-X9999999"
          },
          {
            "name": "sortCode",
            "in": "query",
            "example": "089997",
            "description": "Sort Code to check - Must be passed in with Account Number to form a SCAN Result",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "accountNumber",
            "in": "query",
            "description": "Account Number to check - Must be passed in with Sort Code to form a SCAN Result",
            "schema": {
              "type": "string"
            },
            "example": 66374958
          },
          {
            "name": "iban",
            "in": "query",
            "description": "IBAN to check",
            "schema": {
              "type": "string"
            },
            "example": "GB55TEST08999966374957"
          },
          {
            "name": "vatNumber",
            "in": "query",
            "description": "VAT Number to check",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Indicates the check has been made successfully and contains the result of the Verification/Validation. A 200 response alone does not immediately indicate the bank account is valid, only that the check was made in the correct format. Check the SCAN text and IBAN text fields for the result of the Check.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.BankMatch.Result"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/identitysearch": {
      "post": {
        "tags": [
          "GB Consumers and AML"
        ],
        "operationId": "submitsAGBConsumerOrAmlSearch",
        "summary": "Submits a GB Consumer or AML Search",
        "description": "Submits a GB Consumer or AML depending on the Product provided. Validates criteria for each individual search before submitting, and may return a list of error strings instead.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "$ref": "#/components/requestBodies/Identity"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "message": "Access forbidden"
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "GB Consumers and AML"
        ],
        "operationId": "resolvesAPicklistAgainstAGivenUniqueId",
        "summary": "Resolves a picklist against a given UniqueId",
        "description": "Resolves a picklist belonging to the specified UniqueID, which would have been generated during a prior search. Guids (and thus cached searches) expire after fifteen minutes.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "resolved",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/identitysearch/history/{uniqueId}/input": {
      "get": {
        "tags": [
          "GB Consumers and AML"
        ],
        "description": "This will return the input criteria used in a search for a specified id.",
        "operationId": "retrievesAPriorIdentitySearch'sInput",
        "summary": "Retrieves a prior identitysearch's input",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "uniqueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.InputResponse"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/identitysearch/history/{uniqueId}": {
      "get": {
        "tags": [
          "GB Consumers and AML"
        ],
        "operationId": "retrievesAPriorIdentitySearchResult",
        "summary": "Retrieves a prior identitysearch result.",
        "description": "Retrieves a prior search result. This will include the search input and any ID/AML searches, but as we cannot hold Consumer search results these are not included. Resubmission is necessary if an updated Consumer result is needed.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "uniqueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/identitysearch/searchreasons": {
      "get": {
        "tags": [
          "GB Consumers and AML"
        ],
        "summary": "Gets identitysearch Reasons.",
        "description": "Returns an object describing which Reasons for Search are available and which are selected by a given customer. All reasons are always listed, with selected reasons specified as true.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.ReasonResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/identitysearch/history": {
      "get": {
        "tags": [
          "GB Consumers and AML"
        ],
        "summary": "Gets a list of identitysearch history items",
        "description": "Retrieves a paginated history list for the specified customer/user, filtered based on the include* parameters.",
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "The 1-indexed page number to fetch",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The page size number to fetch",
            "schema": {
              "type": "integer",
              "format": "int32",
              "nullable": true
            }
          },
          {
            "name": "IncludeCustomer",
            "in": "query",
            "description": "If true, returns all results for this customer. Valid for senior users only.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Products",
            "in": "query",
            "description": "The array of products to include\n\n**Below is a list of Definitions for the ENUM**\n* 0 - Consumer\n* 1 - Id\n* 2 - AML\n* 3 - Bank Match\n* 4 - AML with Bank Match",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Connect.Identity.Product"
              },
              "nullable": true
            }
          },
          {
            "name": "DateFrom",
            "in": "query",
            "description": "The earliest date to include",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "DateTo",
            "in": "query",
            "description": "The latest date to include",
            "schema": {
              "type": "string",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "Keyword",
            "in": "query",
            "description": "Include this string",
            "schema": {
              "type": "string",
              "nullable": true
            }
          },
          {
            "name": "Result",
            "in": "query",
            "description": "Return only items with this result",
            "schema": {
              "type": "string",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.HistoryListResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/identitysearch/history/{uniqueId}/reference": {
      "put": {
        "tags": [
          "GB Consumers and AML"
        ],
        "description": "Allows you to set a reference for an existing history item. This is useful for storing a reference to the record in your own system.",
        "operationId": "setsTheReferenceForAnExistingHistoryItem",
        "summary": "Sets the reference for an existing history item",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "uniqueId",
            "in": "path",
            "description": "The ID of the record to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/identitysearch/revalidation/{uniqueId}": {
      "put": {
        "tags": [
          "GB Consumers and AML"
        ],
        "description": "Revalidate's a given identitysearch with additional documents.",
        "operationId": "revalidateAGivenIdentitysearchWithAdditionalDocuments",
        "summary": "Revalidate a given identitysearch with additional documents",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "uniqueId",
            "in": "path",
            "description": "The ID of the record to update",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Connect.Identity.RevalidateRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.SearchResult"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.Identity.BasicResponse"
                }
              }
            }
          }
        }
      }
    },
    "/localSolutions/GB/CCDS/{companyId}": {
      "get": {
        "operationId": "financeAgreements",
        "summary": "Finance Agreements",
        "tags": [
          "Local Solutions"
        ],
        "description": "Finance Agreements allows users to view data supplied via the CCDS scheme (Commercial Credit Data Sharing ).Full CCDS allows a user to view up to 48 months' of historical data on current account, loan and credit card facilities. The Financial footprint shows summarised credit activity data.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "companyId",
            "in": "path",
            "description": "The connectId or safeNumber of the company",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "GB-0-X9999999"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/Connect.footprintDataFinance"
                    },
                    {
                      "$ref": "#/components/schemas/Connect.fullFinanceData"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/companies/schema/{countryCode}": {
      "get": {
        "operationId": "reportSchema",
        "summary": "Report Schema",
        "tags": [
          "Misc"
        ],
        "description": "Returns the Company Report JSON schema of the provided country. Largely redundant as the Company Report 200 response is defined as a superset of all country's JSON schemas and can be used for any country.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "section",
            "in": "query",
            "description": "Use CompanyReportResponse for the Company Credit Report JSON schema, DirectorReportResponse for the Director Report JSON schema.",
            "schema": {
              "type": "string",
              "enum": [
                "CompanyReportResponse",
                "DirectorReportResponse"
              ]
            }
          },
          {
            "name": "template",
            "in": "query",
            "description": "For Templated Company Report JSON Schemas",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "ISO2 / Alpha 2 Country Code",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/reportcustomdata/{country}": {
      "get": {
        "tags": [
          "Misc"
        ],
        "description": "Returns the allowed values of the customData parameter, used in the GET Company Report and Director Report endpoints.  I.e. Supplying `DE` as a country code will return a list of reasons for requesting a DE Credit Report (a legal requirement to supply with each Credit Report request in Germany). This will provide a list of allowedValues to enter into the mandatory Parameter `customData` = `de_reason_code::allowedValue`.",
        "operationId": "customReportParameters",
        "summary": "Custom Report Parameters",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "country",
            "in": "path",
            "description": "An ISO/Alpha-2 country code to display any special mandatory parameters when ordering a Credit Report in that territory.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "example": {
                    "customData": [
                      {
                        "key": "de_reason_code",
                        "optional": false,
                        "allowedValues": [
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "7",
                          "8"
                        ],
                        "description": [
                          "DE report retrieval reason code:",
                          "1 - Credit Decisioning'",
                          "2 - Credit Assessment - Future business connection (with credit risk)",
                          "3 - Credit Assessment - Existing business connection (with credit risk)",
                          "4 - Realisation check receivables collection",
                          "5 - Purchase Contract - Intention of signature of purchase contract (with credit risk)",
                          "6 - Goods Credit Insurance (with credit risk)",
                          "7 - Contract - Intention of signature of leasing or rent contract (with credit risk)",
                          "8 - Insurance Contract - Intention of signature of a insurance contract (with credit risk)"
                        ]
                      }
                    ],
                    "country": "DE"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.BadRequest"
                }
              }
            }
          },
          "401": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Connect.ErrorResponses.InvalidToken"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs": {
      "post": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "createJob",
        "summary": "Create Job Request",
        "description": "Enter a name for the 'Job Request' to be associated to the file going to be processed.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          }
        ],
        "requestBody": {
          "content": {
            "application:json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectDataCleaningCreateJobRequest"
              },
              "example": {
                "name": "Create a Data Cleaning Job 03-10-20xx"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectDataCleaningJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "getAllJobs",
        "summary": "Returns all Data Cleaning Jobs",
        "description": "This endpoint can be used to retrieve all created data cleaning job requests as defined by the query parameters.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "countries",
            "description": "Comma separated list of ISO/Alpha-2 country codes to filter the results by.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "Returns the individual jobs by status. Possible values are: `pending`, `processing`, `completed`, `failed`.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "jobName",
            "description": "Returns the individual jobs by name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fromDate",
            "description": "Returns the individual jobs created after the specified date.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "date-time"
            }
          },
          {
            "name": "customerId",
            "description": "Returns the individual jobs by customer id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "toDate",
            "description": "Returns the individual jobs created before the specified date.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "date-time"
            }
          },
          {
            "name": "userId",
            "description": "Returns the individual jobs by user id.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "pageSize",
            "description": "Returns the number of individual jobs per page.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "companyName",
            "description": "Returns the individual jobs by company name.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "description": "Returns the page number of the individual jobs.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "archived",
            "description": "Returns the individual jobs by archived status.",
            "in": "query",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfConnectDataCleaningJob"
                }
              }
            }
          },
          "400": {
            "description": "400 Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "401 Invalid Token response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "403 Access Forbidden response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs/{id}": {
      "get": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "getJobByIdNumber",
        "summary": "Returns Job by {id} number",
        "description": "Returns Job by {id} number which is generated from 'Creating Job Request' stage. This endpoint is used to check the `status` of the job.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectDataCleaningJob"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL5b4b1c"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs/{id}/upload": {
      "post": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "jobFileUploadWithId",
        "summary": "Upload a Job File with an {id}",
        "description": "Upload a Job File for processing, you need to link to the {id} number generated from the 'Job Request'.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "description": "The {id} number generated from the 'Job Request'.",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/MODEL28cf8d"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectDataCleaningUploadResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL8790cc"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs/{id}/mappings": {
      "put": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "jobUpdateMappings",
        "summary": "Update Mappings Request",
        "description": "Update the mapping of the uploaded file to match that of the header within it. You can add or remove the required number of mapping points in the Request Body.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectDataCleaningUpdateMappingsRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectDataCleaningMappingResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL4f561c"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs/{id}/submit": {
      "post": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "submitJobRequest",
        "summary": "Submit Job Request",
        "description": "Submission of the file after mappings have been carried out. To have a successful submission a blank response body (See example) is required to be posted.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectDataCleaningSubmitJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectDataCleaningResponse"
                },
                "example": {
                  "messageId": "string"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL7c8060"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs/{id}/enrichments": {
      "put": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "updateJobEnrichments",
        "summary": "Update Enrichments Request",
        "description": "Detail which package of enrichment settings are to be applied to the uploaded file.<br><br> Select one of the three creditTypes to acquire the JSON Enrichment tag schema possible for that product.<br><br> Removal of Enrichment tags is possible from each creditType. Addition of Enrichment tags to a creditType is not possible beyond the maximum schema for each.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/basic"
                  },
                  {
                    "$ref": "#/components/schemas/basicPlus"
                  },
                  {
                    "$ref": "#/components/schemas/standard"
                  }
                ]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectDataCleaningResponse"
                },
                "example": {
                  "enrichments": [
                    {
                      "enrichment": "Tag Name from request body"
                    }
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODELcf4983"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs/{id}/enrich": {
      "post": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "dataCleaningJobEnrich",
        "summary": "Start Enrichment Request",
        "description": "Commencing the Job enrichment to the uploaded file after mapping the enrichment requirements. To have a successful submission a blank response body (See example) is required to be posted.<br><br> POST 'enrich' will not commence unless the `Job Status` is `jobMatchingComplete`.<br><br>Use the GET/dataCleaning/jobs/{id} to check Status of job.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectDataCleaningEnrichRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArrayOfConnectDataCleaningResponse"
                },
                "example": {
                  "correlationId": "string",
                  "messageId": "string"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Invalid Token response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "Access Forbidden Response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODEL5bdbb3"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs/{id}/enrichedFile": {
      "get": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "returnsEnrichedJobFile",
        "summary": "Returns Enriched Job File",
        "description": "Returns the enriched file after enrichment is complete. Identify the file type to be returned via the query parameter.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "fileType",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            },
            "example": "csv"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectDataCleaningResponse"
                },
                "example": {
                  "correlationId": "string",
                  "filePath": "string"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODELf6df8e"
                }
              }
            }
          }
        }
      }
    },
    "/dataCleaning/jobs/{id}/archive": {
      "post": {
        "tags": [
          "Data Cleaning"
        ],
        "operationId": "archiveJob",
        "summary": "Archive Job by id",
        "description": "Archives the job, this can be done at any stage. To have a successful submission a blank response body (See example) is required to be posted.",
        "parameters": [
          {
            "$ref": "#/components/parameters/authToken"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ConnectDataCleaningArchiveJobRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "200 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectDataCleaningArchiveResponse"
                }
              }
            }
          },
          "400": {
            "description": "400 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "401 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesInvalidToken"
                }
              }
            }
          },
          "403": {
            "description": "403 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConnectErrorResponsesAccessForbidden"
                }
              }
            }
          },
          "404": {
            "description": "404 response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MODELcebf3b"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "authToken": {
        "name": "Authorization",
        "in": "header",
        "description": "Authorization Token",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "startDate": {
        "name": "startDate",
        "in": "query",
        "description": "The start date on which results are filtered.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "endDate": {
        "name": "endDate",
        "in": "query",
        "description": "The end date on which results are filtered.",
        "schema": {
          "type": "string",
          "format": "date-time"
        }
      },
      "page": {
        "name": "page",
        "in": "query",
        "description": "Starting page number.",
        "schema": {
          "type": "integer",
          "default": 1
        }
      },
      "pageSize": {
        "name": "pageSize",
        "in": "query",
        "description": "Number of items to return per Page.",
        "schema": {
          "type": "integer"
        }
      },
      "sortBy": {
        "name": "sortBy",
        "in": "query",
        "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
        "schema": {
          "type": "string",
          "default": "companyName",
          "enum": [
            "companyName",
            "countryCode",
            "eventId",
            "eventDate"
          ]
        }
      },
      "sortDir": {
        "name": "sortDir",
        "in": "query",
        "description": "The direction that you wish to sort results by.",
        "schema": {
          "type": "string",
          "default": "asc",
          "enum": [
            "asc",
            "desc"
          ]
        }
      },
      "filterByCreatedDate": {
        "name": "filterByCreatedDate",
        "in": "query",
        "description": "Set to `true` to filter the Notification Events of the \"createdDate\" field when using `startDate` and `endDate` parameters. By default this is set to `false`, with the date parameters filtering using the \"eventDate\" field.",
        "schema": {
          "type": "boolean",
          "default": false,
          "enum": [
            false,
            true
          ]
        }
      }
    },
    "requestBodies": {
      "Identity": {
        "description": "Select the `products` tab for the request body for each of the products `AML` and `Consumer`. <br> <br> NOTE:' If a previous address is used in addition to current the `postCode` becomes required.",
        "content": {
          "application/json": {
            "schema": {
              "oneOf": [
                {
                  "$ref": "#/components/schemas/AMLSearch"
                },
                {
                  "$ref": "#/components/schemas/consumerSearch"
                }
              ]
            }
          }
        }
      }
    },
    "schemas": {
      "Connect.Authentication.AuthRequest": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "description": "Credentials assigned upon sign up",
            "example": "username@domain.com"
          },
          "password": {
            "type": "string",
            "example": "^1gHySRA56aj>tf421o"
          }
        }
      },
      "Connect.Authentication.AuthResponse": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string",
            "description": "Authentication Token",
            "example": "eyJhbGciOiJSUzI1NiIsImtpZCI6ImRodTNnNkFtTG5QQXVpOEJSMUFEVnp5ZHBnZyIsInR5cCI6IkpXVCIsIng1dCI6ImRodTNnNkFtTG5QQXVpOEJSMUFEVnp5ZHBnZyJ9.eyJuYmYiOjE1OTU0MTYyMDksImV4cCI6MTU5NTQxOTgwOSwiaXNzIjoiaHR0cHM6Ly9teWxvZ2luLnRlc3QuY3JlZGl0c2FmZS5jb20iLCJhdWQiOlsiaHR0cHM6Ly9teWxvZ2luLnRlc3QuY3JlZGl0c2FmZS5jb20vcmVzb3VyY2VzIiwiY29ubmVjdF9hcGkiLCJ1Ym9fYXBpX2dhdGV3YXkiXSwiY2xpZW50X2lkIjoiY29ubmVjdC5hcGkuY2xpZW50Iiwic3ViIjoiMTAxNTIwMjg1IiwiYXV0aF90aW1lIjoxNTk1NDE2MjA5LCJpZHAiOiJsb2NhbCIsInVzZXJuYW1lIjoiQ29ubmVjdHUxIiwiZW1haWwiOiJDb25uZWN0MUBnbWFpbC5jb20iLCJjdXN0b21lcklkIjoiMTAxNzY0NDA1IiwiY291bnRyeSI6IkMwIiwidXNlclJvbGUiOiJDcm1BZG1pblBsdXMiLCJzYl9jb3VudHJ5IjoiVVMiLCJzY29wZSI6WyJjb25uZWN0X2FwaSIsInVib19hcGlfZ2F0ZXdheSJdLCJhbXIiOlsicHdkIl19.p8kPAlKNB9iWEKiQbfbRXBoLQuBG7NuEDN__A8AQ55CL-gcIwkS1717Af1f9W0uifwIQ6HAZQR_x191LVkvuWD94Zw8zLzzr1ioUIhQny_zYuAS3G6EFNaTHh_mvOQ9XVi1FyuIy6YYcYcNLNZurFuITF2w5LuX4YQBjQy3rhEAdRoKcUKbtCClMFaH2dV35jiX2d7BqyhtJ8GeZyJ6yfMfdzznqxlJ4Osf5aasKUy8RYKEpjU2pkCURojoy5_oviGs8X4U9mJWcuajmPF3i5DHkqbhq1Mp0UZrDyoq_0BDStV5xqRgq6aOY8mc45kX7cwY3O2hPeGE7Ak8YtKFbA"
          }
        }
      },
      "Connect.Authentication.Unauthorised": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "Connect.CompanySearch.NoResults": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "number"
          },
          "companies": {
            "type": "object"
          },
          "messages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CreditsafeGlobalDataMessage"
            }
          }
        }
      },
      "CreditsafeGlobalDataMessage": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/CreditsafeGlobalDataMessageType"
          },
          "code": {
            "$ref": "#/components/schemas/CreditsafeGlobalDataMessageCode"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "CreditsafeGlobalDataMessageType": {
        "type": "string",
        "enum": [
          "Information",
          "Warning",
          "Error"
        ]
      },
      "CreditsafeGlobalDataMessageCode": {
        "type": "string",
        "enum": [
          "NoResults",
          "TooManyResults",
          "ReportUnavailable",
          "ReportUnavailableDueToLegal",
          "ReportUnavailableOnline",
          "LegalNotice",
          "InvalidCredentials",
          "AccessRestricted",
          "AccessLimitsNearing",
          "InsufficientCustomerData",
          "ReportboxAlmostFull",
          "ReportboxFull",
          "InvalidRequestXml",
          "InvalidOperationParameters",
          "OperationNotSupported",
          "InvalidCustomData",
          "ChangeNotification",
          "TemporarySystemProblem",
          "EndpointShutdown",
          "UnexpectedInternalError",
          "Other",
          "DataServiceAccessProblems",
          "DataServiceInvalidResponse"
        ]
      },
      "Connect.ErrorResponses.BadRequest": {
        "type": "object",
        "description": "",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string",
            "description": "Provides further information on why the request was rejected"
          }
        }
      },
      "Connect.ErrorResponses.InvalidToken": {
        "type": "object",
        "description": "Authorization Token has either expired or is not a valid Connect Authorization Token",
        "properties": {
          "error": {
            "type": "string"
          }
        }
      },
      "Connect.CompanySearch.SearchCriteria": {
        "type": "object"
      },
      "Connect.Authentication.AccessCountries": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "countryAccess": {
            "type": "object",
            "properties": {
              "creditsafeConnectOnlineReports": {
                "type": "array",
                "description": "Country usage for Company Reports service",
                "items": {
                  "type": "object",
                  "properties": {
                    "countryName": {
                      "type": "string"
                    },
                    "templateName": {
                      "type": "string",
                      "description": "Company Report template. Full reports are default"
                    },
                    "countryIso2": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Date of when the service was enabled"
                    },
                    "expireDate": {
                      "type": "string",
                      "description": "Date of when the service will expire"
                    },
                    "paid": {
                      "type": "integer",
                      "description": "Measure of total usage available in the service"
                    },
                    "used": {
                      "type": "integer",
                      "description": "Service usage"
                    }
                  }
                }
              },
              "creditsafeConnectOfflineReports": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "countryIso2": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Date of when the service was enabled"
                    },
                    "expireDate": {
                      "type": "string",
                      "description": "Date of when the service will expire"
                    },
                    "paid": {
                      "type": "integer",
                      "description": "Measure of total usage available in the service"
                    },
                    "used": {
                      "type": "integer",
                      "description": "Service usage"
                    }
                  }
                }
              },
              "creditsafeConnectMonitoring": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Date of when the service was enabled"
                    },
                    "expireDate": {
                      "type": "string",
                      "description": "Date of when the service will expire"
                    },
                    "paid": {
                      "type": "integer",
                      "description": "Measure of total usage available in the service"
                    },
                    "used": {
                      "type": "integer",
                      "description": "Service usage"
                    }
                  }
                }
              },
              "creditsafeConnectDirectorReports": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "countryName": {
                      "type": "string"
                    },
                    "countryIso2": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Date of when the service was enabled"
                    },
                    "expireDate": {
                      "type": "string",
                      "description": "Date of when the service will expire"
                    },
                    "paid": {
                      "type": "integer",
                      "description": "Measure of total usage available in the service"
                    },
                    "used": {
                      "type": "integer",
                      "description": "Service usage"
                    }
                  }
                }
              },
              "creditsafeConnectImageDocuments": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "countryIso2": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Date of when the service was enabled"
                    },
                    "expireDate": {
                      "type": "string",
                      "description": "Date of when the service will expire"
                    },
                    "paid": {
                      "type": "integer",
                      "description": "Measure of total usage available in the service"
                    },
                    "used": {
                      "type": "integer",
                      "description": "Service usage"
                    }
                  }
                }
              },
              "creditsafeConnectBankValidation": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Date of when the service was enabled"
                    },
                    "expireDate": {
                      "type": "string",
                      "description": "Date of when the service will expire"
                    },
                    "paid": {
                      "type": "integer",
                      "description": "Measure of total usage available in the service"
                    },
                    "used": {
                      "type": "integer",
                      "description": "Service usage"
                    }
                  }
                }
              },
              "creditsafeConnectBankVerification": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "startDate": {
                      "type": "string",
                      "description": "Date of when the service was enabled"
                    },
                    "expireDate": {
                      "type": "string",
                      "description": "Date of when the service will expire"
                    },
                    "paid": {
                      "type": "integer",
                      "description": "Measure of total usage available in the service"
                    },
                    "used": {
                      "type": "integer",
                      "description": "Service usage"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Connect.Images.CompanyImages": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "imageId": {
                  "type": "string"
                },
                "company": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "localId": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                },
                "document": {
                  "type": "object",
                  "properties": {
                    "imageType": {
                      "type": "string"
                    },
                    "imageCode": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "format": {
                  "type": "string"
                },
                "source": {
                  "type": "string"
                },
                "filingDate": {
                  "type": "string"
                },
                "uploadDate": {
                  "type": "string"
                },
                "accountingDate": {
                  "type": "string"
                },
                "language": {
                  "type": "string"
                },
                "comments": {
                  "type": "string"
                },
                "status": {
                  "type": "string"
                },
                "localProperties": {
                  "type": "object",
                  "properties": {
                    "accountRefNumber": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Connect.Images.CompanyImageTypes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "country": {
              "type": "string"
            },
            "companyId": {
              "type": "object",
              "properties": {
                "required": {
                  "type": "boolean"
                },
                "validationRegExp": {
                  "type": "string"
                },
                "minLength": {
                  "type": "integer"
                },
                "maxLength": {
                  "type": "integer"
                }
              }
            },
            "imageReference": {
              "type": "object",
              "properties": {
                "required": {
                  "type": "boolean"
                },
                "validationRegExp": {
                  "type": "string"
                },
                "minLength": {
                  "type": "integer"
                },
                "maxLength": {
                  "type": "integer"
                }
              }
            },
            "availableLanguages": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "language": {
                    "type": "string"
                  },
                  "filingTypes": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "availableImageFormats": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  },
                  "default": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        }
      },
      "Connect.FreshInv.CreateInvestigation": {
        "type": "object",
        "properties": {
          "consent": {
            "type": "boolean",
            "description": "Including this allows Creditsafe to disclose your company details to the target company in the aim of improving the quality of our Investigation Report"
          },
          "contactInfo": {
            "description": "Your contact information",
            "type": "object",
            "properties": {
              "name": {
                "type": "string",
                "description": "Your name",
                "nullable": false
              },
              "emailAddress": {
                "type": "string",
                "description": "The address where Investigation creation confirmations are sent",
                "nullable": false
              },
              "telephoneNumber": {
                "type": "string",
                "description": "Your contact number",
                "nullable": true
              },
              "company": {
                "type": "object",
                "description": "your company information",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "Your company name",
                    "nullable": false
                  },
                  "number": {
                    "type": "string",
                    "nullable": false,
                    "description": "Your company VAT number/Reg Number/Tax Number"
                  }
                }
              }
            }
          },
          "chargeReference": {
            "type": "string",
            "description": "Free text field to add your own personal reference to the order"
          },
          "searchCriteria": {
            "type": "object",
            "description": "Details on the company you are investigating - the target company",
            "properties": {
              "name": {
                "type": "string",
                "description": "Target company name",
                "nullable": false
              },
              "additionalInfo": {
                "type": "string",
                "description": "Any further details on your target company that will assist our Investigation",
                "nullable": true
              },
              "telephoneNumber": {
                "type": "string",
                "description": "Target company telephone number",
                "nullable": true
              },
              "address": {
                "type": "object",
                "description": "Target company address",
                "nullable": true,
                "properties": {
                  "simple": {
                    "type": "string"
                  },
                  "postcode": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  }
                }
              },
              "regNo": {
                "type": "string",
                "description": "Target company registration number",
                "nullable": true
              },
              "vatNo": {
                "type": "string",
                "description": "Target company VAT number",
                "nullable": true
              },
              "countryCode": {
                "type": "string",
                "description": "Target company ISO2 country code",
                "nullable": false
              }
            }
          }
        }
      },
      "Connect.FreshInv.InvestigationConfirmed": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "orderID": {
            "type": "string",
            "description": "Fresh Investigation Unique Identifier"
          },
          "transactionID": {
            "type": "string",
            "description": "Fresh Investigation Internal Identifier"
          }
        }
      },
      "Connect.FreshInv.CompletedInvestigation": {
        "type": "object",
        "properties": {
          "chargeReference": {
            "type": "string"
          },
          "contactDetails": {
            "properties": {
              "emailAddress": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "telephoneNumber": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "creationDate": {
            "type": "string"
          },
          "lastStatusChangeDate": {
            "type": "string"
          },
          "orderID": {
            "type": "integer"
          },
          "reportDate": {
            "type": "string"
          },
          "searchCriteria": {
            "properties": {
              "additionalInfo": {
                "type": "string"
              },
              "address": {
                "properties": {
                  "city": {
                    "type": "string"
                  },
                  "postcode": {
                    "type": "string"
                  },
                  "simple": {
                    "type": "string"
                  }
                },
                "type": "object"
              },
              "countryCode": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "regNo": {
                "type": "string"
              },
              "vatNo": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "sections": {
            "items": {
              "anyOf": [
                {
                  "properties": {
                    "content": {
                      "type": "string"
                    },
                    "contentType": {
                      "type": "string"
                    },
                    "creationDate": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              ]
            },
            "type": "array"
          },
          "status": {
            "properties": {
              "code": {
                "type": "string"
              },
              "description": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "transactionID": {
            "type": "integer"
          }
        }
      },
      "Connect.FreshInv.ListInvestigations": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer"
          },
          "orders": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "orderID": {
                  "type": "integer",
                  "description": "Fresh Investigation Unique Identifier"
                },
                "userID": {
                  "type": "string",
                  "description": "Fresh Investigation user Identifier"
                },
                "creationDate": {
                  "type": "string",
                  "description": "Fresh Investigation Creation Date"
                },
                "lastStatusChangeDate": {
                  "type": "string",
                  "description": "Fresh Investigation Last Status Change Date"
                },
                "transactionID": {
                  "type": "integer",
                  "description": "Fresh Investigation Internal Identifier"
                },
                "chargeReference": {
                  "type": "string"
                },
                "contactDetails": {
                  "type": "object",
                  "description": "Contact details of the person who requested the investigation, and where the information will be sent.",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Contact name of the person who requested the investigation"
                    },
                    "emailAddress": {
                      "type": "string",
                      "description": "The address to which the investigation report will be sent"
                    },
                    "telephoneNumber": {
                      "type": "string",
                      "description": "Your telephone number"
                    }
                  }
                },
                "sectionNames": {
                  "type": "string"
                },
                "status": {
                  "type": "object",
                  "description": "The status of the investigation",
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  }
                },
                "consent": {
                  "type": "boolean",
                  "description": "Whether permission was granted by the requesting company to disclose the identity of the investigating party to the target company."
                },
                "searchCriteria": {
                  "type": "object",
                  "description": "The search criteria used to perform the investigation",
                  "properties": {
                    "name": {
                      "type": "string",
                      "description": "Target company name"
                    },
                    "vatNo": {
                      "type": "string"
                    },
                    "regNo": {
                      "type": "string"
                    },
                    "additionalInfo": {
                      "type": "string"
                    },
                    "address": {
                      "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
                    }
                  }
                },
                "reportDate": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "Connect.Monitoring.UserDetails": {
        "type": "array",
        "items": {
          "properties": {
            "countryCode": {
              "type": "string",
              "example": "US",
              "description": "The ISO/Alpha 2 format country code for the user's country."
            },
            "createdDate": {
              "type": "string",
              "format": "date-time",
              "example": "2020-01-01T00:00:00",
              "description": "The date that the Global Monitoring user account was created."
            },
            "csCustomerId": {
              "type": "number",
              "example": 101662701,
              "description": "The unique identifier for the user's customer account, used across the Creditsafe product suite."
            },
            "csUserId": {
              "type": "number",
              "example": 101445010,
              "description": "The unique identifier for the user's account, used across the Creditsafe product suite."
            },
            "isAutoTracker": {
              "type": "boolean",
              "example": false,
              "description": "If auto-tracker is enabled, any companies that you pull a credit report for are automatically added to the portfolio that you have selected as default."
            },
            "languageCode": {
              "type": "string",
              "example": "en",
              "description": "The language code for the user's preferred language."
            },
            "lastAccessDate": {
              "type": "string",
              "nullable": true,
              "format": "date-time",
              "example": "2020-02-01T14:30:00",
              "description": "The date the the user last accessed the Global Monitoring product."
            },
            "modifiedDate": {
              "type": "string",
              "nullable": true,
              "format": "date-time",
              "example": "2020-02-01T14:30:00",
              "description": "The date that the user's details were last modified."
            },
            "contractEndDate": {
              "type": "string",
              "nullable": true,
              "format": "date-time",
              "example": "2021-01-01T00:00:00",
              "description": "The date that the user's contract is currently set to expire. From this date onward, the user will be unable to access to Global Monitoring product."
            },
            "userId": {
              "type": "number",
              "example": 10804,
              "description": "The internal identifier used to reference the user's account through the Global Monitoring product."
            }
          }
        }
      },
      "Connect.Monitoring.CompanyEvents": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "totalCount": {
            "type": "number",
            "description": "The total number of events returned for the given company.",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "eventId": {
                  "type": "number",
                  "description": "The unique identifier for the event.",
                  "example": 192873729
                },
                "companyId": {
                  "type": "string",
                  "description": "The Safe Number (Creditsafe's identifier on all Companies owned in the Creditsafe Universe) of the company that triggered the event.",
                  "example": "UK00004371"
                },
                "portfolioId": {
                  "type": "number",
                  "description": "The portfolio Id of the portfolio that contains the company that you requested event information for.",
                  "example": 589960
                },
                "ruleName": {
                  "type": "string",
                  "description": "A short description of the company event.",
                  "example": "Credit Limit Change"
                },
                "localEventCode": {
                  "type": "string",
                  "description": "The local event code for the event.",
                  "example": "CL"
                },
                "globalEventCode": {
                  "type": "string",
                  "description": "The global event code that has been mapped to the local event.",
                  "example": "CL"
                },
                "newValue": {
                  "type": "string",
                  "description": "Some events contain an `oldValue` and `newValue` (e.g. a change in Credit Limit).",
                  "example": 7050000
                },
                "oldValue": {
                  "type": "string",
                  "description": "Some events contain an `oldValue` and `newValue` (e.g. a change in Credit Limit).",
                  "example": 6100000
                },
                "eventDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date that the event occurred.",
                  "example": "2019-03-14T22:21:50"
                },
                "createdDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date that the event was created in the Creditsafe database.",
                  "example": "2019-03-14T22:21:50"
                }
              }
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Connect.Monitoring.Paging"
          }
        }
      },
      "Connect.Monitoring.EventRulesResponse": {
        "type": "array",
        "items": {
          "properties": {
            "isActive": {
              "type": "boolean",
              "description": "Shows whether the notification event rule has been enabled for the given portfolio.",
              "example": 0
            },
            "ruleCode": {
              "type": "number",
              "description": "The unique identifier for the notification event rule.",
              "example": 101
            },
            "ruleCountryCode": {
              "type": "string",
              "description": "The ISO/Alpha 2 format country code for the notification event rule. \"XX\" is used for global rules that apply to companies from all countries.",
              "example": "XX"
            },
            "ruleType": {
              "type": "number",
              "description": "The unique identifier of the `ruleType` for the notification event rule.",
              "example": 4
            },
            "ruleTypeName": {
              "type": "string",
              "description": "A short description of the `ruleType` for the notification event rule.",
              "example": "Rating band change - 3 input"
            },
            "name": {
              "type": "string",
              "description": "The name for the notification event rule.",
              "example": "International Rating | Reduce by {0} Band(s) OR Less than Band {1}"
            },
            "param0": {
              "type": "string",
              "description": "Some notification event rules may include input parameters used to tailor the notifications generated to your preference.",
              "example": "1"
            },
            "param1": {
              "type": "string",
              "description": "Some notification event rules may include input parameters used to tailor the notifications generated to your preference.",
              "example": "A"
            }
          }
        }
      },
      "Connect.Monitoring.AllNotificationsEvents": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "totalCount": {
            "type": "number",
            "description": "The total number of events returned for the given company.",
            "example": 36
          },
          "data": {
            "type": "array",
            "items": {
              "properties": {
                "company": {
                  "$ref": "#/components/schemas/Connect.Monitoring.CompanyInfo"
                },
                "eventId": {
                  "type": "number",
                  "description": "The unique identifier of the event that triggered the generation of the `notificationEvent`. This identifier is consistent across all portfolios in the Global Monitoring product.",
                  "example": 426992366
                },
                "eventDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The date that the event occurred.",
                  "example": "2019-12-06T08:23:37"
                },
                "newValue": {
                  "type": "string",
                  "nullable": true,
                  "description": "Some events contain an `oldValue` and `newValue` (e.g. a change in Credit Limit).",
                  "example": "1600 AMPHITHEATRE PARKWAY, MOUNTAIN VIEW, CA, 94043-1351"
                },
                "oldValue": {
                  "type": "string",
                  "nullable": true,
                  "description": "Some events contain an `oldValue` and `newValue` (e.g. a change in Credit Limit).",
                  "example": "1604 AMPHITHEATRE PARKWAY, MOUNTAIN VIEW, CA, 94043-1351"
                },
                "notificationEventId": {
                  "type": "number",
                  "description": "The unique identifier for the `notificationEvent`. This identifier is tied to a specific `eventId` and `portfolioId`.",
                  "example": 51861887
                },
                "notificationId": {
                  "type": "number",
                  "description": "The unique identifier for the `notificationEvent`. This identifier is tied to a specific `eventId` and `portfolioId`.",
                  "example": null,
                  "nullable": true
                },
                "processedDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "If the Notification was sent by email, the date will be populated with when the notification was sent.",
                  "example": null,
                  "nullable": true
                },
                "ruleCode": {
                  "type": "number",
                  "description": "The unique identifier for the `ruleCode` that triggered the generation of the `notificationEvent`.",
                  "example": 105
                },
                "ruleName": {
                  "type": "string",
                  "description": "The name of the notification event rule that triggered the generation of the `notificationEvent`.",
                  "example": "Address"
                },
                "summary": {
                  "type": "string",
                  "description": "A short description of the notification event rule that triggered the `notificationEvent`.",
                  "example": "Address Change reported",
                  "nullable": true
                },
                "ruleText": {
                  "type": "string",
                  "description": "A short description of the notification event rule that triggered the `notificationEvent`.",
                  "example": "Address Change reported",
                  "nullable": true
                },
                "localEventCode": {
                  "type": "string",
                  "description": "The local code of the `notificationEvent`.",
                  "example": "LI2013",
                  "nullable": true
                },
                "isProcessed": {
                  "type": "boolean",
                  "description": "a `true` or `false` flag for each event. Can be updated using the PATCH endpoint.",
                  "example": true
                }
              }
            }
          },
          "paging": {
            "$ref": "#/components/schemas/Connect.Monitoring.Paging"
          }
        }
      },
      "Connect.Monitoring.ListPortfolios": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "totalCount": {
            "type": "number",
            "description": "The total number of events returned for the given company.",
            "example": 1
          },
          "paging": {
            "$ref": "#/components/schemas/Connect.Monitoring.Paging"
          },
          "data": {
            "type": "object",
            "properties": {
              "portfolios": {
                "type": "array",
                "items": {
                  "properties": {
                    "portfolioId": {
                      "type": "number",
                      "description": "A unique ID assigned to each portfolio.",
                      "example": 131318
                    },
                    "name": {
                      "type": "string",
                      "description": "The name of the portfolio",
                      "example": "Customers 2"
                    },
                    "isDefault": {
                      "type": "string",
                      "description": "A true or false value which shows if the portfolio is set as default",
                      "example": false
                    },
                    "emails": {
                      "type": "array",
                      "items": {
                        "properties": {
                          "firstName": {
                            "type": "string",
                            "description": "The first name of the user to receive the email notification.",
                            "example": "John"
                          },
                          "lastName": {
                            "type": "string",
                            "description": "The last name of the user to receive the email notification.",
                            "example": "Doe"
                          },
                          "email": {
                            "type": "string",
                            "description": "The email address of the user to receive the email notification.",
                            "example": "john.doe@creditsafe.com"
                          }
                        }
                      }
                    },
                    "isSharedPortfolio": {
                      "type": "number",
                      "description": "Shows if the portfolio is shared with other users or not. 1 means the portfolio is shared.",
                      "example": 1
                    }
                  }
                }
              },
              "sharedPortfolios": {
                "type": "array",
                "nullable": true,
                "items": {
                  "properties": {
                    "portfolioId": {
                      "type": "number",
                      "description": "A unique ID assigned to each portfolio.",
                      "example": 131318
                    },
                    "name": {
                      "type": "string",
                      "description": "A name of the portfolio",
                      "example": "Customers 2"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Connect.Monitoring.CreatePortfolioRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the portfolio",
            "example": "Test Portfolio"
          },
          "isDefault": {
            "type": "boolean",
            "description": "can set the portfolio as default for company monitoring events.",
            "example": false
          },
          "emails": {
            "type": "array",
            "description": "The email address of the user to receive the email notification.",
            "items": {
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "The first name of the user to receive the email notification.",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "description": "The last name of the user to receive the email notification.",
                  "example": "Doe"
                },
                "emailAddress": {
                  "type": "string",
                  "description": "The email address of the user to receive the email notification.",
                  "example": "john.doe@creditsafe.com"
                }
              }
            }
          },
          "emailSubject": {
            "type": "string",
            "description": "The subject of the email notification.",
            "example": "Creditsafe Monitoring Notification on portfolio {{portfolioName}}"
          },
          "emailLanguage": {
            "type": "string",
            "description": "The language of the email notification.",
            "example": "en"
          },
          "frequency": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Connect.Monitoring.CreatePortfolioResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "14cc64a0-c108-11ea-b9af-06bcc69a383e"
          },
          "portfolioId": {
            "type": "number",
            "description": "A unique ID assigned to each portfolio.",
            "example": 131318
          },
          "name": {
            "type": "string",
            "description": "The name that was assigned to this portfolio",
            "example": "My New Portfolio"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Shows if the portfolio is set as Default for the user.",
            "example": false
          }
        }
      },
      "Connect.Monitoring.GetPortfolioById": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "portfolioId": {
            "type": "number",
            "description": "A unique ID assigned to each portfolio.",
            "example": 36
          },
          "name": {
            "type": "string",
            "description": "The name of the portfolio",
            "example": "Customers 2"
          },
          "isDefault": {
            "type": "boolean",
            "description": "States if the portfolio is set as Default or not",
            "example": false
          },
          "emailSubject": {
            "type": "string",
            "description": "The subject of the email notification.",
            "example": "Creditsafe Monitoring Notification on portfolio {{portfolioName}}"
          },
          "emails": {
            "type": "array",
            "description": "The email addresses of the user to receive the email notification.",
            "items": {
              "properties": {
                "firstName": {
                  "type": "string",
                  "description": "The first name of the user to receive the email notification.",
                  "example": "John"
                },
                "lastName": {
                  "type": "string",
                  "description": "The last name of the user to receive the email notification.",
                  "example": "Doe"
                },
                "emailAddress": {
                  "type": "string",
                  "description": "The email address of the user to receive the email notification.",
                  "example": "john.doe@creditsafe.com"
                }
              }
            }
          }
        }
      },
      "Connect.Monitoring.DeletePortfolio": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Message stating if your request was successful",
            "example": "Portfolio removed and service usage will be updated shortly"
          }
        }
      },
      "Connect.Monitoring.UpdatePortfolioRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The name of the portfolio"
          },
          "isDefault": {
            "type": "boolean",
            "description": "Change the setting of the portfolio as default for company monitoring events.<br><br> Changing the default portfolio will automatically change the status of the previous default to 'false'."
          },
          "emails": {
            "type": "array",
            "description": "The email addresses of the user to receive the email notification.",
            "items": {
              "$ref": "#/components/schemas/Connect.Monitoring.UpdatePortfolioRequestEmail"
            }
          },
          "emailSubject": {
            "type": "string",
            "description": "The subject of the email notification."
          },
          "emailLanguage": {
            "type": "string",
            "description": "The language of the email notification."
          },
          "frequency": {
            "type": "string"
          }
        },
        "required": [
          "name"
        ]
      },
      "Connect.Monitoring.UpdatePortfolioRequestEmail": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "description": "The first name of the user to receive the email notification."
          },
          "lastName": {
            "type": "string",
            "description": "The last name of the user to receive the email notification."
          },
          "emailAddress": {
            "type": "string",
            "description": "The email address of the user to receive the email notification."
          }
        },
        "required": [
          "emailAddress"
        ]
      },
      "Connect.Monitoring.MonitoredCountriesInPortfolio": {
        "type": "array",
        "items": {
          "type": "string"
        },
        "example": [
          "FR",
          "LU",
          "DE"
        ]
      },
      "Connect.Monitoring.ListPortfolioEventRules": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "isActive": {
              "type": "boolean",
              "description": "Shows whether the notification event rule has been enabled for the given portfolio.",
              "example": 0
            },
            "ruleCode": {
              "type": "number",
              "description": "The unique identifier for the notification event rule.",
              "example": 101
            },
            "ruleCountryCode": {
              "type": "string",
              "description": "The ISO/Alpha 2 format country code for the notification event rule. \"XX\" is used for global rules that apply to companies from all countries.",
              "example": "XX"
            },
            "ruleType": {
              "type": "number",
              "description": "The unique identifier of the `ruleType` for the notification event rule.",
              "example": 4
            },
            "ruleTypeName": {
              "type": "string",
              "description": "A short description of the `ruleType` for the notification event rule.",
              "example": "Rating band change - 3 input"
            },
            "name": {
              "type": "string",
              "description": "The name for the notification event rule.",
              "example": "International Rating | Reduce by {0} Band(s) OR Less than Band {1}"
            },
            "param0": {
              "type": "string",
              "description": "Some notification event rules may include input parameters used to tailor the notifications generated to your preference.",
              "example": "1"
            },
            "param1": {
              "type": "string",
              "description": "Some notification event rules may include input parameters used to tailor the notifications generated to your preference.",
              "example": "A"
            },
            "param2": {
              "type": "string",
              "description": "Some notification event rules may include input parameters used to tailor the notifications generated to your preference.",
              "example": "A"
            }
          }
        }
      },
      "Connect.Monitoring.UpdateEventRulesRequest": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/Connect.Monitoring.UpdateEventRulesBody"
        }
      },
      "Connect.Monitoring.UpdateEventRulesBody": {
        "type": "object",
        "properties": {
          "ruleCode": {
            "type": "integer",
            "description": "The unique ID of the EventRule"
          },
          "isActive": {
            "type": "integer",
            "description": "Flag to show if EventRule is active or not. 0 for false, 1 for true."
          },
          "param0": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          },
          "param1": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          },
          "param2": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "integer"
              }
            ]
          }
        },
        "required": [
          "ruleCode",
          "isActive"
        ]
      },
      "Connect.Monitoring.RiskSummary": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "totalCompanies": {
            "type": "number",
            "description": "Total Companies in the portfolio",
            "example": 66
          },
          "bandACount": {
            "type": "number",
            "example": 20
          },
          "bandApc": {
            "type": "number",
            "example": 40.625
          },
          "bandBCount": {
            "type": "number",
            "example": 17
          },
          "bandBpc": {
            "type": "number",
            "example": 26.5625
          },
          "bandCCount": {
            "type": "number",
            "example": 14
          },
          "bandCpc": {
            "type": "number",
            "example": 21.8775
          },
          "bandDCount": {
            "type": "number",
            "example": 5
          },
          "bandDpc": {
            "type": "number",
            "example": 7.8125
          },
          "bandECount": {
            "type": "number",
            "example": 2
          },
          "bandEpc": {
            "type": "number",
            "example": 3.125
          }
        }
      },
      "Connect.Monitoring.IsProcessedRequest": {
        "type": "object",
        "properties": {
          "isProcessed": {
            "type": "boolean"
          }
        }
      },
      "Connect.Monitoring.IsProcessedResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "data": {
            "type": "object",
            "properties": {
              "message": {
                "type": "string",
                "example": "Update successful"
              }
            }
          }
        }
      },
      "Connect.Monitoring.CompaniesInAPortfolio": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "totalCount": {
            "type": "number",
            "description": "The total number of events returned for the given company.",
            "example": 1
          },
          "paging": {
            "$ref": "#/components/schemas/Connect.Monitoring.Paging"
          },
          "data": {
            "type": "array",
            "items": {
              "properties": {
                "id": {
                  "type": "string",
                  "description": "The connectId of the company. A connectId is the primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
                  "example": "US-X-US22384484"
                },
                "safeNumber": {
                  "type": "string",
                  "description": "The Safe Number (Creditsafe's identifier on all Companies owned in the Creditsafe Universe) of the company.",
                  "example": "US22384484"
                },
                "name": {
                  "type": "string",
                  "description": "The name of the company .",
                  "example": "GOOGLE LLC"
                },
                "address": {
                  "type": "string",
                  "description": "The address of the company.",
                  "example": "VIA PABLO NERUDA, 4, TREZZANO SUL NAVIGLIO, 20090"
                },
                "countryCode": {
                  "type": "string",
                  "description": "ISO/Alpha 2 format country code of the company.",
                  "example": "US"
                },
                "portfolioId": {
                  "type": "number",
                  "description": "The portfolio Id of the portfolio that contains the company.",
                  "example": 589960
                },
                "creditLimit": {
                  "type": "number",
                  "description": "The credit limit of the company.",
                  "example": 10000,
                  "nullable": true
                },
                "dateLastEvent": {
                  "type": "string",
                  "description": "The date of the most recent event the company has had.",
                  "example": "2018-06-14T00:59:06",
                  "nullable": true
                },
                "freeText": {
                  "type": "string",
                  "description": "Field that can be used to add a free text note to when adding a company to a portfolio.",
                  "example": null,
                  "nullable": true
                },
                "personalLimit": {
                  "type": "string",
                  "description": "Field that can be used to add a personal limit number against the company in a portfolio.",
                  "example": 10000,
                  "nullable": true
                },
                "personalReference": {
                  "type": "string",
                  "description": "Field that can be used to add a personal reference against the company in a portfolio.",
                  "example": "Follow up Jan 2021",
                  "nullable": true
                },
                "ratingCommon": {
                  "type": "string",
                  "description": "The rating score band that the company is in.",
                  "example": "A",
                  "nullable": true
                },
                "ratingLocal": {
                  "type": "string",
                  "description": "Country specific rating score.",
                  "example": "Not rated - insufficient information to rate",
                  "nullable": true
                },
                "companyStatus": {
                  "type": "string",
                  "description": "The current status of the company",
                  "example": 1,
                  "nullable": true
                },
                "dateAdded": {
                  "type": "string",
                  "format": "date-time"
                },
                "dateModified": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        }
      },
      "Connect.Monitoring.AddCompanyToPortfolioRequest": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The company Safe Number or Connect ID"
          },
          "personalReference": {
            "description": "A personal reference for the company",
            "type": "string"
          },
          "freeText": {
            "description": "A free field to add any additional text to the company in the portfolio",
            "type": "string"
          },
          "personalLimit": {
            "description": "A personal limit for the company - separate from the credit limit",
            "type": "string"
          }
        },
        "required": [
          "id",
          "personalReference",
          "freeText",
          "personalLimit"
        ]
      },
      "Connect.Monitoring.AddCompanyToPortfolioResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "message": {
            "type": "string",
            "description": "A status message relating to your request.",
            "example": "Company Added"
          }
        }
      },
      "Connect.Monitoring.CopyAndMoveCompaniesRequest": {
        "type": "object",
        "properties": {
          "portfolios": {
            "description": "Comma separated portfolioId(s).",
            "type": "array",
            "items": {
              "type": "integer",
              "description": "Comma separated portfolioId(s)"
            }
          },
          "companies": {
            "description": "Array of companies to copy.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Monitoring.CopyAndMoveCompaniesBodyCompanies"
            }
          }
        },
        "required": [
          "portfolios"
        ]
      },
      "Connect.Monitoring.CopyAndMoveCompaniesBodyCompanies": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "Company Safe Number or Connect ID. Not required when copyAll query parameter is set to true."
          }
        }
      },
      "Connect.Monitoring.CopyAndMoveCompaniesResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "data": {
            "type": "object",
            "properties": {
              "totalPortfoliosCompanies": {
                "type": "integer",
                "description": "Total amount of companies attempted to copy.",
                "example": 5
              },
              "successfulPortfoliosCompanies": {
                "type": "integer",
                "description": "Amount of companies successfully copied.",
                "example": 3
              },
              "failedPortfoliosCompanies": {
                "type": "integer",
                "description": "Amount of companies successfully copied.",
                "example": 2
              },
              "reason": {
                "type": "string",
                "description": "A message with a reason for why there was failures.",
                "example": "Duplicate entry '199483-FR00002855' for key 'PRIMARY"
              }
            }
          }
        }
      },
      "Connect.Monitoring.ClearCompaniesRequest": {
        "type": "object",
        "properties": {
          "companies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Comma separated Company Safe Number or Connect ID. Not required when copyAll query parameter is set to true."
      },
      "Connect.Monitoring.ClearCompaniesResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "message": {
            "type": "string",
            "description": "A message stating if your request was successful.",
            "example": "Companies deleted from portfolio"
          }
        }
      },
      "Connect.Monitoring.GetCompanyFromPortfolio": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "connectId": {
            "type": "string",
            "description": "The connectId of the company. A connectId is the primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
            "example": "US-X-US22384484"
          },
          "portfolioId": {
            "type": "number",
            "description": "The portfolio Id of the portfolio that contains the company.",
            "example": 589960
          },
          "personalReference": {
            "type": "string",
            "description": "Field that can be used to add a personal reference against the company in a portfolio.",
            "example": "Follow up Jan 2021",
            "nullable": true
          },
          "freeText": {
            "type": "string",
            "description": "Field that can be used to add a free text note to when adding a company to a portfolio.",
            "example": null,
            "nullable": true
          },
          "personalLimit": {
            "type": "string",
            "description": "Field that can be used to add a personal limit number against the company in a portfolio.",
            "example": 10000,
            "nullable": true
          },
          "safeNumber": {
            "type": "string",
            "description": "The Safe Number (Creditsafe's identifier on all Companies owned in the Creditsafe Universe) of the company.",
            "example": "US22384484"
          },
          "name": {
            "type": "string",
            "description": "The name of the company .",
            "example": "GOOGLE LLC"
          },
          "countryCode": {
            "type": "string",
            "description": "ISO/Alpha 2 format country code of the company.",
            "example": "US"
          },
          "address": {
            "type": "string",
            "description": "The address of the company.",
            "example": "VIA PABLO NERUDA, 4, TREZZANO SUL NAVIGLIO, 20090"
          },
          "companyStatus": {
            "type": "string",
            "description": "The current status of the company",
            "example": 1,
            "nullable": true
          },
          "creditLimit": {
            "type": "number",
            "description": "The credit limit of the company.",
            "example": 10000,
            "nullable": true
          },
          "ratingCommon": {
            "type": "string",
            "description": "The rating score band that the company is in.",
            "example": "A",
            "nullable": true
          },
          "ratingLocal": {
            "type": "string",
            "description": "Country specific rating score.",
            "example": "Not rated - insufficient information to rate",
            "nullable": true
          },
          "dateLastEvent": {
            "type": "string",
            "format": "date-time",
            "description": "The date of the most recent event the company has had.",
            "example": "2018-06-14T00:59:06",
            "nullable": true
          },
          "dateAdded": {
            "type": "string",
            "format": "date-time",
            "description": "The date the company was added to the portfolio.",
            "example": "2020-07-01T00:59:06",
            "nullable": true
          },
          "dateModified": {
            "type": "string",
            "format": "date-time",
            "description": "The date the company was last modified in the portfolio.",
            "example": "2020-07-01T00:59:06",
            "nullable": true
          }
        }
      },
      "Connect.Monitoring.UpdateCompanyInPortfolio": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "message": {
            "type": "string",
            "description": "A message stating successful update.",
            "example": "Company updated successfully"
          }
        }
      },
      "Connect.Monitoring.DeleteCompanyFromPortfolio": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "message": {
            "type": "string",
            "description": "A message stating successful deletion.",
            "example": "Company removed"
          }
        }
      },
      "Connect.Monitoring.UpdateCompanyDetailsInPortfolioRequest": {
        "type": "object",
        "properties": {
          "personalReference": {
            "description": "Field that can be used to add a personal reference against the company in a portfolio.",
            "type": "string"
          },
          "freeText": {
            "description": "Field that can be used to add a free text note to when adding/updating a company to a portfolio.",
            "type": "string"
          },
          "personalLimit": {
            "description": "Field that can be used to add a personal limit number against the company in a portfolio.",
            "type": "string"
          }
        },
        "required": [
          "personalReference",
          "freeText",
          "personalLimit"
        ]
      },
      "Connect.Monitoring.ListSharingPermissions": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "data": {
            "type": "object",
            "properties": {
              "portfolioId": {
                "type": "string",
                "description": "A unique ID assigned to each portfolio.",
                "example": "13437356"
              },
              "customerId": {
                "type": "number",
                "description": "A unique ID assigned to your customer account.",
                "example": 101375376
              },
              "userPermission": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "csUserId": {
                      "type": "number",
                      "description": "The unique ID assigned to the user account the portfolios are shared with.",
                      "example": 101435674
                    },
                    "userName": {
                      "type": "string",
                      "description": "The username of the user.",
                      "example": "UPPStage"
                    },
                    "permission": {
                      "type": "string",
                      "description": "The permissions this user has for this portfolio.",
                      "example": "View, Add, Remove"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Connect.Monitoring.SharePortfolioRequest": {
        "type": "object",
        "properties": {
          "revokeAll": {
            "type": "string",
            "description": "If set to \"true\", all user permissions will be revoked for the portfolio. By default set to \"false\"."
          },
          "userPermissions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Monitoring.SharePortfolioRequestBody"
            }
          }
        }
      },
      "Connect.Monitoring.SharePortfolioRequestBody": {
        "type": "object",
        "properties": {
          "csUserId": {
            "type": "integer",
            "description": "A creditsafe user id."
          },
          "permissions": {
            "type": "string",
            "description": "Comma separated permissions. \"View\" permission gets automatically added to the user if \"Add\", \"Edit\", \"Remove\" permissions are set."
          }
        }
      },
      "Connect.Monitoring.SharePortfolioRequestResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "data": {
            "type": "object",
            "properties": {
              "portfolioId": {
                "type": "string",
                "description": "A unique ID assigned to each portfolio.",
                "example": "13437356"
              },
              "customerId": {
                "type": "number",
                "description": "A unique ID assigned to your customer account.",
                "example": 101375376
              },
              "status": {
                "type": "string",
                "description": "A message about the status of this request.",
                "example": "Success"
              }
            }
          }
        }
      },
      "Connect.Monitoring.ImportAndSyncPortfolioRequest": {
        "type": "object",
        "properties": {
          "importcsv": {
            "type": "string",
            "format": "binary",
            "description": "The import file ideally needs to be a .csv file."
          },
          "email": {
            "type": "string",
            "description": "Option field. Provide an email and get a notification when the import has been completed with the details about the import.",
            "example": "john.smith@creditsafe.com"
          }
        }
      },
      "Connect.Monitoring.ImportAndSyncPortfolioResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "status": {
            "type": "string",
            "description": "A message about the status of this request.",
            "example": "Accepted for processing. Import Id 339523"
          }
        }
      },
      "Connect.Monitoring.CompanyInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The connectId of the company that triggered the `notificationEvent`. A connectId is the primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
            "example": "US-X-US22384484"
          },
          "safeNumber": {
            "type": "string",
            "description": "The Safe Number (Creditsafe's identifier on all Companies owned in the Creditsafe Universe) of the company that triggered the `notificationEvent`.",
            "example": "US22384484"
          },
          "name": {
            "type": "string",
            "description": "The name of the company that triggered the `notificationEvent`.",
            "example": "GOOGLE LLC"
          },
          "countryCode": {
            "type": "string",
            "description": "ISO/Alpha 2 format country code of the company that triggered the `notificationEvent`.",
            "example": "US"
          },
          "portfolioId": {
            "type": "number",
            "description": "The portfolio Id of the portfolio that contains the company that triggered the `notificationEvent`.",
            "example": 589960
          },
          "portfolioName": {
            "type": "string",
            "description": "The name of the portfolio that contains the company that triggered the `notificationEvent`.",
            "example": "Default"
          }
        }
      },
      "Connect.Monitoring.Paging": {
        "type": "object",
        "description": "Paging parameters.",
        "properties": {
          "size": {
            "type": "number",
            "nullable": true,
            "description": "The maximum number of results returned per page.",
            "example": 10
          },
          "prev": {
            "type": "number",
            "nullable": true,
            "description": "The page number of the previous page, null if there is no previous page available.",
            "example": 0
          },
          "next": {
            "type": "number",
            "nullable": true,
            "description": "The page number of the next page, null if there is no next page available.",
            "example": 2
          },
          "last": {
            "type": "number",
            "nullable": true,
            "description": "The page number of the last page.",
            "example": 3
          }
        }
      },
      "Connect.DecisionEngine.GUIDListResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e"
          },
          "GUIDList": {
            "type": "array",
            "items": {
              "properties": {
                "friendlyName": {
                  "type": "string",
                  "description": "The name of the decision tree.",
                  "example": "Check & Decide Demo"
                },
                "GUID": {
                  "type": "string",
                  "description": "The unique reference for the decision tree.",
                  "example": "repoObj_0ed6a4aa_16e17d977e9_07ffb16e17d977e9"
                },
                "type": {
                  "type": "string",
                  "enum": [
                    "Credit Approval",
                    "Bespoke",
                    "Demo"
                  ],
                  "description": "The type of the decision tree."
                },
                "serviceLine": {
                  "type": "string",
                  "description": "The internal reference for the service line that credits will be deducted from on each decision tree run.",
                  "example": "dec_eng_cas",
                  "nullable": true
                }
              }
            }
          }
        }
      },
      "Connect.DecisionEngine.UserDataFieldsResponse": {
        "type": "object",
        "properties": {
          "decisionEngineId": {
            "type": "string",
            "description": "The unique reference for the decision tree.",
            "example": "repoObj_0ed6a4aa_16e17d977e9_07ffb16e17d977e9"
          },
          "fields": {
            "type": "array",
            "description": "A list of user-input data fields that are supported by the provided decision tree. The values for these fields should be passed to the `/{guid}` endpoint call when running a decision.",
            "items": {
              "properties": {
                "orderIndex": {
                  "type": "number",
                  "description": "Used to assist ordering of the user data fields on a UI.",
                  "example": 100
                },
                "label": {
                  "type": "string",
                  "description": "The user-friendly label for the field for display on a UI.",
                  "example": "Product Type"
                },
                "paramName": {
                  "type": "string",
                  "description": "The string value for the parameter to be used when calling the `/{guid}` endpoint.",
                  "example": "productType"
                },
                "fieldType": {
                  "type": "string",
                  "enum": [
                    "Text",
                    "Integer",
                    "Dropdown"
                  ],
                  "description": "The type of user data field.",
                  "example": "Dropdown"
                },
                "mandatory": {
                  "type": "boolean",
                  "description": "Flag to dictate whether the user data field is required when running the associated decision tree.",
                  "example": true
                },
                "dropdownDetails": {
                  "type": "array",
                  "nullable": true,
                  "items": {
                    "properties": {
                      "label": {
                        "type": "string",
                        "description": "The user-friendly label for the drop-down option for display on a UI.",
                        "example": "Product A"
                      },
                      "presentationOrder": {
                        "type": "number",
                        "description": "Used to assist ordering of the drop-down options on a UI.",
                        "example": 100
                      }
                    }
                  }
                },
                "validation": {
                  "type": "array",
                  "nullable": true,
                  "description": "Optional validation rules that should be applied to the corresponding user data field prior to running the decision tree.",
                  "items": {
                    "properties": {
                      "validationType": {
                        "type": "string",
                        "enum": [
                          "Regex Match",
                          "Maximum",
                          "Minimum",
                          "Length",
                          "Custom"
                        ],
                        "description": "The type of validation rule.",
                        "example": "Minimum"
                      },
                      "validationValue": {
                        "type": "string",
                        "description": "The value for the validation rule.",
                        "example": 100
                      },
                      "description": {
                        "type": "string",
                        "description": "A description for the validation rule.",
                        "example": "Minimum Sales Value $100"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Connect.DecisionEngine.RunDecisionResponse": {
        "type": "object",
        "properties": {
          "Decision": {
            "type": "string",
            "description": "The decision returned by the automated decision model.",
            "example": "Reject",
            "nullable": true
          },
          "DecisionText": {
            "type": "string",
            "description": "The text output to accompany the decision returned by the decision model.",
            "example": "The Sales Value requested is greater than Creditsafe's recommended credit limit.",
            "nullable": true
          },
          "Audits": {
            "type": "array",
            "description": "An array of audit values. The parameters output for audit are tailored and bespoke to each decision tree.",
            "nullable": true,
            "items": {
              "properties": {
                "description": {
                  "type": "string",
                  "description": "The value for the audit parameter at the point in time in which the decision tree was run.",
                  "example": "A",
                  "nullable": true
                },
                "RuleName": {
                  "type": "string",
                  "description": "The friendly name for the audit parameter.",
                  "example": "International Score",
                  "nullable": true
                }
              }
            }
          },
          "originationId": {
            "type": "string",
            "description": "Displays the optional text passed through to be stored against the decision in the original call to `/{provenirId}`. Typically used for internal identifiers (e.g. SalesForce IDs).",
            "example": "SFC-1976",
            "nullable": true
          },
          "statusCode": {
            "type": "string",
            "description": "The status of the decision. typically, 1 is reserved for positive outcomes, 2 for pending status and 3 for negative outcomes.",
            "example": 3,
            "nullable": true
          }
        }
      },
      "Connect.DecisionEngine.UsageLogResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "number",
            "description": "The total number of previous decisions matching the defined filter criteria.",
            "example": 3108
          },
          "usageLog": {
            "type": "array",
            "items": {
              "properties": {
                "decisionLogId": {
                  "type": "number",
                  "description": "The unique identifier for the decision log.",
                  "example": 64492
                },
                "provenirId": {
                  "type": "string",
                  "description": "The unique identifier of the decision tree.",
                  "example": "repoObj_0ed6a4aa_16e17d977e9_07ffb16e17d977e9"
                },
                "friendlyName": {
                  "type": "string",
                  "description": "The name of the decision tree.",
                  "example": "Check & Decide Demo"
                },
                "userId": {
                  "type": "number",
                  "description": "The unique identifier for the user's account, used across the Creditsafe product suite.",
                  "example": 101445010
                },
                "companyId": {
                  "type": "string",
                  "description": "The connectId of the company that the decision was ran on. A connectId is the primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
                  "example": "US001-X-US60521352"
                },
                "companyName": {
                  "type": "string",
                  "description": "The name of the company that the decision was ran on.",
                  "example": "CREDITSAFE USA INC.",
                  "nullable": true
                },
                "response": {
                  "type": "object",
                  "properties": {
                    "Decision": {
                      "type": "string",
                      "description": "The decision returned by the automated decision model.",
                      "example": "Reject"
                    },
                    "DecisionText": {
                      "type": "string",
                      "description": "The text output to accompany the decision returned by the decision model.",
                      "example": "The Sales Value requested is greater than Creditsafe's recommended credit limit."
                    },
                    "Audits": {
                      "type": "array",
                      "description": "An array of audit values. The parameters output for audit are tailored and bespoke to each decision tree.",
                      "items": {
                        "properties": {
                          "description": {
                            "type": "string",
                            "description": "The value for the audit parameter at the point in time in which the decision tree was run.",
                            "example": "A"
                          },
                          "RuleName": {
                            "type": "string",
                            "description": "The friendly name for the audit parameter.",
                            "example": "International Score"
                          }
                        }
                      }
                    },
                    "originationId": {
                      "type": "string",
                      "description": "Displays the optional text passed through to be stored against the decision in the original call to `/{provenirId}`. Typically used for internal identifiers (e.g. SalesForce IDs).",
                      "example": "SFC-1976",
                      "nullable": true
                    },
                    "statusCode": {
                      "type": "string",
                      "description": "The status of the decision. typically, 1 is reserved for positive outcomes, 2 for pending status and 3 for negative outcomes.",
                      "example": 3
                    }
                  }
                },
                "decisionDate": {
                  "type": "string",
                  "format": "date-time",
                  "description": "The timestamp that the decision model was run."
                },
                "notes": {
                  "type": "string",
                  "nullable": true,
                  "description": "The notes associated with this decision."
                },
                "status": {
                  "type": "number",
                  "description": "The status of the decision. typically, 1 is reserved for positive outcomes, 2 for pending status and 3 for negative outcomes.",
                  "example": 3
                }
              }
            }
          }
        }
      },
      "Connect.DecisionEngine.DecisionLogResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "description": "A unique ID assigned to this request.",
            "example": "23921650-c073-11ea-860f-06bc8182190e",
            "deprecated": true
          },
          "decisionLogId": {
            "type": "number",
            "description": "The unique identifier for the decision log.",
            "example": 64492
          },
          "provenirId": {
            "type": "string",
            "description": "The unique identifier of the decision tree.",
            "example": "repoObj_0ed6a4aa_16e17d977e9_07ffb16e17d977e9"
          },
          "friendlyName": {
            "type": "string",
            "description": "The name of the decision tree.",
            "example": "Check & Decide Demo"
          },
          "userId": {
            "type": "number",
            "description": "The unique identifier for the user's account, used across the Creditsafe product suite.",
            "example": 101445010
          },
          "companyId": {
            "type": "string",
            "description": "The connectId of the company that the decision was ran on. A connectId is the primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
            "example": "US001-X-US60521352"
          },
          "companyName": {
            "type": "string",
            "description": "The name of the company that the decision was ran on.",
            "example": "CREDITSAFE USA INC.",
            "nullable": true
          },
          "response": {
            "type": "object",
            "properties": {
              "Decision": {
                "type": "string",
                "description": "The decision returned by the automated decision model.",
                "example": "Reject"
              },
              "DecisionText": {
                "type": "string",
                "description": "The text output to accompany the decision returned by the decision model.",
                "example": "The Sales Value requested is greater than Creditsafe's recommended credit limit."
              },
              "Audits": {
                "type": "array",
                "description": "An array of audit values. The parameters output for audit are tailored and bespoke to each decision tree.",
                "items": {
                  "properties": {
                    "description": {
                      "type": "string",
                      "description": "The value for the audit parameter at the point in time in which the decision tree was run.",
                      "example": "A"
                    },
                    "RuleName": {
                      "type": "string",
                      "description": "The friendly name for the audit parameter.",
                      "example": "International Score"
                    }
                  }
                }
              },
              "statusCode": {
                "type": "string",
                "description": "The status of the decision. Typically, 1 is reserved for positive outcomes, 2 for pending status and 3 for negative outcomes.",
                "example": 3
              }
            }
          },
          "decisionDate": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp that the decision model was run."
          },
          "originationId": {
            "type": "string",
            "description": "Displays the optional text passed through to be stored against the decision in the original call to `/{provenirId}`. Typically used for internal identifiers (e.g. SalesForce IDs).",
            "example": "SFC-1976",
            "nullable": true
          },
          "status": {
            "type": "number",
            "description": "The status of the decision. typically, 1 is reserved for positive outcomes, 2 for pending status and 3 for negative outcomes.",
            "example": 3
          },
          "notes": {
            "type": "string",
            "nullable": true,
            "description": "The notes associated with this decision."
          },
          "modifiedDate": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp that this decision was last modified."
          }
        }
      },
      "Connect.DecisionEngine.UpdateDecisionRequest": {
        "type": "object",
        "properties": {
          "statusCode": {
            "type": "number",
            "description": "The status that the decision will be updated to. Typically, 1 is reserved for positive outcomes, 2 for pending status and 3 for negative outcomes.",
            "example": 1
          },
          "notes": {
            "type": "string",
            "description": "Free text field to allow for the saving of notes on the associated decision object.",
            "example": "Manually approved by Senior Credit Controller."
          }
        }
      },
      "Connect.BankMatch.Result": {
        "type": "object",
        "properties": {
          "totalSize": {
            "type": "integer",
            "example": 1
          },
          "bankMatchResults": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "companyNumber": {
                  "type": "string",
                  "nullable": true,
                  "example": "X9999999"
                },
                "accountNumber": {
                  "type": "string",
                  "nullable": true,
                  "example": "66374957"
                },
                "iban": {
                  "type": "string",
                  "nullable": true,
                  "example": "GB55TEST08999966374957"
                },
                "ibanResult": {
                  "type": "string",
                  "description": "Match or No Match",
                  "nullable": true
                },
                "ibanText": {
                  "type": "string",
                  "nullable": true,
                  "example": "The IBAN provided does not match the company UK07499628."
                },
                "logDate": {
                  "type": "string",
                  "nullable": true,
                  "example": "2020-06-04T11:04:32.7301608+00:00"
                },
                "safeNumber": {
                  "type": "string",
                  "nullable": true,
                  "example": "UK07499628"
                },
                "scanResult": {
                  "type": "string",
                  "description": "Match or No Match",
                  "nullable": true
                },
                "scanText": {
                  "type": "string",
                  "nullable": true,
                  "example": "The Sort Code and Account Number provided does not match the company UK07499628."
                },
                "sortCode": {
                  "type": "string",
                  "nullable": true,
                  "example": "089999"
                },
                "statusResult": {
                  "type": "string",
                  "description": "Request status, e.g. Success, Error, Warning",
                  "nullable": true
                },
                "statusText": {
                  "type": "string",
                  "description": "Explanation for error or warning, if applicable, otherwise empty quotation marks",
                  "nullable": true
                },
                "vatResult": {
                  "type": "string",
                  "description": "Match or No Match",
                  "nullable": true
                },
                "vatText": {
                  "type": "string",
                  "nullable": true,
                  "example": "The VAT provided matches the company UK07499628."
                }
              }
            }
          }
        }
      },
      "Creditsafe.GlobalData.CountryCode": {
        "enum": [
          "AF",
          "AX",
          "AL",
          "DZ",
          "AS",
          "AD",
          "AO",
          "AI",
          "AQ",
          "AG",
          "AR",
          "AM",
          "AW",
          "AU",
          "AT",
          "AZ",
          "BS",
          "BH",
          "BD",
          "BB",
          "BY",
          "BE",
          "BZ",
          "BJ",
          "BM",
          "BT",
          "BO",
          "BA",
          "BW",
          "BV",
          "BR",
          "IO",
          "BN",
          "BG",
          "BF",
          "BI",
          "KH",
          "CM",
          "CA",
          "CV",
          "KY",
          "CF",
          "TD",
          "CL",
          "CN",
          "CX",
          "CC",
          "CO",
          "KM",
          "CG",
          "CD",
          "CK",
          "CR",
          "CI",
          "HR",
          "CU",
          "CY",
          "CZ",
          "DK",
          "DJ",
          "DM",
          "DO",
          "EC",
          "EG",
          "SV",
          "GQ",
          "ER",
          "EE",
          "ET",
          "FK",
          "FO",
          "FJ",
          "FI",
          "FR",
          "GF",
          "PF",
          "TF",
          "GA",
          "GM",
          "GE",
          "DE",
          "GH",
          "GI",
          "GR",
          "GL",
          "GD",
          "GP",
          "GU",
          "GT",
          "GG",
          "GN",
          "GW",
          "GY",
          "HT",
          "HM",
          "HN",
          "HK",
          "HU",
          "IS",
          "IN",
          "ID",
          "IR",
          "IQ",
          "IE",
          "IM",
          "IL",
          "IT",
          "JM",
          "JP",
          "JE",
          "JO",
          "KZ",
          "KE",
          "KI",
          "KP",
          "KR",
          "KW",
          "KG",
          "LA",
          "LV",
          "LB",
          "LS",
          "LR",
          "LY",
          "LI",
          "LT",
          "LU",
          "MO",
          "MK",
          "MG",
          "MW",
          "MY",
          "MV",
          "ML",
          "MT",
          "MH",
          "MQ",
          "MR",
          "MU",
          "YT",
          "MX",
          "FM",
          "MD",
          "MC",
          "MN",
          "ME",
          "MS",
          "MA",
          "MZ",
          "MM",
          "NA",
          "NR",
          "NP",
          "NL",
          "AN",
          "NC",
          "NZ",
          "NI",
          "NE",
          "NG",
          "NU",
          "NF",
          "MP",
          "NO",
          "OM",
          "PK",
          "PW",
          "PS",
          "PA",
          "PG",
          "PY",
          "PE",
          "PH",
          "PN",
          "PL",
          "PT",
          "PR",
          "QA",
          "RE",
          "RO",
          "RU",
          "RW",
          "BL",
          "SH",
          "KN",
          "LC",
          "MF",
          "PM",
          "VC",
          "WS",
          "SM",
          "ST",
          "SA",
          "SN",
          "RS",
          "SC",
          "SL",
          "SG",
          "SK",
          "SI",
          "SB",
          "SO",
          "ZA",
          "GS",
          "ES",
          "LK",
          "SD",
          "SR",
          "SJ",
          "SZ",
          "SE",
          "CH",
          "SY",
          "TW",
          "TJ",
          "TZ",
          "TH",
          "TL",
          "TG",
          "TK",
          "TO",
          "TT",
          "TN",
          "TR",
          "TM",
          "TC",
          "TV",
          "UG",
          "UA",
          "AE",
          "GB",
          "US",
          "UM",
          "UY",
          "UZ",
          "VU",
          "VA",
          "VE",
          "VN",
          "VG",
          "VI",
          "WF",
          "EH",
          "YE",
          "ZM",
          "ZW",
          "XK",
          "SS",
          "SX",
          "CW",
          "BQ",
          "WW",
          "PLC"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.Language": {
        "enum": [
          "OM",
          "AB",
          "AA",
          "AF",
          "SQ",
          "AM",
          "AR",
          "HY",
          "AS",
          "AY",
          "AZ",
          "BA",
          "EU",
          "BN",
          "DZ",
          "BH",
          "BI",
          "BR",
          "BG",
          "MY",
          "BE",
          "KM",
          "CA",
          "ZH",
          "CO",
          "HR",
          "CS",
          "DA",
          "NL",
          "EN",
          "EO",
          "ET",
          "FO",
          "FJ",
          "FI",
          "FR",
          "FY",
          "GL",
          "KA",
          "DE",
          "EL",
          "KL",
          "GN",
          "GU",
          "HA",
          "HE",
          "HI",
          "HU",
          "IS",
          "ID",
          "IA",
          "IE",
          "IK",
          "IU",
          "GA",
          "IT",
          "JA",
          "JW",
          "KN",
          "KS",
          "KK",
          "RW",
          "KY",
          "RN",
          "KO",
          "KU",
          "LO",
          "LA",
          "LV",
          "LN",
          "LT",
          "MK",
          "MG",
          "MS",
          "ML",
          "MT",
          "MI",
          "MR",
          "MO",
          "MN",
          "NA",
          "NE",
          "NO",
          "OC",
          "OR",
          "PS",
          "FA",
          "PL",
          "PT",
          "PA",
          "QU",
          "RM",
          "RO",
          "RU",
          "SM",
          "SG",
          "SA",
          "GD",
          "SR",
          "SH",
          "ST",
          "TN",
          "SN",
          "SD",
          "SI",
          "SS",
          "SK",
          "SL",
          "SO",
          "ES",
          "SU",
          "SW",
          "SV",
          "TL",
          "TG",
          "TA",
          "TT",
          "TE",
          "TH",
          "BO",
          "TI",
          "TO",
          "TS",
          "TR",
          "TK",
          "TW",
          "UG",
          "UK",
          "UR",
          "UZ",
          "VI",
          "VO",
          "CY",
          "WO",
          "XH",
          "YI",
          "YO",
          "ZA",
          "ZU"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.CompanyType": {
        "description": "`NonLtdNonReg` is only available for countries in Norway.",
        "enum": [
          "NotSet",
          "Ltd",
          "NonLtd",
          "NonLtdNonReg"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.Country": {
        "type": "object",
        "properties": {
          "code": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          },
          "onlineReports": {
            "type": "boolean"
          },
          "monitoring": {
            "type": "boolean"
          },
          "availableLanguages": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Language"
            }
          },
          "availableCompanyTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyType"
            }
          }
        }
      },
      "Creditsafe.GlobalData.MessageType": {
        "enum": [
          "Information",
          "Warning",
          "Error"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.MessageCode": {
        "enum": [
          "NoResults",
          "TooManyResults",
          "ReportUnavailable",
          "ReportUnavailableDueToLegal",
          "ReportUnavailableOnline",
          "LegalNotice",
          "InvalidCredentials",
          "AccessRestricted",
          "AccessLimitsNearing",
          "InsufficientCustomerData",
          "ReportboxAlmostFull",
          "ReportboxFull",
          "InvalidRequestXml",
          "InvalidOperationParameters",
          "OperationNotSupported",
          "InvalidCustomData",
          "ChangeNotification",
          "TemporarySystemProblem",
          "EndpointShutdown",
          "UnexpectedInternalError",
          "Other",
          "DataServiceAccessProblems",
          "DataServiceInvalidResponse"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.Message": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.MessageType"
          },
          "code": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.MessageCode"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.ServiceResponse": {
        "type": "object",
        "properties": {
          "chargeReference": {
            "type": "string"
          },
          "messages": {
            "description": "Provides information about the request and the response.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Message"
            }
          }
        }
      },
      "Creditsafe.GlobalData.CountriesList": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "countries": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Country"
                }
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.CustomDataEntrySchema": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string"
          },
          "optional": {
            "type": "boolean"
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.CustomDataSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "customData": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.CustomDataEntrySchema"
                }
              },
              "country": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String": {
        "type": "object",
        "properties": {
          "required": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "validationRegExp": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.QueryMatchType": {
        "enum": [
          "MatchBeginning",
          "MatchBlock",
          "MatchAnyParts",
          "MatchWords",
          "MatchBlockOrWords",
          "ExactValue",
          "ClosestKeywords"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.SearchCriteriaSchema-QueryStringSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
          },
          {
            "type": "object",
            "properties": {
              "allowedMatchTypes": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.QueryMatchType"
                }
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_Creditsafe.GlobalData.CompanyType": {
        "type": "object",
        "properties": {
          "optional": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyType"
            }
          },
          "validationRegExp": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.OfficeType": {
        "enum": [
          "Registered",
          "Trading",
          "HeadOffice",
          "Branch",
          "Subsidiary",
          "Franchise",
          "Franchisor",
          "SingleOffice",
          "Other"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_Creditsafe.GlobalData.OfficeType": {
        "type": "object",
        "properties": {
          "optional": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.OfficeType"
            }
          },
          "validationRegExp": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.CompanyStatus": {
        "enum": [
          "Active",
          "NonActive",
          "Pending",
          "Other"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_Creditsafe.GlobalData.CompanyStatus": {
        "type": "object",
        "properties": {
          "optional": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyStatus"
            }
          },
          "validationRegExp": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.AddressCriteriaSchema": {
        "type": "object",
        "properties": {
          "simpleValue": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-QueryStringSchema"
          },
          "street": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
          },
          "houseNo": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
          },
          "city": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
          },
          "postCode": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
          },
          "province": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
          }
        }
      },
      "Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.Boolean": {
        "type": "object",
        "properties": {
          "optional": {
            "type": "boolean"
          },
          "minLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "maxLength": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "allowedValues": {
            "type": "array",
            "items": {
              "type": "boolean"
            }
          },
          "validationRegExp": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.SearchCriteriaSchemaBase": {
        "type": "object"
      },
      "Creditsafe.GlobalData.SearchCriteriaSchema": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchemaBase"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "safeNo": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "regNo": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "vatNo": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "name": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-QueryStringSchema"
              },
              "type": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_Creditsafe.GlobalData.CompanyType"
              },
              "officeType": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_Creditsafe.GlobalData.OfficeType"
              },
              "status": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_Creditsafe.GlobalData.CompanyStatus"
              },
              "address": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressCriteriaSchema"
              },
              "phoneNumber": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "website": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "includeTradingNames": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.Boolean"
              },
              "includeTradingAddresses": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.Boolean"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.SearchCriteriaSchemaCountry": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
            }
          },
          "languages": {
            "type": "array",
            "description": "Available languages to perform a company search in the country queried",
            "items": {
              "type": "string"
            }
          },
          "criteriaSets": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema"
            }
          }
        }
      },
      "Creditsafe.GlobalData.SearchCriteriaSchemaSet": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "customData": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.CustomDataEntrySchema"
                }
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.IdType": {
        "enum": [
          "Other",
          "SafeNumber",
          "RegistrationNumber",
          "VATNumber",
          "TaxID",
          "PersonNumber",
          "ExternalID",
          "InternalID"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.AddressDataReport": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "simpleValue": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "houseNumber": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "directMarketingOptOut": {
            "type": "boolean",
            "nullable": true
          },
          "directMarketingOptIn": {
            "type": "boolean",
            "nullable": true
          },
          "country": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          }
        }
      },
      "Creditsafe.GlobalData.AddressData": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "simpleValue": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "houseNo": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "telephone": {
            "type": "string"
          },
          "directMarketingOptOut": {
            "type": "boolean",
            "nullable": true
          },
          "directMarketingOptIn": {
            "type": "boolean",
            "nullable": true
          },
          "country": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          }
        }
      },
      "Creditsafe.GlobalData.CompanyActivityClassification": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "industrySector": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "classification": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.CompanyData": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          },
          "regNo": {
            "type": "string"
          },
          "safeNo": {
            "type": "string"
          },
          "idType": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.IdType"
          },
          "name": {
            "type": "string"
          },
          "type": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyType"
          },
          "officeType": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.OfficeType"
          },
          "status": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyStatus"
          },
          "vatNo": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
          },
          "activity": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyActivityClassification"
          },
          "legalForm": {
            "type": "string"
          },
          "additionalData": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyDataAdditionalData"
          }
        }
      },
      "Creditsafe.GlobalData.Company": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyData"
          },
          {
            "type": "object",
            "properties": {
              "dateOfLatestAccounts": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "dateOfLatestChange": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "activityCode": {
                "type": "string",
                "nullable": true
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.SearchResponse_1_Creditsafe.GlobalData.Company": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "correlationId": {
                "type": "string"
              },
              "messages": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/CreditsafeGlobalDataMessage"
                }
              },
              "page": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "totalSize": {
                "type": "integer",
                "format": "int32"
              },
              "companies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Company"
                }
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.ReportSection": {
        "enum": [
          "CompanySummary",
          "CompanySummaryExtra",
          "AlternateSummary",
          "CompanyIdentification",
          "CompanyIdentificationExtra",
          "CreditScore",
          "CreditScoreExtra",
          "ContactInformation",
          "ContactInformationExtra",
          "ShareCapitalStructure",
          "ShareCapitalStructureExtra",
          "Directors",
          "DirectorsExtra",
          "Directorships",
          "DirectorshipsExtra",
          "OtherInformation",
          "OtherInformationExtra",
          "GroupStructure",
          "GroupStructureExtra",
          "ExtendedGroupStructure",
          "ExtendedGroupStructureExtra",
          "GlobalFinancialStatements",
          "GlobalFinancialStatementsExtra",
          "LocalFinancialStatements",
          "LocalFinancialStatementsExtra",
          "PaymentData",
          "PaymentDataExtra",
          "NegativeInformation",
          "NegativeInformationExtra",
          "AdditionalInformation",
          "AdditionalInformationExtra",
          "UPPData",
          "Unused"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.Reports.CompanyStatusDescription": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyStatus"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Currency": {
        "enum": [
          "AFA",
          "ALL",
          "DZD",
          "ADF",
          "ADP",
          "AOA",
          "ARA",
          "ARS",
          "AMD",
          "AWG",
          "AUD",
          "AZM",
          "BSD",
          "BHD",
          "BDT",
          "BBD",
          "BYR",
          "BZD",
          "BMD",
          "BTN",
          "BOB",
          "BAM",
          "BWP",
          "BRC",
          "BRL",
          "GBP",
          "BND",
          "BGN",
          "BIF",
          "XOF",
          "XAF",
          "KHR",
          "CAD",
          "CVE",
          "KYD",
          "CLP",
          "CNY",
          "COP",
          "KMF",
          "CDF",
          "CRC",
          "HRK",
          "CUP",
          "CZK",
          "DKK",
          "DJF",
          "DOP",
          "NLG",
          "EUR",
          "ECS",
          "EGP",
          "SVC",
          "EEK",
          "ETB",
          "FKP",
          "FJD",
          "FRF",
          "GMD",
          "GEL",
          "GHC",
          "GIP",
          "XAU",
          "GTQ",
          "GNF",
          "GWP",
          "GYD",
          "HTG",
          "HNL",
          "HKD",
          "HUF",
          "ISK",
          "INR",
          "IDR",
          "IRR",
          "IQD",
          "ILS",
          "JMD",
          "JPY",
          "JOD",
          "KZT",
          "KES",
          "KRW",
          "KWD",
          "KGS",
          "LAK",
          "LVL",
          "LBP",
          "LSL",
          "LRD",
          "LYD",
          "LTL",
          "MOP",
          "MKD",
          "MGF",
          "MWK",
          "MYR",
          "MVR",
          "MTL",
          "MRO",
          "MUR",
          "MXN",
          "MDL",
          "MNT",
          "MAD",
          "MZM",
          "MMK",
          "ANG",
          "NAD",
          "NPR",
          "NZD",
          "NIO",
          "NGN",
          "KPW",
          "NOK",
          "OMR",
          "PKR",
          "XPD",
          "PAB",
          "PGK",
          "PYG",
          "PEN",
          "PHP",
          "XPT",
          "PLN",
          "QAR",
          "RON",
          "RUB",
          "RWF",
          "WST",
          "STD",
          "SAR",
          "RSD",
          "SCR",
          "SLL",
          "XAG",
          "SGD",
          "SKK",
          "SIT",
          "SBD",
          "SOS",
          "ZAR",
          "LKR",
          "SHP",
          "SDD",
          "SDG",
          "SDP",
          "SRD",
          "SRG",
          "SZL",
          "SEK",
          "CHF",
          "SYP",
          "TWD",
          "TJS",
          "TZS",
          "THB",
          "TOP",
          "TTD",
          "TND",
          "TRY",
          "TMM",
          "USD",
          "UGX",
          "UAG",
          "UAK",
          "AED",
          "UYU",
          "UZS",
          "VUV",
          "VEF",
          "VND",
          "YUN",
          "ZMK",
          "ZWD",
          "AFN",
          "ATS",
          "AZN",
          "BYN",
          "BEF",
          "BOV",
          "GRD",
          "FIM",
          "DEM",
          "GHS",
          "IEP",
          "ITL",
          "LUF",
          "PTE",
          "ESP",
          "XDR",
          "TMT",
          "UAH",
          "ERN",
          "MGA",
          "MRU",
          "MZN",
          "SSP",
          "STN",
          "YER",
          "XPF",
          "XCD",
          "ZMW",
          "ZWL"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Currency"
          },
          "value": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.CommonRatingValue": {
        "enum": [
          "A",
          "B",
          "C",
          "D",
          "E"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.Reports.FinancialValue_1_System.String": {
        "type": "object",
        "properties": {
          "currency": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Currency"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.RangeDescribedValue_1_System.String": {
        "type": "object",
        "properties": {
          "maxValue": {
            "type": "string"
          },
          "minValue": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.CreditRating": {
        "type": "object",
        "properties": {
          "commonValue": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CommonRatingValue"
          },
          "commonDescription": {
            "type": "string"
          },
          "creditLimit": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.String"
          },
          "providerValue": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.RangeDescribedValue_1_System.String"
          },
          "providerDescription": {
            "type": "string"
          },
          "pod": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "assessment": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.LtdCompanySummary": {
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          },
          "companyNumber": {
            "type": "string"
          },
          "companyRegistrationNumber": {
            "type": "string"
          },
          "mainActivity": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyActivityClassification"
          },
          "companyStatus": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyStatusDescription"
          },
          "latestTurnoverFigure": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "latestShareholdersEquityFigure": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "creditRating": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CreditRating"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.LegalForm": {
        "type": "object",
        "properties": {
          "commonCode": {
            "type": "string"
          },
          "providerCode": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.LtdCompanyBasicInformation": {
        "type": "object",
        "properties": {
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "registeredCompanyName": {
            "type": "string"
          },
          "companyRegistrationNumber": {
            "type": "string"
          },
          "country": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          },
          "vatRegistrationNumber": {
            "type": "string"
          },
          "vatRegistrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "companyRegistrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "operationsStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "commercialCourt": {
            "type": "string"
          },
          "legalForm": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LegalForm"
          },
          "ownershipType": {
            "type": "string"
          },
          "companyStatus": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyStatusDescription"
          },
          "principalActivity": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyActivityClassification"
          },
          "contactAddress": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.CompanyActivity": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.CompanyActivityList": {
        "type": "object",
        "properties": {
          "classification": {
            "type": "string"
          },
          "activities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyActivity"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.PreviousValue": {
        "type": "object",
        "properties": {
          "dateChanged": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.PreviousName": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.PreviousValue"
          },
          {
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.PreviousLegalForm": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.PreviousValue"
          },
          {
            "type": "object",
            "properties": {
              "legalForm": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LegalForm"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.LtdCompanyIdentification": {
        "type": "object",
        "properties": {
          "basicInformation": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdCompanyBasicInformation"
          },
          "activityClassifications": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyActivityList"
            }
          },
          "previousNames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.PreviousName"
            }
          },
          "previousLegalForms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.PreviousLegalForm"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.LtdCreditScore": {
        "type": "object",
        "properties": {
          "currentCreditRating": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CreditRating"
          },
          "currentContractLimit": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "previousCreditRating": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CreditRating"
          },
          "latestRatingChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.LtdContactInformation": {
        "type": "object",
        "properties": {
          "mainAddress": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressDataReport"
          },
          "otherAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressDataReport"
            }
          },
          "previousAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressDataReport"
            }
          },
          "emailAddresses": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "websites": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.indicators": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "type": {
              "type": "string",
              "enum": [
                "eti",
                "fsi",
                "cov"
              ]
            },
            "value": {
              "type": "string",
              "example": "X"
            },
            "changeDate": {
              "type": "string",
              "format": "date-time"
            },
            "industryComparison": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.IndicatorIndustryComparison"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.EntityType": {
        "enum": [
          "Other",
          "Person",
          "Company"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.Reports.ShareClass": {
        "type": "object",
        "properties": {
          "shareType": {
            "type": "string"
          },
          "currency": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Currency"
          },
          "valuePerShare": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "jointlyOwned": {
            "type": "boolean",
            "nullable": true
          },
          "numberOfSharesOwned": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "valueOfSharesOwned": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "additionalData": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ShareClassAdditionalData"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.EntityFullName": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "idType": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.IdType"
          },
          "name": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "firstNames": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.ShareHolder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.EntityFullName"
          },
          {
            "type": "object",
            "properties": {
              "shareholderType": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.EntityType"
              },
              "shareType": {
                "type": "string"
              },
              "currency": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Currency"
              },
              "totalValueOfSharesOwned": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "totalNumberOfSharesOwned": {
                "type": "integer",
                "format": "int64",
                "nullable": true
              },
              "percentSharesHeld": {
                "type": "number",
                "format": "double",
                "nullable": true
              },
              "startDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "endDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "hasNegativeInfo": {
                "type": "boolean",
                "nullable": true
              },
              "shareClasses": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ShareClass"
                }
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.LtdShareCapitalStructure": {
        "type": "object",
        "properties": {
          "nominalShareCapital": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "issuedShareCapital": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "shareCapitalCurrency": {
            "type": "string"
          },
          "numberOfSharesIssued": {
            "type": "integer",
            "format": "int64",
            "nullable": true,
            "description": "`int64` refers to the `long` type "
          },
          "shareHolders": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ShareHolder"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Gender": {
        "enum": [
          "Unknown",
          "Male",
          "Female",
          "NotApplicable"
        ],
        "type": "string"
      },
      "Creditsafe.GlobalData.Reports.CorporatePosition": {
        "type": "object",
        "properties": {
          "dateAppointed": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "commonCode": {
            "type": "string"
          },
          "providerCode": {
            "type": "string"
          },
          "positionName": {
            "type": "string"
          },
          "authority": {
            "type": "string"
          },
          "apptDurationType": {
            "type": "string"
          },
          "additionalData": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CorporatePositionAdditionalData"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Director": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.EntityFullName"
          },
          {
            "type": "object",
            "properties": {
              "gender": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Gender"
              },
              "birthName": {
                "type": "string"
              },
              "dateOfBirth": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              },
              "placeOfBirth": {
                "type": "string"
              },
              "nationality": {
                "type": "string"
              },
              "countryOfResidence": {
                "type": "string"
              },
              "country": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
              },
              "directorType": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.EntityType"
              },
              "hasNegativeInfo": {
                "description": "Linked with DE searches, may return with other countries if data is available.",
                "type": "boolean",
                "nullable": true
              },
              "signingAuthority": {
                "description": "Linked with DE searches, may return with other countries if data is available.",
                "type": "boolean",
                "nullable": true
              },
              "positions": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CorporatePosition"
                }
              },
              "additionalData": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.DirectorAdditionalData"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.PreviousDirector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Director"
          },
          {
            "type": "object",
            "properties": {
              "resignationDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.LtdDirectors": {
        "type": "object",
        "properties": {
          "currentDirectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Director"
            }
          },
          "previousDirectors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.PreviousDirector"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.CorporatePositionResigned": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CorporatePosition"
          },
          {
            "type": "object",
            "properties": {
              "resignationDate": {
                "type": "string",
                "format": "date-time",
                "nullable": true
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.Directorship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "initials": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "position": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CorporatePositionResigned"
          },
          "registrationNumber": {
            "type": "string"
          },
          "companyName": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyStatusDescription"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Directorships": {
        "type": "object",
        "properties": {
          "currentDirectorships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directorship"
            }
          },
          "previousDirectorships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directorship"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Entity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Banker": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Entity"
          },
          {
            "type": "object",
            "properties": {
              "bankCode": {
                "type": "string"
              },
              "bic": {
                "type": "string"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.Advisor": {
        "type": "object",
        "properties": {
          "auditorName": {
            "type": "string"
          },
          "solicitorName": {
            "type": "string"
          },
          "accountantName": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.EmployeeInformation": {
        "type": "object",
        "properties": {
          "year": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberOfEmployees": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.LtdOtherInformation": {
        "type": "object",
        "properties": {
          "bankers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Banker"
            }
          },
          "advisors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Advisor"
            }
          },
          "employeesInformation": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.EmployeeInformation"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.LtdGroupStructure": {
        "type": "object",
        "properties": {
          "ultimateParent": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyData"
          },
          "immediateParent": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyData"
          },
          "subsidiaryCompanies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyData"
            }
          },
          "affiliatedCompanies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyData"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.CompanyInGroup": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "safeNumber": {
            "type": "string"
          },
          "idType": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.IdType"
          },
          "companyName": {
            "type": "string"
          },
          "registeredNumber": {
            "type": "string"
          },
          "latestAnnualAccounts": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "percentOfOwnership": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "status": {
            "type": "string"
          },
          "commonRatingBand": {
            "type": "string"
          },
          "additionalData": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyInGroupAdditionalData"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.ProfitAndLossFigures": {
        "type": "object",
        "properties": {
          "revenue": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "operatingCosts": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "operatingProfit": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "wagesAndSalaries": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "pensionCosts": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "depreciation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "amortisation": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "financialIncome": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "financialExpenses": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extraordinaryIncome": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "extraordinaryCosts": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "profitBeforeTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "profitAfterTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "dividends": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "minorityInterests": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherAppropriations": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "retainedProfit": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.BalanceSheet": {
        "type": "object",
        "properties": {
          "landAndBuildings": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "plantAndMachinery": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherTangibleAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalTangibleAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "goodwill": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherIntangibleAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalIntangibleAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "investments": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "loansToGroup": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLoans": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "miscellaneousFixedAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalOtherFixedAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalFixedAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "rawMaterials": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "workInProgress": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "finishedGoods": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherInventories": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalInventories": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tradeReceivables": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "groupReceivables": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "receivablesDueAfter1Year": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "miscellaneousReceivables": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalReceivables": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "cash": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherCurrentAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalCurrentAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalAssets": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tradePayables": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bankLiabilities": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLoansOrFinance": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "groupPayables": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "miscellaneousLiabilities": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalCurrentLiabilities": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "tradePayablesDueAfter1Year": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "bankLiabilitiesDueAfter1Year": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherLoansOrFinanceDueAfter1Year": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "groupPayablesDueAfter1Year": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "miscellaneousLiabilitiesDueAfter1Year": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalLongTermLiabilities": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalLiabilities": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "calledUpShareCapital": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sharePremium": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "revenueReserves": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "otherReserves": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalShareholdersEquity": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.OtherFinancials": {
        "type": "object",
        "properties": {
          "contingentLiabilities": {
            "type": "string"
          },
          "workingCapital": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netWorth": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.FinancialRatios": {
        "type": "object",
        "properties": {
          "preTaxProfitMargin": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "returnOnCapitalEmployed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "returnOnTotalAssetsEmployed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "returnOnNetAssetsEmployed": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "salesOrNetWorkingCapital": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "stockTurnoverRatio": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "debtorDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creditorDays": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currentRatio": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "liquidityRatioOrAcidTest": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "currentDebtRatio": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gearing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "equityInPercentage": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "totalDebtRatio": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.LtdFinancialStatement": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "yearEndDate": {
            "type": "string",
            "format": "date-time"
          },
          "numberOfWeeks": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Currency"
          },
          "consolidatedAccounts": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.GlobalFinancialsGGS": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdFinancialStatement"
          },
          {
            "type": "object",
            "properties": {
              "profitAndLoss": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ProfitAndLossFigures"
              },
              "balanceSheet": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.BalanceSheet"
              },
              "otherFinancials": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.OtherFinancials"
              },
              "ratios": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialRatios"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.ReportNegativeInformation": {
        "type": "object"
      },
      "Creditsafe.GlobalData.Reports.ReportAdditionalInformation": {
        "type": "object"
      },
      "Creditsafe.GlobalData.Reports.CompanyReport": {
        "type": "object",
        "properties": {
          "companyId": {
            "type": "string"
          },
          "language": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Language"
          },
          "companySummary": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdCompanySummary"
          },
          "companyIdentification": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdCompanyIdentification"
          },
          "creditScore": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdCreditScore"
          },
          "contactInformation": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdContactInformation"
          },
          "indicators": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.indicators"
          },
          "shareCapitalStructure": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdShareCapitalStructure"
          },
          "directors": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdDirectors"
          },
          "directorships": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directorships"
          },
          "otherInformation": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdOtherInformation"
          },
          "groupStructure": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdGroupStructure"
          },
          "extendedGroupStructure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyInGroup"
            }
          },
          "financialStatements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.GlobalFinancialsGGS"
            }
          },
          "localFinancialStatements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdFinancialStatement"
            }
          },
          "negativeInformation": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ReportNegativeInformation"
          },
          "additionalInformation": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ReportAdditionalInformation"
          },
          "directorsExtra": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdDirectorsExtra"
          },
          "extendedGroupStructureExtra": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdExtendedGroupStructureExtra"
          },
          "paymentData": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ReportPaymentData"
          },
          "paymentDataExtra": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ReportPaymentDataExtra"
          },
          "alternateSummary": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ReportAlternateSummary"
          },
          "negativeInformationExtra": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ReportNegativeInformationExtra"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.CompanyReportResponse": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "correlationId": {
                "type": "string"
              },
              "failedSections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ReportSection"
                }
              },
              "report": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyReport"
              },
              "companyId": {
                "type": "string"
              },
              "dateOfOrder": {
                "type": "string",
                "format": "date-time"
              },
              "language": {
                "type": "string"
              },
              "userId": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.AdditionalData": {
        "type": "object"
      },
      "Creditsafe.GlobalData.Reports.ShareClassAdditionalData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.AdditionalData"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.DirectorAdditionalData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.AdditionalData"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.CompanyReportExtraSection": {
        "type": "object"
      },
      "Creditsafe.GlobalData.Reports.LtdDirectorsExtra": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyReportExtraSection"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.LtdExtendedGroupStructureExtra": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyReportExtraSection"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.ReportPaymentData": {
        "type": "object"
      },
      "Creditsafe.GlobalData.SearchCriteriaSchemaDirector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchemaBase"
          },
          {
            "type": "object",
            "properties": {
              "id": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "firstName": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-QueryStringSchema"
              },
              "lastName": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-QueryStringSchema"
              },
              "companyId": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "companyName": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-QueryStringSchema"
              },
              "companyType": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_Creditsafe.GlobalData.CompanyType"
              },
              "companyRegistrationNumber": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              },
              "address": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressCriteriaSchema"
              },
              "status": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchema-ValueSchema_1_System.String"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.SearchCriteriaSchemaCountryDirector": {
        "type": "object",
        "properties": {
          "country": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          },
          "schemas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchemaDirector"
            }
          }
        }
      },
      "Creditsafe.GlobalData.SearchCriteriaSchemaSetDirector": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "countriesCriteria": {
                "description": "The list of available parameters for the search in the given country.",
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.SearchCriteriaSchemaCountryDirector"
                }
              },
              "customData": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.CustomDataEntrySchema"
                }
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.DirectorSearchData": {
        "type": "object",
        "properties": {
          "peopleId": {
            "description": "The unique identifier of the person.",
            "type": "string"
          },
          "firstName": {
            "description": "The first name of the director.",
            "type": "string"
          },
          "lastName": {
            "description": "The last name of the director.",
            "type": "string"
          },
          "country": {
            "description": "The country of the director.",
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          },
          "company": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The unique identifier of the company.",
                "type": "string"
              }
            }
          },
          "companyName": {
            "description": "The name of the company.",
            "type": "string"
          },
          "companyType": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyType"
          },
          "companyRegistrationNumber": {
            "description": "The registration number of the company.",
            "type": "string"
          },
          "status": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
          },
          "dateOfLatestChange": {
            "description": "The date of the latest change to the director information.",
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfBirth": {
            "description": "The date of birth of the director.",
            "type": "string",
            "format": "date-time"
          },
          "localDirectorNumber": {
            "description": "The local director number of the director.",
            "type": "string"
          },
          "score": {
            "type": "integer"
          },
          "taxCode": {
            "type": "string"
          },
          "searchRanking": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.SearchResponse_1_Creditsafe.GlobalData.DirectorSearchData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "directors": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.DirectorSearchData"
                }
              },
              "page": {
                "description": "Select the page number of the result.",
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "description": "Select the number of results per page.",
                "type": "integer",
                "format": "int32"
              },
              "totalSize": {
                "description": "The total number of results.",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.Directors.DirectorSummary": {
        "type": "object",
        "properties": {
          "currentAppointments": {
            "type": "integer",
            "format": "int32"
          },
          "inactiveAppointments": {
            "type": "integer",
            "format": "int32"
          },
          "previousAppointments": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Directors.DirectorshipAdditionalData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.AdditionalData"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.Directors.Directorship": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "idType": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.IdType"
          },
          "companyName": {
            "type": "string"
          },
          "companyNumber": {
            "type": "string"
          },
          "companyRegistrationNumber": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
          },
          "status": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyStatus"
          },
          "activity": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyActivity"
          },
          "position": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CorporatePositionResigned"
          },
          "signingAuthority": {
            "type": "boolean",
            "nullable": true
          },
          "companyRegistrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "legalForm": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LegalForm"
          },
          "state": {
            "type": "string"
          },
          "yearEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currency": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Currency"
          },
          "latestTurnoverFigure": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "netWorth": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "legalCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "legalAmount": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "legalCountInLast12Months": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creditScore": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdCreditScore"
          },
          "dbt": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "additionalData": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directors.DirectorshipAdditionalData"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Directors.Directorships": {
        "type": "object",
        "properties": {
          "current": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directors.Directorship"
            }
          },
          "previous": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directors.Directorship"
            }
          },
          "inactive": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directors.Directorship"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Directors.DirectorReport": {
        "type": "object",
        "properties": {
          "directorId": {
            "type": "string"
          },
          "directorSummary": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directors.DirectorSummary"
          },
          "directorDetails": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Director"
          },
          "otherAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
            }
          },
          "directorships": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directors.Directorships"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Directors.DirectorReportResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "report": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Directors.DirectorReport"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.CorporatePositionAdditionalData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.AdditionalData"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Services.BEDataService.RawClient.RawWrappedUPPResponse": {
        "type": "object"
      },
      "Creditsafe.GlobalData.ServiceResponse_1_Creditsafe.GlobalData.Services.BEDataService.RawClient.RawWrappedUPPResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "data": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.BEDataService.RawClient.RawWrappedUPPResponse"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.CompanyDataAdditionalData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.AdditionalData"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.CompanyInGroupAdditionalData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.AdditionalData"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.ReportPaymentDataExtra": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyReportExtraSection"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.ReportAlternateSummary": {
        "type": "object"
      },
      "Creditsafe.GlobalData.Reports.ReportNegativeInformationExtra": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyReportExtraSection"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerInformationAdditionalData": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.AdditionalData"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerInformation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "surname": {
            "type": "string"
          },
          "age": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Gender"
          },
          "consumerID": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
          },
          "additionalData": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerInformationAdditionalData"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerIncome": {
        "type": "object",
        "properties": {
          "incomeYear": {
            "type": "integer",
            "format": "int32"
          },
          "taxClass": {
            "type": "string"
          },
          "netWealth": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "netIncome": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "sumTax": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "grossIncome": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "municipalityNr": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerDirectorship": {
        "type": "object",
        "properties": {
          "companyName": {
            "type": "string"
          },
          "companyStatus": {
            "type": "string"
          },
          "appointmentDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "turnover": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creditRating": {
            "type": "string"
          },
          "companyNumber": {
            "type": "string"
          },
          "function": {
            "type": "string"
          },
          "companyRegistrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "netWorth": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creditLimit": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerPaymentSummary": {
        "type": "object",
        "properties": {
          "unsettledROPNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "partlySettledROPNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "voluntaryPledgeNumber": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "unsettledROPAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "partlySettledROPAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "voluntaryPledgeAmount": {
            "type": "number",
            "format": "double",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerRemarkOfPayment": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "source": {
            "type": "string"
          },
          "refNr": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "creditor": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerCreditRating": {
        "type": "object",
        "properties": {
          "providerValue": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.RangeDescribedValue_1_System.String"
          },
          "providerDescription": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerCreditScore": {
        "type": "object",
        "properties": {
          "currentCreditRating": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerCreditRating"
          },
          "currentContractLimit": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "previousCreditRating": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CreditRating"
          },
          "latestRatingChangeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerAdditionalInformation": {
        "type": "object"
      },
      "Creditsafe.GlobalData.Reports.Consumer.ConsumerReport": {
        "type": "object",
        "properties": {
          "consumerInformation": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerInformation"
          },
          "incomes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerIncome"
            }
          },
          "registeredProperty": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "registeredHousingShare": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "directorships": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerDirectorship"
            }
          },
          "paymentRemarks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerPaymentSummary"
            }
          },
          "paymentRemarksDetails": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerRemarkOfPayment"
            }
          },
          "voluntaryPledges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerRemarkOfPayment"
            }
          },
          "consumerRating": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerCreditScore"
          },
          "additionalInformation": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerAdditionalInformation"
          }
        }
      },
      "Creditsafe.GlobalData.Reports.ConsumerCriteriaSet": {
        "properties": {
          "countries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
            }
          },
          "criteriaSets": {
            "type": "array",
            "items": {
              "type": "object"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Core.Attachment.BinaryAttachment": {
        "allOf": [
          {
            "type": "object",
            "properties": {
              "correlationID": {
                "type": "string"
              },
              "failedSections": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.ReportSection"
                }
              },
              "report": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.CompanyReport"
              },
              "pdfReportStream": {
                "type": "string",
                "format": "byte",
                "description": "Base64-encoded contents of the PDF."
              },
              "companyID": {
                "type": "string"
              },
              "dateOfOrder": {
                "type": "string",
                "format": "date-time"
              },
              "language": {
                "type": "string"
              },
              "userID": {
                "type": "integer"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Core.SupplierConnector.ConsumerReportResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "consumer": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.Consumer.ConsumerReport"
              },
              "attachment": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Core.Attachment.BinaryAttachment"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Services.DEDataService.RawClient.CompanyBankruptcy.Search.Bankruptcy": {
        "type": "object",
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "bankruptcies": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.RawClient.CompanyBankruptcy.Search.Bankruptcy"
                }
              },
              "page": {
                "type": "integer",
                "format": "int32"
              },
              "pageSize": {
                "type": "integer",
                "format": "int32"
              },
              "totalRecords": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Services.DEDataService.RawClient.CompanyBankruptcy.BankruptcyReportResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object"
          }
        ]
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderSummary": {
        "type": "object",
        "properties": {
          "currentAppointments": {
            "type": "integer",
            "format": "int32"
          },
          "inactiveAppointments": {
            "type": "integer",
            "format": "int32"
          },
          "previousAppointments": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.AdditionalDataShareholderDetail": {
        "type": "object",
        "properties": {
          "numberDirectShareholdings": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberIndirectShareholdings": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "numberBeneficialOwnerships": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholder": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.EntityFullName"
          },
          {
            "type": "object",
            "properties": {
              "country": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
              },
              "additionalData": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.AdditionalDataShareholderDetail"
              }
            }
          }
        ]
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderStructure": {
        "type": "object",
        "properties": {
          "groupLevel": {
            "type": "string"
          },
          "groupLevelID": {
            "type": "string"
          },
          "parentShareholderID": {
            "type": "string"
          },
          "ultimateShareholderID": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholdingAdditionalData": {
        "type": "object",
        "properties": {
          "statusDescription": {
            "type": "string"
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholding": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "idType": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.IdType"
          },
          "companyName": {
            "type": "string"
          },
          "companyNumber": {
            "type": "string"
          },
          "companyRegistrationNumber": {
            "type": "string"
          },
          "address": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.AddressData"
          },
          "status": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CompanyStatus"
          },
          "companyRegistrationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "latestTurnoverFigure": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "netWorth": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "legalCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "legalAmount": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.FinancialValue_1_System.Decimal"
          },
          "legalCountInLast12Months": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "creditScore": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Reports.LtdCreditScore"
          },
          "dbt": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "gearing": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "share": {
            "type": "number",
            "format": "double",
            "nullable": true
          },
          "shareholderStructure": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderStructure"
          },
          "additionalData": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholdingAdditionalData"
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholdings": {
        "type": "object",
        "properties": {
          "current": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholding"
            }
          },
          "previous": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholding"
            }
          },
          "inactive": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholding"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderReport": {
        "type": "object",
        "properties": {
          "shareholderSummary": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderSummary"
          },
          "shareholderDetails": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholder"
          },
          "shareholdings": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholdings"
          },
          "shareholdingsStructure": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholding"
            }
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.BeneficialOwnershipReport": {
        "type": "object",
        "properties": {
          "beneficialOwnershipSummary": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderSummary"
          },
          "beneficialOwnershipDetails": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholder"
          },
          "beneficialOwnerships": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.Shareholdings"
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderAndBeneficialOwnershipReport": {
        "type": "object",
        "properties": {
          "shareholderReport": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderReport"
          },
          "beneficialOwnershipReport": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.BeneficialOwnershipReport"
          }
        }
      },
      "Creditsafe.GlobalData.Services.DEDataService.RawClient.Shareholders.ShareholderReportResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.ServiceResponse"
          },
          {
            "type": "object",
            "properties": {
              "report": {
                "$ref": "#/components/schemas/Creditsafe.GlobalData.Services.DEDataService.Model.Shareholder.ShareholderAndBeneficialOwnershipReport"
              }
            }
          }
        ]
      },
      "Connect.Protect.AuditDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "description": {
            "type": "string"
          },
          "type": {
            "type": "string"
          },
          "userId": {
            "type": "string"
          },
          "payload": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Connect.Protect.AuditsExportResponseDto": {
        "type": "object",
        "properties": {
          "location": {
            "type": "string",
            "format": "uri"
          }
        }
      },
      "Connect.Protect.AuditExportRequestDto": {
        "required": [
          "fileType"
        ],
        "type": "object",
        "properties": {
          "fileType": {
            "type": "string",
            "enum": [
              "csv"
            ]
          },
          "auditType": {
            "type": "string",
            "enum": [
              "alert.accepted",
              "alert.rejected",
              "alert.received",
              "profile.added",
              "profile.created",
              "investigation.accepted",
              "investigation.created",
              "investigation.file_downloaded",
              "schedule.created",
              "schedule.removed"
            ]
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "keywordSearch": {
            "type": "string"
          },
          "createdAtOrAfter": {
            "type": "string",
            "format": "date-time"
          },
          "createdAtOrBefore": {
            "type": "string",
            "format": "date-time"
          },
          "payload": {
            "$ref": "#/components/schemas/Connect.Protect.AuditExportPayloadDto"
          }
        }
      },
      "Connect.Protect.AuditExportPayloadDto": {
        "type": "object",
        "properties": {
          "profileId": {
            "type": "string",
            "format": "guid"
          },
          "investigationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "Connect.Protect.ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        }
      },
      "Connect.Protect.InvestigationResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "id",
          "results",
          "searchCriteria"
        ],
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string",
            "format": "GUID"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "searchCriteria": {
            "$ref": "#/components/schemas/Connect.Protect.InvestigationQuery"
          },
          "scheduleId": {
            "type": "string",
            "format": "guid"
          },
          "profileId": {
            "type": "string",
            "format": "guid"
          },
          "profileName": {
            "type": "string"
          },
          "alertsCount": {
            "type": "integer",
            "format": "int32"
          },
          "currentAlert": {
            "$ref": "#/components/schemas/Connect.Protect.ListAllInvestigationsCurrentAlert"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Protect.Record"
            }
          }
        }
      },
      "Connect.Protect.InvestigationQuery": {
        "required": [
          "type"
        ],
        "type": "object",
        "nullable": true,
        "properties": {
          "type": {
            "$ref": "#/components/schemas/Connect.Protect.InvestigationType"
          },
          "name": {
            "type": "string"
          },
          "houseNo": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "generation": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "nationalId": {
            "type": "string"
          },
          "citizenship": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "searchName": {
            "type": "string"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32",
            "description": "Can only enter the following options: 85, 90, 95, 100"
          },
          "source": {
            "type": "string"
          }
        }
      },
      "Connect.Protect.InvestigationType": {
        "type": "string",
        "description": "",
        "enum": [
          "Business",
          "Individual"
        ]
      },
      "Connect.Protect.Record": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "description": " Unique ID number relating to the World Compliance report. It is also known as the InvestigationRecord."
          },
          "matchType": {
            "type": "string"
          },
          "resultId": {
            "type": "integer"
          },
          "entityId": {
            "type": "string"
          },
          "matchScore": {
            "type": "integer",
            "format": "int32",
            "description": "A percentage based score depicting how accurate the search parameters relate to the report name."
          },
          "sourceDate": {
            "type": "string",
            "format": "date-time",
            "description": "This is the date the report was last updated."
          },
          "dateListed": {
            "type": "string",
            "description": "T​he date the report was originally created."
          },
          "name": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "reasonListed": {
            "type": "string"
          },
          "entityType": {
            "type": "string",
            "description": "Business or Individual."
          },
          "dateOfBirth": {
            "type": "string"
          },
          "generation": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "occupation": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "hasAdverseMedia": {
            "type": "boolean"
          },
          "otherNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Protect.Address"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Connect.Protect.Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "Connect.Protect.ListAllInvestigationsCurrentAlert": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "GUID"
          },
          "status": {
            "type": "string"
          },
          "alertCount": {
            "type": "integer",
            "format": "int64"
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int64"
          },
          "unprocessedRecordCount": {
            "type": "integer",
            "format": "int64"
          },
          "resultId": {
            "type": "integer",
            "format": "GUID"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32",
            "description": "Can only enter the following options: 85, 90, 95, 100"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "alertType": {
            "type": "string"
          }
        }
      },
      "Connect.Protect.CreateInvestigationQueryDto": {
        "type": "object",
        "required": [
          "type"
        ],
        "properties": {
          "type": {
            "description": "Individual relates to individuals <br> Business relates to businesses and organisations e.g political parties and terrorist groups.",
            "type": "string",
            "enum": [
              "business",
              "individual"
            ]
          },
          "name": {
            "description": "The full or partial business or individual name",
            "type": "string",
            "nullable": true
          },
          "screeningThreshold": {
            "description": "Default Threshold is 85. Can only enter the following options: 85, 90, 95, 100",
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "countryCode": {
            "type": "string",
            "nullable": true
          },
          "firstName": {
            "description": "Individual Only - To be used instead of ''name'' field should the user want to split out the name into first, middle, last.",
            "type": "string",
            "nullable": true
          },
          "middleName": {
            "description": "Individual Only - To be used instead of ''name'' field should the user want to split out the name into first, middle, last.",
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "description": "Individual Only - To be used instead of ''name'' field should the user want to split out the name into first, middle, last.",
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "nullable": true
          },
          "gender": {
            "type": "string",
            "nullable": true,
            "enum": [
              "male",
              "female"
            ]
          }
        }
      },
      "Connect.Protect.Investigation": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "query": {
            "$ref": "#/components/schemas/Connect.Protect.InvestigationQuery"
          },
          "scheduleId": {
            "type": "string",
            "format": "guid"
          },
          "scheduledOn": {
            "type": "string",
            "format": "date-time"
          },
          "profileId": {
            "type": "string",
            "format": "guid"
          },
          "profileName": {
            "type": "string"
          },
          "alertCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "alertsCount": {
            "type": "integer",
            "format": "int32"
          },
          "noteCount": {
            "type": "integer",
            "format": "int32"
          },
          "assignedRisk": {
            "type": "string",
            "enum": [
              "noRisk",
              "low",
              "medium",
              "high"
            ]
          },
          "investigationName": {
            "type": "string"
          },
          "currentAlert": {
            "$ref": "#/components/schemas/Connect.Protect.ListAllInvestigationsCurrentAlert"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "Connect.Protect.InvestigationFileResponse": {
        "required": [
          "filePath"
        ],
        "type": "object",
        "properties": {
          "filePath": {
            "type": "string"
          }
        }
      },
      "Connect.Protect.GetInvestigationFileBodyDto": {
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "Connect.Protect.CreateInvestigationRecordBody": {
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "Connect.Protect.Profile": {
        "required": [
          "createdAt",
          "customerId",
          "id",
          "modifiedAt",
          "name",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Connect.Protect.CreateProfileDto": {
        "required": [
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Assign a unique name to the profile for ease of identification."
          }
        }
      },
      "Connect.Protect.Schedule": {
        "required": [
          "createdAt",
          "customerId",
          "frequency",
          "id",
          "investigation",
          "investigationId",
          "screeningThreshold",
          "userId"
        ],
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "investigationId": {
            "type": "string",
            "format": "guid"
          },
          "investigation": {
            "$ref": "#/components/schemas/Connect.Protect.Investigation"
          },
          "frequency": {
            "$ref": "#/components/schemas/Connect.Protect.AlertsFrequency"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32",
            "description": "Can only enter the following options: 85, 90, 95, 100"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isEmailRequired": {
            "type": "boolean"
          },
          "isDisabled": {
            "type": "boolean"
          }
        }
      },
      "Connect.Protect.AlertsFrequency": {
        "type": "string",
        "description": "",
        "enum": [
          "Daily"
        ]
      },
      "ConnectProtectCreateScheduleRequest": {
        "required": [
          "screeningThreshold",
          "investigationId"
        ],
        "type": "object",
        "properties": {
          "investigationId": {
            "type": "string",
            "format": "guid"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32",
            "description": "The match score you will be alerted above. Can only enter the following options: 85, 90, 95, 100"
          }
        }
      },
      "Connect.Identity.currentName": {
        "type": "object",
        "required": [
          "forename",
          "surname"
        ],
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "forename": {
            "type": "string",
            "nullable": true
          },
          "otherNames": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.Name": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string",
            "nullable": true
          },
          "forename": {
            "type": "string",
            "nullable": true
          },
          "otherNames": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "suffix": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.Gender": {
        "description": "Below is a list of Definitions for the ENUM\n* 0 - Unknown\n* 1 - Male\n* 2 - Female\n",
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Connect.Identity.Address": {
        "type": "object",
        "required": [
          "postCode"
        ],
        "properties": {
          "buildingNo": {
            "type": "string",
            "nullable": true
          },
          "buildingName": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Connect.Identity.Address1": {
        "type": "object",
        "properties": {
          "buildingNo": {
            "type": "string",
            "nullable": true
          },
          "buildingName": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "postCode": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Connect.Identity.AddressList": {
        "type": "object",
        "properties": {
          "current": {
            "$ref": "#/components/schemas/Connect.Identity.Address"
          },
          "previous1": {
            "$ref": "#/components/schemas/Connect.Identity.Address1"
          },
          "previous2": {
            "$ref": "#/components/schemas/Connect.Identity.Address1"
          }
        }
      },
      "Connect.Identity.Person": {
        "type": "object",
        "properties": {
          "currentName": {
            "$ref": "#/components/schemas/Connect.Identity.currentName"
          },
          "previousName": {
            "$ref": "#/components/schemas/Connect.Identity.Name"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gender": {
            "$ref": "#/components/schemas/Connect.Identity.Gender"
          },
          "addresses": {
            "$ref": "#/components/schemas/Connect.Identity.AddressList"
          }
        }
      },
      "Connect.Identity.amlCommonSearchCriteria": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Connect.Identity.Person"
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "description": "ID value of a cusomter account, typically passed in to allow users to retrieve past searches on a customer."
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "description": "ID value of the user account, a customer account may have multiple user accounts, this is typically passed in to retrieve past searches by a user."
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "description": "A string value that a user can submit during their search. This reference value is stored alongside the search details/customer/user ID values. Is typically passed in to allow users to retrieve past searches based on the reference value supplied."
          },
          "isInternal": {
            "type": "boolean",
            "description": "A boolean value that is handled API side to check whether an account is internal/active. NOTE: Should not be required for external use."
          }
        }
      },
      "Connect.Identity.consumerCommonSearchCriteria": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Connect.Identity.Person"
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "description": "A string value that a user can submit during their search. This reference value is stored alongside the search details/customer/user ID values. Is typically passed in to allow users to retrieve past searches based on the reference value supplied."
          }
        }
      },
      "Connect.Identity.CommonSearchCriteria": {
        "type": "object",
        "properties": {
          "person": {
            "$ref": "#/components/schemas/Connect.Identity.Person"
          },
          "customerId": {
            "type": "integer",
            "format": "int64",
            "description": "ID value of a customer account, typically passed in to allow users to retrieve past searches on a customer."
          },
          "userId": {
            "type": "integer",
            "format": "int64",
            "description": "ID value of the user account, a customer account may have multiple user accounts, this is typically passed in to retrieve past searches by a user."
          },
          "reference": {
            "type": "string",
            "nullable": true,
            "description": "A string value that a user can submit during their search. This reference value is stored alongside the search details/customer/user ID values. Is typically passed in to allow users to retrieve past searches based on the reference value supplied."
          },
          "isInternal": {
            "type": "boolean",
            "description": "A boolean value that is handled API side to check whether an account is internal/active. NOTE: Should not be required for external use."
          }
        }
      },
      "Connect.Identity.ReasonCode": {
        "description": "Below is a list of Definitions for the ENUM\n* 0 - AddressVerification\n* 1 - BusinessSearch\n* 2 - CreditApplication\n* 3 - DebtCollection\n* 4 - DirectorsSearch\n* 5 - QuotationSearch\n* 6 - EmployeeCheck\n* 7 - TenantVet\n* 8 - GeneralInsurance",
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8
        ],
        "type": "integer",
        "format": "int32"
      },
      "Connect.Identity.ConsumerSearchCriteria": {
        "type": "object",
        "required": [
          "reason"
        ],
        "properties": {
          "Consumer Specific Search Criteria": {
            "description": "Used for consumer search only. Can provide a second unique second person into the search. ",
            "allOf": [
              {
                "$ref": "#/components/schemas/Connect.Identity.Person"
              }
            ]
          },
          "reason": {
            "$ref": "#/components/schemas/Connect.Identity.ReasonCode"
          },
          "thirdPartyOptIn": {
            "description": "Is always set to false on ID/AML/Bankmatch searches. Can be set to true on Consumer searches if need be. If true, does an additional charge against the user account to allow for more data coverage.",
            "type": "boolean"
          }
        }
      },
      "Connect.Identity.AmlSearchCriteria": {
        "type": "object",
        "properties": {
          "landlineNumber": {
            "type": "string",
            "nullable": true
          },
          "exDirectory": {
            "type": "boolean",
            "nullable": true
          },
          "sortCode": {
            "type": "string",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.Product": {
        "type": "integer",
        "format": "int32",
        "enum": [
          0,
          1,
          2,
          3,
          4
        ]
      },
      "Connect.Identity.SearchRequest": {
        "type": "object",
        "properties": {
          "uniqueId": {
            "type": "string",
            "nullable": true
          },
          "common": {
            "$ref": "#/components/schemas/Connect.Identity.CommonSearchCriteria"
          },
          "consumer": {
            "$ref": "#/components/schemas/Connect.Identity.ConsumerSearchCriteria"
          },
          "idAml": {
            "$ref": "#/components/schemas/Connect.Identity.AmlSearchCriteria"
          },
          "products": {
            "type": "array",
            "description": "Below is a list of Definitions for the ENUM\n* 0 - Consumer\n* 1 - Id\n* 2 - AML\n* 3 - Bank Match\n* 4 - AML with Bank Match",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.Product"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.CommonResult": {
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "uniqueId": {
            "type": "string",
            "nullable": true
          },
          "searchText": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "searchTime": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Connect.Identity.SupplierResult": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean"
          },
          "supplierId": {
            "type": "string",
            "nullable": true
          },
          "supplierOriginalId": {
            "type": "string",
            "nullable": true
          },
          "creditsIncurred": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.PicklistInputs": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.PicklistOption": {
        "type": "object",
        "properties": {
          "option": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.Picklist": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "applicantId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "address": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "inputs": {
            "$ref": "#/components/schemas/Connect.Identity.PicklistInputs"
          },
          "options": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.PicklistOption"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.SearchResult": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "uniqueId": {
            "type": "string"
          },
          "input": {
            "$ref": "#/components/schemas/Connect.Identity.SearchRequest"
          },
          "common": {
            "$ref": "#/components/schemas/Connect.Identity.CommonResult"
          },
          "consumer": {
            "$ref": "#/components/schemas/Connect.Identity.SupplierResult"
          },
          "id": {
            "$ref": "#/components/schemas/Connect.Identity.SupplierResult"
          },
          "aml": {
            "$ref": "#/components/schemas/Connect.Identity.SupplierResult"
          },
          "bankMatch": {
            "$ref": "#/components/schemas/Connect.Identity.SupplierResult"
          },
          "picklist": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.Picklist"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.BasicResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.InputResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Connect.Identity.SearchRequest"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.AmlResultCode": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Connect.Identity.ReportMatchedData": {
        "type": "object",
        "properties": {
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "addressLine1": {
            "type": "string",
            "nullable": true
          },
          "addressLine2": {
            "type": "string",
            "nullable": true
          },
          "addressLine3": {
            "type": "string",
            "nullable": true
          },
          "addressLine4": {
            "type": "string",
            "nullable": true
          },
          "isSelected": {
            "type": "boolean"
          }
        }
      },
      "Connect.Identity.ReportResidencyConfirmation": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "currentAddress": {
            "type": "boolean"
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "undeclaredAddressType": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportCreditSearchesAtCurrentAddress": {
        "type": "object",
        "properties": {
          "numberInLast3Months": {
            "type": "integer",
            "format": "int32"
          },
          "numberInLast12Months": {
            "type": "integer",
            "format": "int32"
          },
          "totalInLast3Months": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.ReportInsolvencyAtAddress": {
        "type": "object",
        "properties": {
          "restricted": {
            "type": "boolean",
            "nullable": true
          },
          "currentlyInsolvent": {
            "type": "boolean"
          },
          "totalDischarged": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Connect.Identity.SummaryLinks": {
        "type": "object",
        "properties": {
          "undeclaredAddressCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "undeclaredAliasCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "undeclaredAssociatesCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "undeclaredAddressSearchedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "undeclaredAddressUnsearchedCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportSummaryJudgements": {
        "type": "object",
        "properties": {
          "total": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "total3Years": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalActive": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalSatisfied": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalActiveAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalSatisfiedAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Connect.Identity.SummaryShare": {
        "type": "object",
        "properties": {
          "accountCount": {
            "type": "integer",
            "format": "int32"
          },
          "activeAccountCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "settledAccountCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "accountsOpenedInLast6MonthsCount": {
            "type": "integer",
            "format": "int32"
          },
          "delinquentAccountsInLast12MonthsCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "worstPaymentStatusInLast12MonthsCount": {
            "type": "string",
            "nullable": true
          },
          "worstPaymentStatusInLast36MonthsCount": {
            "type": "string",
            "nullable": true
          },
          "defaultsInLast12MonthsCount": {
            "type": "integer",
            "format": "int32"
          },
          "defaultsInLast36MonthsCount": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.SummaryBehaviouralData": {
        "type": "object",
        "properties": {
          "minPayments12Months": {
            "type": "integer",
            "format": "int32"
          },
          "minPayments36Months": {
            "type": "integer",
            "format": "int32"
          },
          "cashAdvanceValue12Months": {
            "type": "integer",
            "format": "int32"
          },
          "cashAdvanceValue36Months": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.SummaryIch": {
        "type": "object",
        "properties": {
          "impairedCredit": {
            "type": "boolean"
          },
          "secured": {
            "type": "boolean",
            "nullable": true
          },
          "unsecured": {
            "type": "boolean",
            "nullable": true
          },
          "judgement": {
            "type": "boolean",
            "nullable": true
          },
          "individualVoluntaryAgreement": {
            "type": "boolean",
            "nullable": true
          },
          "bankruptcy": {
            "type": "boolean",
            "nullable": true
          }
        }
      },
      "Connect.Identity.SummaryThirdParty": {
        "type": "object",
        "properties": {
          "alertDecision": {
            "type": "integer",
            "format": "int32"
          },
          "alertReview": {
            "type": "integer",
            "format": "int32"
          },
          "householdOverride": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.SummaryAddress": {
        "type": "object",
        "properties": {
          "paf": {
            "type": "boolean"
          },
          "rollingRoll": {
            "type": "boolean",
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.SummaryInDebt": {
        "type": "object",
        "properties": {
          "totalActiveBalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalBalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "balanceLimitRatio": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalLimit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalLoanBalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalMortgageBalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Connect.Identity.SummaryCardData": {
        "type": "object",
        "properties": {
          "totalMinPayments12Months": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalMinPayments36Months": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCashAdvance12Months": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalCashAdvance36Months": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Connect.Identity.Summary": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "matchedData": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportMatchedData"
            },
            "nullable": true
          },
          "matchLevel": {
            "type": "string",
            "nullable": true
          },
          "noticesOfCorrections": {
            "type": "boolean",
            "nullable": true
          },
          "totalDisputes": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "confirmedAddress": {
            "type": "string",
            "nullable": true
          },
          "residency": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportResidencyConfirmation"
            },
            "nullable": true
          },
          "creditSearchesAtCurrentAddress": {
            "$ref": "#/components/schemas/Connect.Identity.ReportCreditSearchesAtCurrentAddress"
          },
          "insolvencyAtAddress": {
            "$ref": "#/components/schemas/Connect.Identity.ReportInsolvencyAtAddress"
          },
          "links": {
            "$ref": "#/components/schemas/Connect.Identity.SummaryLinks"
          },
          "judgements": {
            "$ref": "#/components/schemas/Connect.Identity.ReportSummaryJudgements"
          },
          "totalCifas": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "rtr": {
            "type": "boolean",
            "nullable": true
          },
          "share": {
            "$ref": "#/components/schemas/Connect.Identity.SummaryShare"
          },
          "behaviouralData": {
            "$ref": "#/components/schemas/Connect.Identity.SummaryBehaviouralData"
          },
          "impairedCreditHistory": {
            "$ref": "#/components/schemas/Connect.Identity.SummaryIch"
          },
          "thirdParty": {
            "$ref": "#/components/schemas/Connect.Identity.SummaryThirdParty"
          },
          "address": {
            "$ref": "#/components/schemas/Connect.Identity.SummaryAddress"
          },
          "inDebt": {
            "$ref": "#/components/schemas/Connect.Identity.SummaryInDebt"
          },
          "cardData": {
            "$ref": "#/components/schemas/Connect.Identity.SummaryCardData"
          }
        }
      },
      "Connect.Identity.CreditScore": {
        "type": "object",
        "properties": {
          "band": {
            "type": "integer",
            "format": "int32"
          },
          "version": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.ReportNotice": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Connect.Identity.ReportAddress"
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "comment": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "dateRaised": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportElectoralRollHistory": {
        "type": "object",
        "properties": {
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "optOut": {
            "type": "boolean"
          },
          "rollingRoll": {
            "type": "boolean"
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportResident": {
        "type": "object",
        "properties": {
          "matchType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "duration": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "electoralRollValid": {
            "type": "boolean"
          },
          "electoralRollHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportElectoralRollHistory"
            },
            "nullable": true
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportAddress": {
        "type": "object",
        "properties": {
          "address": {
            "type": "string",
            "nullable": true
          },
          "isCurrent": {
            "type": "boolean"
          },
          "isPaf": {
            "type": "boolean",
            "nullable": true
          },
          "residents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportResident"
            },
            "nullable": true
          },
          "otherResidents": {
            "type": "boolean",
            "nullable": true
          },
          "electoralRollHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportElectoralRollHistory"
            },
            "nullable": true
          },
          "undeclaredAddressType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportUndeclaredAddress": {
        "type": "object",
        "properties": {
          "undeclaredAddress": {
            "type": "string",
            "nullable": true
          },
          "undeclaredAddressTo": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "lastConfirmation": {
            "type": "string",
            "nullable": true
          },
          "earliestConfirmation": {
            "type": "string",
            "nullable": true
          },
          "navigationLinkIdentifier": {
            "type": "string",
            "nullable": true
          },
          "navigationLinkIdentifierTo": {
            "type": "string",
            "nullable": true
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.SupplierDetails": {
        "type": "object",
        "properties": {
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "supplierType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportAlias": {
        "type": "object",
        "properties": {
          "declared": {
            "type": "boolean"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "alias": {
            "type": "string",
            "nullable": true
          },
          "source": {
            "type": "string",
            "nullable": true
          },
          "sourceType": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastConfirmation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplierDetails": {
            "$ref": "#/components/schemas/Connect.Identity.SupplierDetails"
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportAssociate": {
        "type": "object",
        "properties": {
          "navigationLinkId": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "creationDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "lastConfirmation": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "supplierDetails": {
            "$ref": "#/components/schemas/Connect.Identity.SupplierDetails"
          },
          "declared": {
            "type": "boolean"
          },
          "associateId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportLinks": {
        "type": "object",
        "properties": {
          "undeclaredAddresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportUndeclaredAddress"
            },
            "nullable": true
          },
          "aliases": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportAlias"
            },
            "nullable": true
          },
          "associates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportAssociate"
            },
            "nullable": true
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportCifas": {
        "type": "object"
      },
      "Connect.Identity.ReportRtr": {
        "type": "object"
      },
      "Connect.Identity.InsolvencyRestriction": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportInsolvency": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Connect.Identity.ReportAddress"
          },
          "companyName": {
            "type": "string",
            "nullable": true
          },
          "court": {
            "type": "string",
            "nullable": true
          },
          "dischargeDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "orderDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "orderType": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "tradingName": {
            "type": "string",
            "nullable": true
          },
          "lineOfBusiness": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "caseYear": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "caseRef": {
            "type": "string",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          },
          "restriction": {
            "$ref": "#/components/schemas/Connect.Identity.InsolvencyRestriction"
          }
        }
      },
      "Connect.Identity.ReportJudgement": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Connect.Identity.ReportAddress"
          },
          "addressCurrent": {
            "type": "boolean"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "judgementDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "amount": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "court": {
            "type": "string",
            "nullable": true
          },
          "courtType": {
            "type": "string",
            "nullable": true
          },
          "caseNumber": {
            "type": "string",
            "nullable": true
          },
          "satifiedDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportHistory": {
        "type": "object",
        "properties": {
          "address": {
            "$ref": "#/components/schemas/Connect.Identity.ReportAddress"
          },
          "addressMatch": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "jointApplication": {
            "type": "boolean",
            "nullable": true
          },
          "linkType": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "tpOptIn": {
            "type": "boolean"
          },
          "organisationName": {
            "type": "string",
            "nullable": true
          },
          "organisationType": {
            "type": "string",
            "nullable": true
          },
          "ownSearch": {
            "type": "boolean"
          },
          "purpose": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "supplierReference": {
            "type": "string",
            "nullable": true
          },
          "subsequentEnquiry": {
            "type": "boolean"
          },
          "term": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "transient": {
            "type": "boolean",
            "nullable": true
          },
          "creditType": {
            "type": "string",
            "nullable": true
          },
          "unitName": {
            "type": "string",
            "nullable": true
          },
          "userName": {
            "type": "string",
            "nullable": true
          },
          "searchDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "searchUnitName": {
            "type": "string",
            "nullable": true
          },
          "searchOrganisationName": {
            "type": "string",
            "nullable": true
          },
          "searchOrganisationType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.Demographic": {
        "type": "object",
        "properties": {
          "sortOrder": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.DemographicsNeighbourhoodDefinition": {
        "type": "object",
        "properties": {
          "financeGroup": {
            "type": "string",
            "nullable": true
          },
          "financeGroupHouseholdPerc": {
            "type": "string",
            "nullable": true
          },
          "income": {
            "type": "string",
            "nullable": true
          },
          "incomeGroup": {
            "type": "string",
            "nullable": true
          },
          "investorHouseholdPerc": {
            "type": "string",
            "nullable": true
          },
          "investorIndex": {
            "type": "string",
            "nullable": true
          },
          "riskFactor": {
            "type": "string",
            "nullable": true
          },
          "uk": {
            "type": "string",
            "nullable": true
          },
          "ukGroup": {
            "type": "string",
            "nullable": true
          },
          "ukHouseholdPerc": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.DemographicsPropertyComposition": {
        "type": "object",
        "properties": {
          "averageDetachedPropertyValue": {
            "type": "string",
            "nullable": true
          },
          "averageDetachedPropertyValueDescription": {
            "type": "string",
            "nullable": true
          },
          "averageFlatPropertyValue": {
            "type": "string",
            "nullable": true
          },
          "averageFlatPropertyValueDescriptionField": {
            "type": "string",
            "nullable": true
          },
          "averageHouseAge": {
            "type": "string",
            "nullable": true
          },
          "averageSemiDetachedPropertyValue": {
            "type": "string",
            "nullable": true
          },
          "averageSemiDetachedPropertyValueDescription": {
            "type": "string",
            "nullable": true
          },
          "averageTerracePropertyValue": {
            "type": "string",
            "nullable": true
          },
          "averageTerracePropertyValueDescription": {
            "type": "string",
            "nullable": true
          },
          "councilTaxBand": {
            "type": "string",
            "nullable": true
          },
          "councilTaxBandDescription": {
            "type": "string",
            "nullable": true
          },
          "householdDensity": {
            "type": "string",
            "nullable": true
          },
          "locationType": {
            "type": "string",
            "nullable": true
          },
          "nationalAverageHousePrice": {
            "type": "string",
            "nullable": true
          },
          "nationalAverageHousePriceAboveOrBelow": {
            "type": "string",
            "nullable": true
          },
          "nationalAverageHousePriceDifference": {
            "type": "string",
            "nullable": true
          },
          "averageFlatPropertyValueDescription": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.DemographicsShareholderComposition": {
        "type": "object",
        "properties": {
          "averageInvestments": {
            "type": "string",
            "nullable": true
          },
          "averageInvestmentsDescription": {
            "type": "string",
            "nullable": true
          },
          "averageInvestmentsLabel": {
            "type": "string",
            "nullable": true
          },
          "averageShareholders": {
            "type": "string",
            "nullable": true
          },
          "averageShareholdersDescription": {
            "type": "string",
            "nullable": true
          },
          "averageShareholdersLabel": {
            "type": "string",
            "nullable": true
          },
          "averageShares": {
            "type": "string",
            "nullable": true
          },
          "averageSharesDescription": {
            "type": "string",
            "nullable": true
          },
          "averageSharesLabel": {
            "type": "string",
            "nullable": true
          },
          "averageValue": {
            "type": "string",
            "nullable": true
          },
          "averageValueDescription": {
            "type": "string",
            "nullable": true
          },
          "averageValueLabel": {
            "type": "string",
            "nullable": true
          },
          "proportionOfHouseholdsWithShares": {
            "type": "string",
            "nullable": true
          },
          "proportionOfHouseholdsWithSharesDescription": {
            "type": "string",
            "nullable": true
          },
          "proportionOfHouseholdsWithSharesLabel": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.DemographicsUnemploymentComposition": {
        "type": "object",
        "properties": {
          "maleLongTermUnemployment": {
            "type": "string",
            "nullable": true
          },
          "maleLongTermUnemploymentDescription": {
            "type": "string",
            "nullable": true
          },
          "maleLongTermUnemploymentLabel": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmong18to24YearOlds": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmong18to24YearOldsDescription": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmong18to24YearOldsLabel": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmong25to39YearOlds": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmong25to39YearOldsDescription": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmong25to39YearOldsLabel": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmongThoseAged40andOlder": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmongThoseAged40andOlderDescription": {
            "type": "string",
            "nullable": true
          },
          "unemploymentAmongThoseAged40andOlderLabel": {
            "type": "string",
            "nullable": true
          },
          "unemploymentScoreLabel": {
            "type": "string",
            "nullable": true
          },
          "unemploymentScoreDescription": {
            "type": "string",
            "nullable": true
          },
          "unemploymentScore": {
            "type": "string",
            "nullable": true
          },
          "maleLongTermUnemploymentScore": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportDemographics": {
        "type": "object",
        "properties": {
          "cameoCode": {
            "type": "string",
            "nullable": true
          },
          "cameoInvestorCode": {
            "type": "string",
            "nullable": true
          },
          "cameoIncomeCode": {
            "type": "string",
            "nullable": true
          },
          "cameoUnemploymentCode": {
            "type": "string",
            "nullable": true
          },
          "cameoPropertyCode": {
            "type": "string",
            "nullable": true
          },
          "cameoFinanceCode": {
            "type": "string",
            "nullable": true
          },
          "cameoFinanceGroup": {
            "type": "string",
            "nullable": true
          },
          "cameoIncomeGroup": {
            "type": "string",
            "nullable": true
          },
          "cameoInvestmentGroup": {
            "type": "string",
            "nullable": true
          },
          "cameoGroup": {
            "type": "string",
            "nullable": true
          },
          "familyComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "ageComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "economicComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "economicActivityComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "hasValues": {
            "type": "boolean"
          },
          "houseTypeComposition": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.Demographic"
            },
            "nullable": true
          },
          "householdComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "lifestageComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "mortgageComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "neighbourhoodDefinition": {
            "$ref": "#/components/schemas/Connect.Identity.DemographicsNeighbourhoodDefinition"
          },
          "occupationComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "propertyComposition": {
            "$ref": "#/components/schemas/Connect.Identity.DemographicsPropertyComposition"
          },
          "shareholderComposition": {
            "$ref": "#/components/schemas/Connect.Identity.DemographicsShareholderComposition"
          },
          "socialClassComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "tenureComposition": {
            "$ref": "#/components/schemas/Connect.Identity.Demographic"
          },
          "unemploymentComposition": {
            "$ref": "#/components/schemas/Connect.Identity.DemographicsUnemploymentComposition"
          }
        }
      },
      "Connect.Identity.ThirdPartyAlerts": {
        "type": "object",
        "properties": {
          "decision": {
            "type": "integer",
            "format": "int32"
          },
          "review": {
            "type": "integer",
            "format": "int32"
          },
          "hho": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.ShareAccountSupplierDetails": {
        "type": "object",
        "properties": {
          "behaviouralData": {
            "type": "boolean",
            "nullable": true
          },
          "supplierName": {
            "type": "string",
            "nullable": true
          },
          "supplierType": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ShareAccountHistory": {
        "type": "object",
        "properties": {
          "yearAndMonth": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "statusDescription": {
            "type": "string",
            "nullable": true
          },
          "paymentStatus": {
            "type": "string",
            "nullable": true
          },
          "paymentStatusDescription": {
            "type": "string",
            "nullable": true
          },
          "statementBalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "paymentAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cashAdvanceCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "cashAdvancesTotal": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ShareAccountHolderDetails": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Connect.Identity.ReportAddress"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "startDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "endDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ShareAccountDefault": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "originalBalance": {
            "type": "integer",
            "format": "int32"
          },
          "terminationBalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "satisfactionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "repossessionDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ShareAccountDelinquency": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.ShareAccountHistoryBatch": {
        "type": "object",
        "properties": {
          "accountHistory": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ShareAccountHistory"
            },
            "nullable": true
          },
          "isFirstBatch": {
            "type": "boolean"
          },
          "isLastBatch": {
            "type": "boolean"
          }
        }
      },
      "Connect.Identity.ShareAccountDetails": {
        "type": "object",
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "accountSuffix": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "joint": {
            "type": "boolean"
          },
          "status": {
            "type": "string",
            "nullable": true
          },
          "dateUpdated": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "currencyCode": {
            "type": "string",
            "nullable": true
          },
          "balance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "limit": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "openingBalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "arrangementStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "arrangementEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "paymentStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accountStartDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "accountEndDate": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "regularPayment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "expectedPayment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "actualPayment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "repaymentPeriod": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "lumpPayment": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "penaltyInterestAmount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "promotionalRate": {
            "type": "boolean",
            "nullable": true
          },
          "minimumPayment": {
            "type": "boolean",
            "nullable": true
          },
          "statementBalance": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "typeCode": {
            "type": "string",
            "nullable": true
          },
          "type": {
            "type": "string",
            "nullable": true
          },
          "groupId": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "repaymentFrequencyCode": {
            "type": "string",
            "nullable": true
          },
          "repaymentFrequency": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReportShareAccount": {
        "type": "object",
        "properties": {
          "supplierDetails": {
            "$ref": "#/components/schemas/Connect.Identity.ShareAccountSupplierDetails"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ShareAccountHistory"
            },
            "nullable": true
          },
          "holderDetails": {
            "$ref": "#/components/schemas/Connect.Identity.ShareAccountHolderDetails"
          },
          "default": {
            "$ref": "#/components/schemas/Connect.Identity.ShareAccountDefault"
          },
          "delinquency": {
            "$ref": "#/components/schemas/Connect.Identity.ShareAccountDelinquency"
          },
          "historyBatches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ShareAccountHistoryBatch"
            },
            "nullable": true
          },
          "details": {
            "$ref": "#/components/schemas/Connect.Identity.ShareAccountDetails"
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.CreditReport": {
        "type": "object",
        "properties": {
          "reportTitle": {
            "type": "string",
            "nullable": true
          },
          "reportType": {
            "type": "string",
            "nullable": true
          },
          "summary": {
            "$ref": "#/components/schemas/Connect.Identity.Summary"
          },
          "score": {
            "$ref": "#/components/schemas/Connect.Identity.CreditScore"
          },
          "address": {
            "$ref": "#/components/schemas/Connect.Identity.ReportAddress"
          },
          "previousAddress1": {
            "$ref": "#/components/schemas/Connect.Identity.ReportAddress"
          },
          "previousAddress2": {
            "$ref": "#/components/schemas/Connect.Identity.ReportAddress"
          },
          "links": {
            "$ref": "#/components/schemas/Connect.Identity.ReportLinks"
          },
          "cifas": {
            "$ref": "#/components/schemas/Connect.Identity.ReportCifas"
          },
          "rtr": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportRtr"
            },
            "nullable": true
          },
          "insolvencies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportInsolvency"
            },
            "nullable": true
          },
          "judgements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportJudgement"
            },
            "nullable": true
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportHistory"
            },
            "nullable": true
          },
          "notices": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportNotice"
            },
            "nullable": true
          },
          "demographics": {
            "$ref": "#/components/schemas/Connect.Identity.ReportDemographics"
          },
          "thirdPartyAlerts": {
            "$ref": "#/components/schemas/Connect.Identity.ThirdPartyAlerts"
          },
          "shareAccounts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.ReportShareAccount"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.TransUnionResult": {
        "type": "object",
        "properties": {
          "applicant1Report": {
            "$ref": "#/components/schemas/Connect.Identity.CreditReport"
          },
          "applicant2Report": {
            "$ref": "#/components/schemas/Connect.Identity.CreditReport"
          },
          "dateAndTimeOfReport": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "gaugeVersion": {
            "type": "string",
            "nullable": true
          },
          "reason": {
            "type": "string",
            "nullable": true
          },
          "success": {
            "type": "boolean"
          },
          "supplierId": {
            "type": "string",
            "nullable": true
          },
          "supplierOriginalId": {
            "type": "string",
            "nullable": true
          },
          "creditsIncurred": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.MappedDocuments": {
        "type": "object"
      },
      "Connect.Identity.MatchValue": {
        "enum": [
          0,
          1,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "Connect.Identity.MappedResultCodeDetails": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "format": "int32"
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "override": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.PepSanctionAddress": {
        "type": "object",
        "properties": {
          "city": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          },
          "firstLine": {
            "type": "string",
            "nullable": true
          },
          "region": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.DateType": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Connect.Identity.PepSanctionDate": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time",
            "nullable": true
          },
          "dateType": {
            "$ref": "#/components/schemas/Connect.Identity.DateType"
          }
        }
      },
      "Connect.Identity.MappedSanctionDetail": {
        "type": "object",
        "properties": {
          "aliases": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "fullName": {
            "type": "string",
            "nullable": true
          },
          "identityInformation": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.PepSanctionAddress"
            },
            "nullable": true
          },
          "sanctionBodies": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true
          },
          "dates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.PepSanctionDate"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.MappedSanctionMatch": {
        "type": "object",
        "properties": {
          "detail": {
            "$ref": "#/components/schemas/Connect.Identity.MappedSanctionDetail"
          },
          "id": {
            "type": "string",
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "url": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.Identity.MappedPepMatch": {
        "type": "object"
      },
      "Connect.Identity.MappedResultCode": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "address": {
            "$ref": "#/components/schemas/Connect.Identity.MatchValue"
          },
          "alert": {
            "$ref": "#/components/schemas/Connect.Identity.MatchValue"
          },
          "dateOfBirth": {
            "$ref": "#/components/schemas/Connect.Identity.MatchValue"
          },
          "forename": {
            "$ref": "#/components/schemas/Connect.Identity.MatchValue"
          },
          "surname": {
            "$ref": "#/components/schemas/Connect.Identity.MatchValue"
          },
          "pass": {
            "$ref": "#/components/schemas/Connect.Identity.MatchValue"
          },
          "comments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.MappedResultCodeDetails"
            },
            "nullable": true
          },
          "match": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.MappedResultCodeDetails"
            },
            "nullable": true
          },
          "misMatch": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.MappedResultCodeDetails"
            },
            "nullable": true
          },
          "sanctions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.MappedSanctionMatch"
            },
            "nullable": true
          },
          "peps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.MappedPepMatch"
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.IdAmlResult": {
        "type": "object",
        "properties": {
          "authenticationID": {
            "type": "string",
            "nullable": true
          },
          "bandText": {
            "type": "string",
            "nullable": true
          },
          "birthIndexMatch": {
            "type": "boolean",
            "nullable": true
          },
          "chainID": {
            "type": "string",
            "nullable": true
          },
          "documents": {
            "$ref": "#/components/schemas/Connect.Identity.MappedDocuments"
          },
          "noRetry": {
            "type": "boolean",
            "nullable": true
          },
          "resultCodes": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/Connect.Identity.MappedResultCode"
            },
            "nullable": true
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "searchText": {
            "type": "string",
            "nullable": true
          },
          "legacyUniqueID": {
            "type": "string",
            "nullable": true
          },
          "validationID": {
            "type": "string",
            "nullable": true
          },
          "hasAlerts": {
            "type": "boolean"
          },
          "success": {
            "type": "boolean"
          },
          "supplierId": {
            "type": "string",
            "nullable": true
          },
          "supplierOriginalId": {
            "type": "string",
            "nullable": true
          },
          "creditsIncurred": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "Connect.Identity.IdentityHistoryItem": {
        "type": "object",
        "properties": {
          "uniqueId": {
            "type": "string",
            "nullable": true
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "searchTime": {
            "type": "string",
            "format": "date-time"
          },
          "searchText": {
            "type": "string",
            "nullable": true
          },
          "reference": {
            "type": "string",
            "nullable": true
          },
          "hasConsumerInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasConsumer": {
            "type": "boolean",
            "nullable": true
          },
          "hasIdInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasId": {
            "type": "boolean",
            "nullable": true
          },
          "hasAmlInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasAml": {
            "type": "boolean",
            "nullable": true
          },
          "hasBankMatchInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasBankMatch": {
            "type": "boolean",
            "nullable": true
          },
          "hasAmlWithBankMatchInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "hasAmlWithBankMatch": {
            "type": "boolean",
            "nullable": true
          },
          "consumerId": {
            "type": "string",
            "nullable": true
          },
          "consumerOriginalId": {
            "type": "string",
            "nullable": true
          },
          "consumerBand1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consumerScore1": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consumerBand2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "consumerScore2": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "gaugeVersion": {
            "type": "string",
            "nullable": true
          },
          "consumerReason": {
            "type": "string",
            "nullable": true
          },
          "linkedReport": {
            "type": "string",
            "nullable": true
          },
          "idId": {
            "type": "string",
            "nullable": true
          },
          "idAuthenticationId": {
            "type": "string",
            "nullable": true
          },
          "idChainId": {
            "type": "string",
            "nullable": true
          },
          "idValidationId": {
            "type": "string",
            "nullable": true
          },
          "idLegacyID": {
            "type": "string",
            "nullable": true
          },
          "idResult": {
            "$ref": "#/components/schemas/Connect.Identity.AmlResultCode"
          },
          "idHasAlertsInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idHasAlerts": {
            "type": "boolean",
            "nullable": true
          },
          "amlType": {
            "$ref": "#/components/schemas/Connect.Identity.Product"
          },
          "amlId": {
            "type": "string",
            "nullable": true
          },
          "amlAuthenticationId": {
            "type": "string",
            "nullable": true
          },
          "amlChainId": {
            "type": "string",
            "nullable": true
          },
          "amlValidationId": {
            "type": "string",
            "nullable": true
          },
          "amlLegacyID": {
            "type": "string",
            "nullable": true
          },
          "amlResult": {
            "$ref": "#/components/schemas/Connect.Identity.AmlResultCode"
          },
          "amlHasAlertsInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "amlHasAlerts": {
            "type": "boolean",
            "nullable": true
          },
          "idRevalidatedInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "idHasRevalidated": {
            "type": "boolean",
            "nullable": true
          },
          "idCanRevalidate": {
            "type": "boolean",
            "nullable": true
          },
          "amlRevalidatedInt": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "amlHasRevalidated": {
            "type": "boolean",
            "nullable": true
          },
          "amlCanRevalidate": {
            "type": "boolean",
            "nullable": true
          },
          "input": {
            "$ref": "#/components/schemas/Connect.Identity.SearchRequest"
          },
          "consumer": {
            "$ref": "#/components/schemas/Connect.Identity.TransUnionResult"
          },
          "id": {
            "$ref": "#/components/schemas/Connect.Identity.IdAmlResult"
          },
          "aml": {
            "$ref": "#/components/schemas/Connect.Identity.IdAmlResult"
          }
        }
      },
      "Connect.Identity.HistoryListResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "format": "int32"
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.Identity.IdentityHistoryItem"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.Passport": {
        "type": "object"
      },
      "Connect.Identity.DriversLicense": {
        "type": "object"
      },
      "Connect.Identity.ElectricitySupplier": {
        "type": "object"
      },
      "Connect.Identity.EuropeanIDCard": {
        "type": "object"
      },
      "Connect.Identity.NINumber": {
        "type": "object"
      },
      "Connect.Identity.BankAccountDetails": {
        "type": "object"
      },
      "Connect.Identity.RevalidateRequest": {
        "type": "object",
        "properties": {
          "uniqueId": {
            "type": "string",
            "nullable": true
          },
          "passport": {
            "$ref": "#/components/schemas/Connect.Identity.Passport"
          },
          "driversLicense": {
            "$ref": "#/components/schemas/Connect.Identity.DriversLicense"
          },
          "electricitySupplier": {
            "$ref": "#/components/schemas/Connect.Identity.ElectricitySupplier"
          },
          "europeanIDCard": {
            "$ref": "#/components/schemas/Connect.Identity.EuropeanIDCard"
          },
          "niNumber": {
            "$ref": "#/components/schemas/Connect.Identity.NINumber"
          },
          "bankAccountDetails": {
            "$ref": "#/components/schemas/Connect.Identity.BankAccountDetails"
          }
        }
      },
      "Connect.Identity.PepOrSanction": {
        "enum": [
          0,
          1
        ],
        "type": "integer",
        "format": "int32"
      },
      "Connect.Identity.PepDetails": {
        "type": "object"
      },
      "Connect.Identity.BatchSearchRequest": {
        "type": "object"
      },
      "Connect.Identity.CameoResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Connect.Identity.DemographicsNeighbourhoodDefinition"
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.ReasonResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            },
            "nullable": true
          },
          "message": {
            "type": "string",
            "nullable": true
          },
          "errors": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true
          }
        }
      },
      "Connect.Identity.SetReasonRequest": {
        "required": [
          "reasons"
        ],
        "type": "object",
        "properties": {
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "reasons": {
            "type": "object",
            "additionalProperties": {
              "type": "boolean"
            }
          }
        }
      },
      "Connect.Identity.Supplier": {
        "enum": [
          0,
          1,
          2,
          3,
          4
        ],
        "type": "integer",
        "format": "int32"
      },
      "Connect.Identity.Action": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "Connect.Identity.UpdateUserPackage": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int64"
          },
          "customerId": {
            "type": "integer",
            "format": "int64"
          },
          "supplier": {
            "$ref": "#/components/schemas/Connect.Identity.Supplier"
          },
          "action": {
            "$ref": "#/components/schemas/Connect.Identity.Action"
          },
          "payload": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AMLSearch": {
        "description": "Search parameters for AML product",
        "properties": {
          "UniqueId": {
            "type": "string",
            "nullable": true
          },
          "common": {
            "description": "Person search criteria",
            "allOf": [
              {
                "$ref": "#/components/schemas/Connect.Identity.amlCommonSearchCriteria"
              }
            ]
          },
          "iDAml": {
            "description": "Reference to bank account detail search",
            "allOf": [
              {
                "$ref": "#/components/schemas/Connect.Identity.AmlSearchCriteria"
              }
            ]
          },
          "products": {
            "type": "string",
            "description": "Enter `AML` for this product search",
            "example": "AML"
          }
        },
        "example": {
          "common": {
            "person": {
              "currentName": {
                "title": "MR",
                "forename": "John",
                "otherNames": "",
                "surname": "Murphy",
                "suffix": ""
              },
              "dateOfBirth": "1974-07-07",
              "gender": "",
              "addresses": {
                "current": {
                  "buildingNo": "",
                  "buildingName": "Stadium Plaza",
                  "street": "Wood Street",
                  "city": "Cardiff",
                  "postCode": "CF10 1LA"
                }
              }
            },
            "reference": ""
          },
          "idAml": {
            "landlineNumber": "",
            "exDirectory": false,
            "sortCode": "",
            "bankAccountNumber": ""
          },
          "products": [
            "Aml"
          ]
        }
      },
      "consumerSearch": {
        "description": "Search parameters for a consumer product",
        "properties": {
          "UniqueId": {
            "type": "string",
            "nullable": true
          },
          "common": {
            "description": "Person search criteria",
            "allOf": [
              {
                "$ref": "#/components/schemas/Connect.Identity.consumerCommonSearchCriteria"
              }
            ]
          },
          "consumer": {
            "description": "Second person search option",
            "allOf": [
              {
                "$ref": "#/components/schemas/Connect.Identity.ConsumerSearchCriteria"
              }
            ]
          },
          "products": {
            "type": "string",
            "description": "Enter `Consumer` for this product search",
            "example": "consumer"
          }
        },
        "example": {
          "common": {
            "person": {
              "currentName": {
                "title": "Miss",
                "forename": "Anne",
                "otherNames": "",
                "surname": "Delta",
                "suffix": ""
              },
              "previousName": {
                "title": "Miss",
                "forename": "Anne",
                "otherNames": "",
                "surname": "Alpha",
                "suffix": ""
              },
              "dateOfBirth": "1948-06-04",
              "gender": "Female",
              "addresses": {
                "current": {
                  "buildingNo": "7",
                  "buildingName": "",
                  "street": "Twelve Acre Cresent",
                  "city": "Barton-Le-Willows",
                  "postCode": "X9 8JD",
                  "startDate": "2010-05-13",
                  "endDate": "2012-05-08"
                },
                "previous1": {
                  "buildingNo": "6",
                  "buildingName": "",
                  "street": "Twelve Acre Cresent",
                  "city": "Barton-Le-Willows",
                  "postCode": "X9 8JD",
                  "startDate": "2012-05-08",
                  "endDate": "2013-05-08"
                },
                "previous2": {
                  "buildingNo": "1",
                  "buildingName": "",
                  "street": "Twelve Acre Cresent",
                  "city": "Barton-Le-Willows",
                  "postCode": "X9 8JD",
                  "startDate": "2013-05-08",
                  "endDate": ""
                }
              }
            },
            "reference": "Test - Consumer Search"
          },
          "consumer": {
            "reason": "QuotationSearch",
            "thirdPartyOptIn": "False"
          },
          "products": [
            "Consumer"
          ]
        }
      },
      "Connect.ConfidenceMatch.MatchResults": {
        "properties": {
          "totalMatches": {
            "type": "integer"
          },
          "matchedCompanies": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "matchScoreConfidence": {
                  "type": "integer"
                },
                "id": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "regNo": {
                  "type": "string"
                },
                "safeNo": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "phoneNumber": {
                  "type": "integer"
                },
                "address": {
                  "type": "object",
                  "properties": {
                    "simpleValue": {
                      "type": "string"
                    },
                    "street": {
                      "type": "string"
                    },
                    "city": {
                      "type": "string"
                    },
                    "postcode": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                },
                "status": {
                  "type": "string"
                },
                "type": {
                  "type": "string"
                },
                "officeType": {
                  "type": "string",
                  "description": "Only available with US companies."
                },
                "dateOfLatestAccounts": {
                  "type": "string"
                },
                "dateOfLatestChange": {
                  "type": "string"
                },
                "matchScoreExplainPlan": {
                  "type": "object",
                  "properties": {
                    "matchScore": {
                      "type": "integer"
                    },
                    "matchScoreAlpha": {
                      "type": "string"
                    },
                    "matchScoreLocal Id": {
                      "type": "string"
                    },
                    "matchScoreName": {
                      "type": "string"
                    },
                    "matchScoreHouseNo": {
                      "type": "string"
                    },
                    "matchScoreStreet": {
                      "type": "string"
                    },
                    "matchScorePoBox": {
                      "type": "string"
                    },
                    "matchScoreCity": {
                      "type": "string"
                    },
                    "matchScoreState": {
                      "type": "string"
                    },
                    "matchScorePostCode": {
                      "type": "string"
                    },
                    "matchScoreCountry": {
                      "type": "string"
                    },
                    "matchScoreVatNo": {
                      "type": "string"
                    },
                    "matchScoreRegNo": {
                      "type": "string"
                    },
                    "matchScorePhoneNo": {
                      "type": "string"
                    },
                    "matchScoreSimpleValue": {
                      "type": "string"
                    },
                    "matchScoreNum": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Connect.ConfidenceMatch.NoResults": {
        "properties": {
          "totalMatches": {
            "type": "integer"
          },
          "matchedCompanies": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Connect.creditSafeCcdsCompany": {
        "type": "object",
        "properties": {
          "creditSafeCompanyId": {
            "type": "string",
            "example": "NI008172",
            "nullable": true
          }
        }
      },
      "Connect.BankMatch.Totals": {
        "type": "object",
        "properties": {
          "totalAccounts": {
            "type": "integer",
            "format": "int64"
          },
          "totalBalance": {
            "type": "integer",
            "format": "int64"
          },
          "totalOverdraftOrCreditLimit": {
            "type": "integer",
            "format": "int64"
          },
          "remainingBalance": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "totalAverageBalance": {
            "type": "integer",
            "format": "int64"
          }
        }
      },
      "Connect.BankMatch.PerOrganisationAggregation": {
        "type": "object",
        "properties": {
          "providerId": {
            "type": "string",
            "nullable": true
          },
          "creditCards": {
            "$ref": "#/components/schemas/Connect.BankMatch.Totals"
          },
          "currentAccounts": {
            "$ref": "#/components/schemas/Connect.BankMatch.Totals"
          },
          "loans": {
            "$ref": "#/components/schemas/Connect.BankMatch.Totals"
          }
        }
      },
      "Connect.BankMatch.Aggregations": {
        "type": "object",
        "properties": {
          "totalCreditCards": {
            "$ref": "#/components/schemas/Connect.BankMatch.Totals"
          },
          "totalCurrentAccounts": {
            "$ref": "#/components/schemas/Connect.BankMatch.Totals"
          },
          "totalLoans": {
            "$ref": "#/components/schemas/Connect.BankMatch.Totals"
          },
          "perOrganisationAggregations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.BankMatch.PerOrganisationAggregation"
            },
            "nullable": true
          }
        }
      },
      "Connect.BankMatch.BusinessAddress": {
        "type": "object",
        "properties": {
          "line1": {
            "type": "string",
            "nullable": true
          },
          "line2": {
            "type": "string",
            "nullable": true
          },
          "line3": {
            "type": "string",
            "nullable": true
          },
          "line4": {
            "type": "string",
            "nullable": true
          },
          "line5": {
            "type": "string",
            "nullable": true
          },
          "line6": {
            "type": "string",
            "nullable": true
          },
          "postcode": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.BankMatch.Facility": {
        "type": "object",
        "properties": {
          "businessTypeIndicator": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "businessAddress": {
            "$ref": "#/components/schemas/Connect.BankMatch.BusinessAddress"
          },
          "additionalTradingStyle": {
            "type": "string",
            "nullable": true
          },
          "businessTelephoneNumber": {
            "type": "string",
            "nullable": true
          },
          "companyRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "specialInstructionIndicator": {
            "type": "string",
            "nullable": true
          },
          "startDateOfAgreement": {
            "type": "string",
            "format": "date-time"
          },
          "closeDateOfAgreement": {
            "type": "object",
            "nullable": true
          },
          "currentBalance": {
            "type": "integer",
            "format": "int64"
          },
          "currentBalanceCreditIndicator": {
            "type": "string",
            "nullable": true
          },
          "actualCurrentBalance": {
            "type": "integer",
            "format": "int64"
          },
          "facilityStatus": {
            "type": "string",
            "nullable": true
          },
          "originalDefaultBalance": {
            "type": "integer",
            "format": "int64"
          },
          "defaultSatisfactionDate": {
            "type": "object",
            "nullable": true
          },
          "creditOrOverdraftLimit": {
            "type": "integer",
            "format": "int64"
          },
          "flagSettings": {
            "type": "string",
            "nullable": true
          },
          "transferredToConsolidatedDebtAccount": {
            "type": "string",
            "nullable": true
          },
          "repaymentPeriod": {
            "type": "integer",
            "format": "int64"
          },
          "paymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "paymentFrequencyIndicator": {
            "type": "string",
            "nullable": true
          },
          "numberOfCashAdvances": {
            "type": "integer",
            "format": "int64"
          },
          "valueOfCashAdvances": {
            "type": "integer",
            "format": "int64"
          },
          "minimumBalance": {
            "type": "integer",
            "format": "int64"
          },
          "minimumBalanceCreditIndicator": {
            "type": "string",
            "nullable": true
          },
          "actualMinimumBalance": {
            "type": "integer",
            "format": "int64"
          },
          "maximumBalance": {
            "type": "integer",
            "format": "int64"
          },
          "maximumBalanceCreditIndicator": {
            "type": "string",
            "nullable": true
          },
          "actualMaximumBalance": {
            "type": "integer",
            "format": "int64"
          },
          "averageBalance": {
            "type": "integer",
            "format": "int64"
          },
          "averageBalanceCreditIndicator": {
            "type": "string",
            "nullable": true
          },
          "actualAverageBalance": {
            "type": "integer",
            "format": "int64"
          },
          "creditTurnover": {
            "type": "integer",
            "format": "int64"
          },
          "creditTurnoverNetOrGrossIndicator": {
            "type": "string",
            "nullable": true
          },
          "debitTurnover": {
            "type": "integer",
            "format": "int64"
          },
          "debitTurnoverNetOrGrossIndicator": {
            "type": "string",
            "nullable": true
          },
          "rejectedPayments": {
            "type": "integer",
            "format": "int64"
          },
          "maximumDurationOfExcess": {
            "type": "integer",
            "format": "int64"
          },
          "changedFacilityNumber": {
            "type": "string",
            "nullable": true
          },
          "bankSortCode": {
            "type": "string",
            "nullable": true
          },
          "bankAccountNumber": {
            "type": "string",
            "nullable": true
          },
          "bankAccountIban": {
            "type": "string",
            "nullable": true
          },
          "currentAccountReportingLevelIndicator": {
            "type": "string",
            "nullable": true
          },
          "sourceCode": {
            "type": "string",
            "nullable": true
          },
          "facilityNumber": {
            "type": "string",
            "nullable": true
          },
          "facilityId": {
            "type": "string",
            "nullable": true
          },
          "identifier": {
            "type": "string",
            "nullable": true
          },
          "providerType": {
            "type": "string",
            "nullable": true
          },
          "bankCode": {
            "type": "string",
            "nullable": true
          },
          "batch": {
            "type": "string",
            "nullable": true
          },
          "facilityType": {
            "type": "integer",
            "format": "int64"
          },
          "facilityTypeCategory": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "Connect.BankMatch.Data": {
        "description": "Data provided by an alternative finance provider.",
        "type": "object",
        "properties": {
          "aggregations": {
            "$ref": "#/components/schemas/Connect.BankMatch.Aggregations"
          },
          "facilities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.BankMatch.Facility"
            },
            "nullable": true
          }
        }
      },
      "Connect.footprintDataFinance": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "safeNumber": {
            "type": "string",
            "description": "Safe Number - Identifier for Companies in Creditsafe's Home Countries.",
            "example": "UK07005751"
          },
          "creditSafe": {
            "type": "object",
            "properties": {
              "creditSafeCompanyId": {
                "type": "string",
                "example": "NI008172"
              }
            }
          },
          "overallAggregations": {
            "type": "object",
            "$ref": "#/components/schemas/Connect.ccds.overallAggregations"
          },
          "bankData": {
            "type": "object",
            "description": "Data provided by 1 of the top 9 major banks in UK.",
            "properties": {
              "aggregations": {
                "type": "object",
                "$ref": "#/components/schemas/Connect.ccds.aggregations"
              },
              "facilities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Connect.ccds.facilities"
                }
              }
            }
          },
          "afpData": {
            "$ref": "#/components/schemas/Connect.BankMatch.Data"
          },
          "history": {
            "description": "List of accounts connected to the company, snapshot of account at point in time each month.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.ccds.history"
            }
          },
          "footprintData": {
            "description": "A version of a summarisation of companies account details which omits any sensitive data and can be shown to non-CCDS members.",
            "type": "object",
            "properties": {
              "year": {
                "type": "object",
                "properties": {
                  "month": {
                    "type": "object",
                    "properties": {
                      "loans": {
                        "$ref": "#/components/schemas/Connect.ccds.footprintDataFinance"
                      },
                      "currentAccounts": {
                        "$ref": "#/components/schemas/Connect.ccds.footprintDataFinance"
                      },
                      "all": {
                        "$ref": "#/components/schemas/Connect.ccds.footprintDataFinance"
                      },
                      "creditCards": {
                        "$ref": "#/components/schemas/Connect.ccds.footprintDataFinance"
                      }
                    }
                  }
                }
              }
            },
            "example": {
              "2020": {
                "10": {
                  "loans": {
                    "ActiveAccounts": 10,
                    "SettledAccounts": 1,
                    "EarliestStartDate": "2016-08-17T00:00:00",
                    "LatestStartDate": "2019-09-18T00:00:00"
                  },
                  "currentAccounts": {
                    "ActiveAccounts": 1,
                    "SettledAccounts": 0,
                    "EarliestStartDate": "2012-07-03T00:00:00",
                    "LatestStartDate": "2012-07-03T00:00:00"
                  },
                  "all": {
                    "activeAccounts": 11,
                    "settledAccounts": 1,
                    "earliestStartDate": "2012-07-03T00:00:00",
                    "latestStartDate": "2019-09-18T00:00:00"
                  },
                  "creditCards": {
                    "activeAccounts": 0,
                    "settledAccounts": 0
                  }
                }
              }
            }
          }
        }
      },
      "Connect.ccds.footprintDataFinance": {
        "type": "object",
        "properties": {
          "activeAccounts": {
            "type": "integer",
            "format": "int64"
          },
          "settledAccounts": {
            "type": "integer",
            "format": "int64"
          },
          "earliestStartDate": {
            "type": "string",
            "format": "date-time"
          },
          "latestStartDate": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Connect.fullFinanceData": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "safeNumber": {
            "description": "Safe Number - Identifier for Companies in Creditsafe's Home Countries.",
            "type": "string",
            "example": "UK07005751"
          },
          "creditSafe": {
            "type": "object",
            "properties": {
              "creditSafeCompanyId": {
                "type": "string",
                "example": "NI008172"
              }
            }
          },
          "overallAggregations": {
            "type": "object",
            "$ref": "#/components/schemas/Connect.ccds.overallAggregations"
          },
          "bankData": {
            "type": "object",
            "description": "Data provided by 1 of the top 9 major banks in UK.",
            "properties": {
              "aggregations": {
                "type": "object",
                "$ref": "#/components/schemas/Connect.ccds.aggregations"
              },
              "facilities": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Connect.ccds.facilities"
                }
              }
            }
          },
          "afpData": {
            "$ref": "#/components/schemas/Connect.BankMatch.Data"
          },
          "history": {
            "description": "List of accounts connected to the company, snapshot of account at point in time each month.",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Connect.ccds.history"
            }
          }
        }
      },
      "Connect.ccds.overallAggregations": {
        "description": "A summarisation of the companies account details.",
        "type": "object",
        "properties": {
          "totalAccounts": {
            "type": "integer",
            "example": "33"
          },
          "totalBalance": {
            "type": "integer",
            "example": "-813844"
          },
          "totalOverdraftOrCreditLimit": {
            "type": "integer",
            "example": "250000"
          },
          "totalAverageBalance": {
            "type": "integer",
            "example": "273009"
          },
          "remainingBalance": {
            "type": "integer",
            "example": "485247"
          }
        }
      },
      "Connect.ccds.aggregations": {
        "type": "object",
        "properties": {
          "totalCreditCards": {
            "type": "object",
            "properties": {
              "totalAccounts": {
                "type": "integer",
                "example": "0"
              },
              "totalBalance": {
                "type": "integer",
                "example": "0"
              },
              "totalOverdraftOrCreditLimit": {
                "type": "integer",
                "example": "0"
              },
              "remainingBalance": {
                "type": "integer",
                "example": "0"
              },
              "totalAverageBalance": {
                "type": "integer",
                "example": "0"
              }
            }
          },
          "totalCurrentAccounts": {
            "type": "object",
            "properties": {
              "totalAccounts": {
                "type": "integer",
                "example": "0"
              },
              "totalBalance": {
                "type": "integer",
                "example": "0"
              },
              "totalOverdraftOrCreditLimit": {
                "type": "integer",
                "example": "0"
              },
              "remainingBalance": {
                "type": "integer",
                "example": "0"
              },
              "totalAverageBalance": {
                "type": "integer",
                "example": "0"
              }
            }
          },
          "totalLoans": {
            "type": "object",
            "properties": {
              "totalAccounts": {
                "type": "integer",
                "example": "0"
              },
              "totalBalance": {
                "type": "integer",
                "example": "0"
              },
              "totalOverdraftOrCreditLimit": {
                "type": "integer",
                "example": "0"
              },
              "totalAverageBalance": {
                "type": "integer",
                "example": "0"
              }
            }
          },
          "perOrganisationAggregations": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "providerId": {
                  "type": "string"
                },
                "creditCards": {
                  "type": "object",
                  "properties": {
                    "totalAccounts": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalBalance": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalOverdraftOrCreditLimit": {
                      "type": "integer",
                      "example": "0"
                    },
                    "remainingBalance": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalAverageBalance": {
                      "type": "integer",
                      "example": "0"
                    }
                  }
                },
                "currentAccounts": {
                  "type": "object",
                  "properties": {
                    "totalAccounts": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalBalance": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalOverdraftOrCreditLimit": {
                      "type": "integer",
                      "example": "0"
                    },
                    "remainingBalance": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalAverageBalance": {
                      "type": "integer",
                      "example": "0"
                    }
                  }
                },
                "loans": {
                  "type": "object",
                  "properties": {
                    "totalAccounts": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalBalance": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalOverdraftOrCreditLimit": {
                      "type": "integer",
                      "example": "0"
                    },
                    "remainingBalance": {
                      "type": "integer",
                      "example": "0"
                    },
                    "totalAverageBalance": {
                      "type": "integer",
                      "example": "0"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "Connect.ccds.facilities": {
        "type": "object",
        "properties": {
          "startDateOfAgreement": {
            "type": "string",
            "format": "date-time"
          },
          "currentBalance": {
            "type": "integer",
            "example": "0"
          },
          "actualCurrentBalance": {
            "type": "integer",
            "example": "0"
          },
          "originalDefaultBalance": {
            "type": "integer",
            "example": "0"
          },
          "creditOrOverdraftLimit": {
            "type": "integer",
            "example": "0"
          },
          "repaymentPeriod": {
            "type": "integer",
            "example": "0"
          },
          "paymentAmount": {
            "type": "integer",
            "example": "0"
          },
          "numberOfCashAdvances": {
            "type": "integer",
            "example": "0"
          },
          "valueOfCashAdvances": {
            "type": "integer",
            "example": "0"
          },
          "minimumBalance": {
            "type": "integer",
            "example": "0"
          },
          "actualMinimumBalance": {
            "type": "integer",
            "example": "0"
          },
          "maximumBalance": {
            "type": "integer",
            "example": "0"
          },
          "actualMaximumBalance": {
            "type": "integer",
            "example": "0"
          },
          "averageBalance": {
            "type": "integer",
            "example": "0"
          },
          "actualAverageBalance": {
            "type": "integer",
            "example": "0"
          },
          "creditTurnover": {
            "type": "integer",
            "example": "0"
          },
          "debitTurnover": {
            "type": "integer",
            "example": "0"
          },
          "rejectedPayments": {
            "type": "integer",
            "example": "0"
          },
          "maximumDurationOfExcess": {
            "type": "integer",
            "example": "0"
          }
        }
      },
      "Connect.ccds.history": {
        "type": "object",
        "properties": {
          "businessTypeIndicator": {
            "type": "string",
            "nullable": true
          },
          "businessName": {
            "type": "string",
            "nullable": true
          },
          "businessAddress": {
            "$ref": "#/components/schemas/Connect.BankMatch.BusinessAddress"
          },
          "additionalTradingStyle": {
            "type": "string",
            "nullable": true
          },
          "businessTelephoneNumber": {
            "type": "string",
            "nullable": true
          },
          "companyRegistrationNumber": {
            "type": "string",
            "nullable": true
          },
          "vatNumber": {
            "type": "string",
            "nullable": true
          },
          "specialInstructionIndicator": {
            "type": "string",
            "nullable": true
          },
          "startDateOfAgreement": {
            "type": "string",
            "format": "date-time"
          },
          "currentBalance": {
            "type": "integer",
            "format": "int64"
          },
          "currentBalanceCreditIndicator": {
            "type": "string",
            "nullable": true
          },
          "actualCurrentBalance": {
            "type": "integer",
            "format": "int64"
          },
          "facilityStatus": {
            "type": "string",
            "nullable": true
          },
          "originalDefaultBalance": {
            "type": "integer",
            "format": "int64"
          },
          "creditOrOverdraftLimit": {
            "type": "integer",
            "format": "int64"
          },
          "flagSettings": {
            "type": "string",
            "nullable": true
          },
          "transferredToConsolidatedDebtAccount": {
            "type": "string",
            "nullable": true
          },
          "repaymentPeriod": {
            "type": "integer",
            "format": "int64"
          },
          "paymentAmount": {
            "type": "integer",
            "format": "int64"
          },
          "paymentFrequencyIndicator": {
            "type": "string",
            "nullable": true
          },
          "numberOfCashAdvances": {
            "type": "integer",
            "format": "int64"
          },
          "valueOfCashAdvances": {
            "type": "integer",
            "format": "int64"
          },
          "minimumBalance": {
            "type": "integer",
            "format": "int64"
          },
          "minimumBalanceCreditIndicator": {
            "type": "string",
            "nullable": true
          },
          "actualMinimumBalance": {
            "type": "integer",
            "format": "int64"
          },
          "maximumBalance": {
            "type": "integer",
            "format": "int64"
          },
          "maximumBalanceCreditIndicator": {
            "type": "string",
            "nullable": true
          },
          "actualMaximumBalance": {
            "type": "integer",
            "format": "int64"
          },
          "averageBalance": {
            "type": "integer",
            "format": "int64"
          },
          "averageBalanceCreditIndicator": {
            "type": "string",
            "nullable": true
          },
          "actualAverageBalance": {
            "type": "integer",
            "format": "int64"
          },
          "creditTurnover": {
            "type": "integer",
            "format": "int64"
          },
          "creditTurnoverNetOrGrossIndicator": {
            "type": "string",
            "nullable": true
          },
          "debitTurnover": {
            "type": "integer",
            "format": "int64"
          },
          "debitTurnoverNetOrGrossIndicator": {
            "type": "string",
            "nullable": true
          },
          "rejectedPayments": {
            "type": "integer",
            "format": "int64"
          },
          "maximumDurationOfExcess": {
            "type": "integer",
            "format": "int64"
          },
          "currentAccountReportingLevelIndicator": {
            "type": "string",
            "nullable": true
          },
          "facilityType": {
            "type": "integer",
            "format": "int64"
          },
          "facilityTypeCategory": {
            "type": "string",
            "nullable": true
          },
          "batchDate": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string"
          },
          "facilityId": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "BatchUpload": {
        "required": [
          "createdAt",
          "customerId",
          "errorFilename",
          "fileName",
          "id",
          "rowCount",
          "status",
          "storageFileName",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "$ref": "#/components/schemas/InvestigationType"
          },
          "fileName": {
            "type": "string"
          },
          "storageFileName": {
            "type": "string"
          },
          "errorFilename": {
            "type": "string"
          },
          "rowCount": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/BatchUploadStatus"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "InvestigationType": {
        "type": "string",
        "description": "",
        "enum": [
          "business",
          "individual"
        ],
        "x-enumNames": [
          "Business",
          "Individual"
        ]
      },
      "BatchUploadStatus": {
        "type": "string",
        "description": "",
        "enum": [
          "inProgress",
          "completed",
          "partiallyCompleted",
          "failed"
        ],
        "x-enumNames": [
          "InProgress",
          "Completed",
          "PartiallyCompleted",
          "Failed"
        ]
      },
      "FileDownloadResponse": {
        "required": [
          "filePath"
        ],
        "type": "object",
        "properties": {
          "filePath": {
            "type": "string"
          }
        }
      },
      "BatchUploadFileType": {
        "type": "string",
        "description": "",
        "enum": [
          "business",
          "individual",
          "template",
          "templateUserGuide"
        ],
        "x-enumNames": [
          "Business",
          "Individual",
          "Template",
          "TemplateUserGuide"
        ]
      },
      "CountryOption": {
        "required": [
          "code",
          "label"
        ],
        "type": "object",
        "properties": {
          "label": {
            "type": "string"
          },
          "code": {
            "type": "string"
          }
        }
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "int32"
          },
          "detail": {
            "type": "string"
          },
          "instance": {
            "type": "string"
          },
          "extensions": {
            "type": "object",
            "additionalProperties": {
              "type": "object"
            }
          }
        },
        "additionalProperties": {
          "type": "object"
        }
      },
      "CreateScheduleDto": {
        "required": [
          "frequency",
          "isEmailRequired",
          "investigationId",
          "screeningThreshold"
        ],
        "type": "object",
        "properties": {
          "investigationId": {
            "type": "string",
            "format": "guid"
          },
          "frequency": {
            "type": "string",
            "description": " Need to enter `Daily`."
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32",
            "description": "Can only enter the following options: 85, 90, 95, 100"
          },
          "isEmailRequired": {
            "type": "boolean",
            "description": "Select `true` if you wish to recieve notifications when an alert is detected."
          }
        }
      },
      "Schedule": {
        "required": [
          "createdAt",
          "customerId",
          "frequency",
          "id",
          "investigation",
          "investigationId",
          "isEmailRequired",
          "screeningThreshold",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "investigationId": {
            "type": "string",
            "format": "guid"
          },
          "investigation": {
            "$ref": "#/components/schemas/Investigation"
          },
          "frequency": {
            "$ref": "#/components/schemas/AlertsFrequency"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32",
            "description": "Can only enter the following options: 85, 90, 95, 100"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "isEmailRequired": {
            "type": "boolean"
          }
        }
      },
      "AlertsFrequency": {
        "type": "string",
        "description": "",
        "enum": [
          "daily"
        ],
        "x-enumNames": [
          "Daily"
        ]
      },
      "Investigation": {
        "required": [
          "alertCreatedAt",
          "assignedRisk",
          "createdAt",
          "customerId",
          "id",
          "investigationName",
          "query",
          "status",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "query": {
            "$ref": "#/components/schemas/InvestigationQuery"
          },
          "scheduleId": {
            "type": "string",
            "format": "guid"
          },
          "scheduledOn": {
            "type": "string",
            "format": "date-time"
          },
          "profileId": {
            "type": "string",
            "format": "guid"
          },
          "profileName": {
            "type": "string"
          },
          "alertCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "alertsCount": {
            "type": "integer",
            "format": "int32"
          },
          "noteCount": {
            "type": "integer",
            "format": "int32"
          },
          "assignedRisk": {
            "$ref": "#/components/schemas/InvestigationRisk"
          },
          "investigationName": {
            "type": "string"
          },
          "currentAlert": {
            "$ref": "#/components/schemas/InvestigationAlert"
          },
          "assignedToUserId": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "$ref": "#/components/schemas/InvestigationStatus"
          }
        }
      },
      "InvestigationRiskResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "customerId": {
            "type": "integer",
            "format": "int32"
          },
          "query": {
            "$ref": "#/components/schemas/Connect.Protect.InvestigationQuery"
          },
          "scheduleId": {
            "type": "string",
            "format": "guid"
          },
          "scheduledOn": {
            "type": "string",
            "format": "date-time"
          },
          "profileId": {
            "type": "string",
            "format": "guid"
          },
          "profileName": {
            "type": "string"
          },
          "alertCreatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "alertsCount": {
            "type": "integer",
            "format": "int32"
          },
          "noteCount": {
            "type": "integer",
            "format": "int32"
          },
          "assignedRisk": {
            "type": "string",
            "enum": [
              "noRisk",
              "low",
              "medium",
              "high"
            ]
          },
          "investigationName": {
            "type": "string"
          },
          "currentAlert": {
            "$ref": "#/components/schemas/Connect.Protect.ListAllInvestigationsCurrentAlert"
          },
          "status": {
            "type": "string"
          }
        }
      },
      "InvestigationRisk": {
        "type": "string",
        "enum": [
          "noRisk",
          "high",
          "medium",
          "low"
        ],
        "x-enumNames": [
          "NoRisk",
          "High",
          "Medium",
          "Low"
        ]
      },
      "InvestigationStatus": {
        "type": "string",
        "description": "",
        "enum": [
          "none",
          "approved",
          "declined",
          "pending",
          "cancelled",
          "referred",
          "closed"
        ],
        "x-enumNames": [
          "None",
          "Approved",
          "Declined",
          "Pending",
          "Cancelled",
          "Referred",
          "Closed"
        ]
      },
      "InvestigationOrderBys": {
        "type": "string",
        "description": "",
        "enum": [
          "alertCount",
          "name",
          "city",
          "profile",
          "searchedAt",
          "street",
          "province",
          "country",
          "dateOfBirth",
          "createdAt"
        ],
        "x-enumNames": [
          "AlertCount",
          "Name",
          "City",
          "Profile",
          "SearchedAt",
          "Street",
          "Province",
          "Country",
          "DateOfBirth",
          "CreatedAt"
        ]
      },
      "OrderDirection": {
        "type": "string",
        "description": "",
        "enum": [
          "asc",
          "desc"
        ],
        "x-enumNames": [
          "Asc",
          "Desc"
        ]
      },
      "GetInvestigationFileBodyDto": {
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "CreateInvestigationRecordBody": {
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvestigationRecordDto"
            }
          }
        }
      },
      "InvestigationRecordDto": {
        "required": [
          "recordId",
          "type"
        ],
        "type": "object",
        "properties": {
          "recordId": {
            "type": "integer",
            "format": "int64"
          },
          "type": {
            "$ref": "#/components/schemas/MatchType"
          }
        }
      },
      "UpdateInvestigationRecordsDto": {
        "type": "object",
        "properties": {
          "records": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/InvestigationRecordDto"
            }
          }
        }
      },
      "DeleteRecordsDto": {
        "required": [
          "recordIds"
        ],
        "type": "object",
        "properties": {
          "recordIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          }
        }
      },
      "InvestigationNote": {
        "required": [
          "createdAt",
          "id",
          "investigationId",
          "subject",
          "userId"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "subject": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "userId": {
            "type": "integer",
            "format": "int32"
          },
          "investigationId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "CreateInvestigationNoteDto": {
        "required": [
          "subject"
        ],
        "type": "object",
        "properties": {
          "subject": {
            "type": "string"
          },
          "text": {
            "type": "string"
          }
        }
      },
      "AssignRiskToInvestigationDto": {
        "required": [
          "assignedRisk"
        ],
        "type": "object",
        "properties": {
          "assignedRisk": {
            "$ref": "#/components/schemas/InvestigationRisk"
          }
        }
      },
      "UpdateInvestigationRequestDto": {
        "required": [
          "investigationStatus"
        ],
        "type": "object",
        "properties": {
          "investigationStatus": {
            "$ref": "#/components/schemas/InvestigationStatus"
          },
          "assignedToUserId": {
            "type": "integer",
            "format": "int32"
          }
        }
      },
      "InvestigationQuery": {
        "required": [
          "screeningThreshold",
          "searchName",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/InvestigationType"
          },
          "name": {
            "type": "string"
          },
          "houseNo": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "generation": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "nationalId": {
            "type": "string"
          },
          "citizenship": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderType"
          },
          "searchName": {
            "type": "string"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "$ref": "#/components/schemas/SourceType"
          }
        }
      },
      "GenderType": {
        "type": "string",
        "description": "",
        "enum": [
          "male",
          "female"
        ],
        "x-enumNames": [
          "Male",
          "Female"
        ]
      },
      "SourceType": {
        "type": "string",
        "description": "",
        "enum": [
          "app",
          "upp",
          "api"
        ],
        "x-enumNames": [
          "App",
          "Upp",
          "Api"
        ]
      },
      "InvestigationAlert": {
        "required": [
          "alertCount",
          "alertType",
          "createdAt",
          "id",
          "screeningThreshold",
          "status",
          "totalRecordCount",
          "unprocessedRecordCount"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "status": {
            "$ref": "#/components/schemas/InvestigationAlertStatus"
          },
          "alertCount": {
            "type": "integer",
            "format": "int32"
          },
          "totalRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "unprocessedRecordCount": {
            "type": "integer",
            "format": "int32"
          },
          "resultId": {
            "type": "integer",
            "format": "int64"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "alertType": {
            "$ref": "#/components/schemas/AlertType"
          }
        }
      },
      "InvestigationAlertStatus": {
        "type": "string",
        "description": "",
        "enum": [
          "open",
          "closedUnprocessed",
          "closedProcessed",
          "refetch"
        ],
        "x-enumNames": [
          "Open",
          "ClosedUnprocessed",
          "ClosedProcessed",
          "Refetch"
        ]
      },
      "AlertType": {
        "type": "string",
        "description": "",
        "enum": [
          "initialSearch",
          "alert"
        ],
        "x-enumNames": [
          "InitialSearch",
          "Alert"
        ]
      },
      "Record": {
        "required": [
          "addresses",
          "comments",
          "dateListed",
          "entityId",
          "hasAdverseMedia",
          "id",
          "matchScore",
          "name",
          "otherNames",
          "resultId",
          "sourceDate",
          "sources"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64"
          },
          "matchType": {
            "$ref": "#/components/schemas/MatchType"
          },
          "resultId": {
            "type": "integer",
            "format": "int64"
          },
          "entityId": {
            "type": "string"
          },
          "matchScore": {
            "type": "integer",
            "format": "int32"
          },
          "sourceDate": {
            "type": "string"
          },
          "dateListed": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "fullName": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "reasonListed": {
            "type": "string"
          },
          "entityType": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "generation": {
            "type": "string"
          },
          "gender": {
            "type": "string"
          },
          "occupation": {
            "type": "string"
          },
          "placeOfBirth": {
            "type": "string"
          },
          "hasAdverseMedia": {
            "type": "boolean"
          },
          "otherNames": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "addresses": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Address"
            }
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "sources": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MatchType": {
        "type": "string",
        "description": "",
        "enum": [
          "trueMatch",
          "falsePositive"
        ],
        "x-enumNames": [
          "TrueMatch",
          "FalsePositive"
        ]
      },
      "Address": {
        "type": "object",
        "properties": {
          "street": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "country": {
            "type": "string"
          }
        }
      },
      "CreateInvestigationQueryDto": {
        "required": [
          "screeningThreshold",
          "type",
          "name"
        ],
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "enum": [
              "business",
              "individual"
            ]
          },
          "name": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderType"
          },
          "searchName": {
            "type": "string"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "$ref": "#/components/schemas/SourceType"
          }
        }
      },
      "IdvResponseDto": {
        "required": [
          "address",
          "country",
          "dateOfBirth",
          "fullName",
          "id",
          "idvSearchId",
          "matchRate",
          "sources"
        ],
        "type": "object",
        "properties": {
          "matchRate": {
            "$ref": "#/components/schemas/MatchRate"
          },
          "fullName": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "sources": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IdvSourcesDto"
            }
          },
          "id": {
            "type": "string",
            "format": "guid"
          },
          "idvSearchId": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "MatchRate": {
        "type": "string",
        "description": "",
        "enum": [
          "fullMatch",
          "partialMatch",
          "noMatch"
        ],
        "x-enumNames": [
          "FullMatch",
          "PartialMatch",
          "NoMatch"
        ]
      },
      "IdvSourcesDto": {
        "required": [
          "category",
          "matchType"
        ],
        "type": "object",
        "properties": {
          "category": {
            "type": "string"
          },
          "matchType": {
            "type": "string"
          }
        }
      },
      "IdvRequestDto": {
        "required": [
          "address",
          "country",
          "dateOfBirth",
          "id",
          "name"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date-time"
          },
          "address": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "state": {
            "type": "string"
          },
          "country": {
            "type": "string"
          },
          "postalCode": {
            "type": "string"
          },
          "acceptCulture": {
            "type": "string"
          },
          "id": {
            "type": "string",
            "format": "guid"
          }
        }
      },
      "InvestigationResponse": {
        "required": [
          "createdAt",
          "createdBy",
          "id",
          "investigationName",
          "notFoundRecordIds",
          "results",
          "searchCriteria"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "guid"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "createdBy": {
            "type": "integer",
            "format": "int32"
          },
          "searchCriteria": {
            "$ref": "#/components/schemas/InvestigationQuery"
          },
          "scheduleId": {
            "type": "string",
            "format": "guid"
          },
          "profileId": {
            "type": "string",
            "format": "guid"
          },
          "profileName": {
            "type": "string"
          },
          "alertsCount": {
            "type": "integer",
            "format": "int32"
          },
          "currentAlert": {
            "$ref": "#/components/schemas/InvestigationAlert"
          },
          "results": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Record"
            }
          },
          "notFoundRecordIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64"
            }
          },
          "investigationName": {
            "type": "string"
          }
        }
      },
      "Investigation_Query": {
        "required": [
          "screeningThreshold",
          "searchName",
          "type"
        ],
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/schemas/InvestigationType"
          },
          "name": {
            "type": "string"
          },
          "houseNo": {
            "type": "string"
          },
          "street": {
            "type": "string"
          },
          "province": {
            "type": "string"
          },
          "city": {
            "type": "string"
          },
          "postCode": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "middleName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "generation": {
            "type": "string"
          },
          "dateOfBirth": {
            "type": "string"
          },
          "nationalId": {
            "type": "string"
          },
          "citizenship": {
            "type": "string"
          },
          "phoneNo": {
            "type": "string"
          },
          "gender": {
            "$ref": "#/components/schemas/GenderType"
          },
          "searchName": {
            "type": "string"
          },
          "screeningThreshold": {
            "type": "integer",
            "format": "int32"
          },
          "source": {
            "$ref": "#/components/schemas/SourceType"
          }
        }
      },
      "MODEL5bb0b0": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Provides further information on why the request was rejected"
          }
        }
      },
      "ConnectErrorResponsesBadRequest": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string",
            "description": "Provides further information on why the request was rejected"
          }
        }
      },
      "ConnectErrorResponsesInvalidToken": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string"
          }
        },
        "description": "Authorization Token has either expired or is not a valid Connect"
      },
      "Connect.Protect.ErrorResponsesAccessForbidden": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "description": "Simple access forbidden message error response"
      },
      "ArrayOfConnectDataCleaningJob": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConnectDataCleaningJob"
        }
      },
      "ConnectDataCleaningJob": {
        "type": "object",
        "properties": {
          "id": {
            "description": "ID number associated to the created job - used for future searches",
            "type": "string"
          },
          "name": {
            "description": "The name associated to the 'Job Number' created by the user in the 'POST - Create Job Request'",
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAT": {
            "type": "string",
            "format": "date-time"
          },
          "managingUserId": {
            "type": "integer"
          },
          "managingCustomerId": {
            "type": "integer"
          },
          "owningCustomerId": {
            "type": "integer"
          },
          "owningUserId": {
            "type": "integer"
          },
          "status": {
            "type": "string",
            "enum": [
              "created",
              "uploading",
              "uploadError",
              "uploaded",
              "ready",
              "matching",
              "matchingError",
              "matched",
              "addingToPortfolio",
              "addedToPortfolio",
              "addedToPortfolioError",
              "aggregating",
              "aggregatingComplete",
              "aggregatingError",
              "enriching",
              "enrichmentError",
              "enriched",
              "transformFileError",
              "generateTrilliumFileError",
              "jobMatchingCompletionError",
              "jobMatchingComplete",
              "readyForEnriching",
              "enrichmentComplete",
              "enrichmentCompletionError",
              "pdfGenerationError"
            ]
          },
          "countryCode": {
            "description": "Available after Enrichment",
            "type": "string"
          },
          "portfolioId": {
            "type": "string",
            "description": "Available after Enrichment"
          },
          "source": {
            "type": "string",
            "enum": [
              "dataCleaning",
              "prospects"
            ]
          },
          "jobSummary": {
            "description": "Available after Enrichment",
            "type": "object",
            "properties": {
              "totalRows": {
                "type": "integer"
              },
              "matched": {
                "type": "integer"
              },
              "manualMatched": {
                "type": "integer"
              },
              "unmatched": {
                "type": "integer"
              },
              "duplicates": {
                "type": "integer"
              }
            }
          },
          "jobEnrichmentSettings": {
            "description": "Available after Enrichment",
            "type": "object",
            "properties": {
              "creditType": {
                "type": "string"
              }
            }
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "ConnectDataCleaningCreateJobRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "The name associated to the Data Cleaning job created by the user in the 'POST - Create Job Request'"
          }
        }
      },
      "ConnectDataCleaningArchiveJobRequest": {
        "type": "object"
      },
      "ConnectDataCleaningEnrichRequest": {
        "type": "object"
      },
      "ConnectDataCleaningUpdateMappingsRequest": {
        "type": "object",
        "required": [
          "mappings"
        ],
        "properties": {
          "mappings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JobMappingDto"
            }
          }
        }
      },
      "JobMappingDto": {
        "type": "object",
        "required": [
          "mapping",
          "value"
        ],
        "properties": {
          "mapping": {
            "type": "string",
            "enum": [
              "companyId",
              "orgNumber",
              "name",
              "tradingName",
              "aliasName",
              "previousName",
              "phone",
              "email",
              "address1",
              "address2",
              "address3",
              "town",
              "postcode",
              "region",
              "country",
              "countryCode",
              "vatNumber",
              "taxCode",
              "personalID",
              "personalLimit"
            ]
          },
          "value": {
            "type": "string",
            "description": "Value follows array indexing, meaning each column is identified by number, starting at 0 "
          }
        },
        "example": {
          "mapping": "name",
          "value": "0"
        }
      },
      "ConnectDataCleaningSubmitJobRequest": {
        "type": "object"
      },
      "ArrayOfConnectDataCleaningResponse": {
        "type": "array",
        "items": {
          "$ref": "#/components/schemas/ConnectDataCleaningResponse"
        }
      },
      "ConnectMonitoringCreatePortfolioRequest": {
        "type": "object",
        "required": [
          "name"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "isDefault": {
            "type": "boolean"
          },
          "emails": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "emailAddress": {
                  "type": "string"
                }
              }
            }
          },
          "emailSubject": {
            "type": "string"
          },
          "emailLanguage": {
            "type": "string"
          },
          "frequency": {
            "type": "string"
          },
          "webhookUrl": {
            "type": "string"
          },
          "webhookEnabled": {
            "type": "boolean"
          }
        }
      },
      "MODEL5bdbb3": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MODEL28cf8d": {
        "type": "object",
        "required": [
          "hasHeader",
          "jobFile"
        ],
        "properties": {
          "jobFile": {
            "type": "string",
            "format": "binary",
            "description": "The file to be uploaded"
          },
          "hasHeader": {
            "type": "boolean",
            "description": "Indicates if the file has a header row"
          }
        }
      },
      "MODEL4f561c": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MODELf6df8e": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MODEL8790cc": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MODELcebf3b": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MODELcf4983": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MODEL5b4b1c": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "MODEL7c8060": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ConnectDataCleaningResponse": {
        "type": "object"
      },
      "ConnectDataCleaningArchiveResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "createdAt": {
            "type": "string"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "managingUserId": {
            "type": "integer"
          },
          "managingCustomerId": {
            "type": "integer"
          },
          "owningCustomerId": {
            "type": "integer"
          },
          "owningUserId": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "countryCode": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "jobEnrichmentSettings": {
            "$ref": "#/components/schemas/jobEnrichmentSettings"
          },
          "archived": {
            "type": "boolean"
          }
        }
      },
      "jobEnrichmentSettings": {
        "type": "object",
        "properties": {
          "creditType": {
            "type": "string"
          }
        }
      },
      "ConnectDataCleaningMappingResponse": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "mapping": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "example": [
          {
            "mapping": "name",
            "value": "0"
          }
        ]
      },
      "ConnectDataCleaningUploadResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "sourceFilename": {
            "type": "string"
          },
          "hasHeader": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "modifiedAt": {
            "type": "string",
            "format": "date-time"
          },
          "managingUserId": {
            "type": "integer"
          },
          "managingCustomerId": {
            "type": "integer"
          },
          "status": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          }
        }
      },
      "ConnectErrorResponsesAccessForbidden": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        },
        "description": "Simple access forbidden message error response"
      },
      "ConnectErrorResponsesResourceNotFoundRequest": {
        "type": "object",
        "description": "",
        "properties": {
          "correlationId": {
            "description": "The unique identifier. (A UUID specified by RFC4122).",
            "type": "string",
            "format": "uuid"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string",
            "description": "Provides further information on why the request was rejected"
          }
        }
      },
      "basic": {
        "type": "object",
        "properties": {
          "enrichments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "enrichment": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "enrichments": [
            {
              "enrichment": "general.safeNumber"
            },
            {
              "enrichment": "general.connectId"
            },
            {
              "enrichment": "general.ggsId"
            },
            {
              "enrichment": "general.companyName"
            },
            {
              "enrichment": "general.companyId"
            },
            {
              "enrichment": "general.companyNameKanji"
            },
            {
              "enrichment": "general.companyNameKana"
            },
            {
              "enrichment": "general.aliasName"
            },
            {
              "enrichment": "general.tradeName"
            },
            {
              "enrichment": "general.tradeNumber"
            },
            {
              "enrichment": "general.acronym"
            },
            {
              "enrichment": "general.organisationNumber"
            },
            {
              "enrichment": "general.legalRegistrationNumber"
            },
            {
              "enrichment": "general.siret"
            },
            {
              "enrichment": "general.siren"
            },
            {
              "enrichment": "general.companyNumber"
            },
            {
              "enrichment": "general.kvkNumber"
            },
            {
              "enrichment": "contact.eircode"
            },
            {
              "enrichment": "contact.country"
            },
            {
              "enrichment": "contact.mailing.city"
            },
            {
              "enrichment": "general.companyType"
            },
            {
              "enrichment": "general.companyTypeDesc.en"
            },
            {
              "enrichment": "general.legalName"
            },
            {
              "enrichment": "general.legalNameAlt"
            },
            {
              "enrichment": "general.rsin"
            },
            {
              "enrichment": "general.tradingName"
            },
            {
              "enrichment": "general.regDeletionNumber"
            },
            {
              "enrichment": "general.pattern"
            },
            {
              "enrichment": "general.banding"
            },
            {
              "enrichment": "general.bandingDesc"
            },
            {
              "enrichment": "general.rowNumber"
            },
            {
              "enrichment": "general.duplicate"
            },
            {
              "enrichment": "general.duplicateId"
            },
            {
              "enrichment": "contact.city"
            }
          ]
        }
      },
      "basicPlus": {
        "type": "object",
        "properties": {
          "enrichments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "enrichment": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "enrichments": [
            {
              "enrichment": "general.safeNumber"
            },
            {
              "enrichment": "general.connectId"
            },
            {
              "enrichment": "general.ggsId"
            },
            {
              "enrichment": "general.companyName"
            },
            {
              "enrichment": "general.companyId"
            },
            {
              "enrichment": "general.companyNameKanji"
            },
            {
              "enrichment": "general.companyNameKana"
            },
            {
              "enrichment": "general.aliasName"
            },
            {
              "enrichment": "general.tradeName"
            },
            {
              "enrichment": "general.tradeNumber"
            },
            {
              "enrichment": "general.acronym"
            },
            {
              "enrichment": "general.organisationNumber"
            },
            {
              "enrichment": "general.legalRegistrationNumber"
            },
            {
              "enrichment": "general.siret"
            },
            {
              "enrichment": "general.siren"
            },
            {
              "enrichment": "general.companyNumber"
            },
            {
              "enrichment": "general.kvkNumber"
            },
            {
              "enrichment": "contact.eircode"
            },
            {
              "enrichment": "contact.country"
            },
            {
              "enrichment": "contact.mailing.city"
            },
            {
              "enrichment": "general.companyType"
            },
            {
              "enrichment": "general.companyTypeDesc.en"
            },
            {
              "enrichment": "general.legalName"
            },
            {
              "enrichment": "general.legalNameAlt"
            },
            {
              "enrichment": "general.rsin"
            },
            {
              "enrichment": "general.tradingName"
            },
            {
              "enrichment": "general.regDeletionNumber"
            },
            {
              "enrichment": "general.pattern"
            },
            {
              "enrichment": "general.banding"
            },
            {
              "enrichment": "general.bandingDesc"
            },
            {
              "enrichment": "general.rowNumber"
            },
            {
              "enrichment": "general.duplicate"
            },
            {
              "enrichment": "general.duplicateId"
            },
            {
              "enrichment": "contact.city"
            },
            {
              "enrichment": "general.taxCode"
            },
            {
              "enrichment": "general.vatNumber"
            },
            {
              "enrichment": "general.vatLiable"
            },
            {
              "enrichment": "general.principalActivity"
            },
            {
              "enrichment": "general.principalActivity2"
            },
            {
              "enrichment": "general.principalActivity3"
            },
            {
              "enrichment": "general.principalActivity4"
            },
            {
              "enrichment": "general.principalActivity5"
            },
            {
              "enrichment": "general.statusDesc.en"
            },
            {
              "enrichment": "contact.addressLine1"
            },
            {
              "enrichment": "contact.addressLine3"
            },
            {
              "enrichment": "contact.addressLine4"
            },
            {
              "enrichment": "contact.addressLine5"
            },
            {
              "enrichment": "contact.addressLine6"
            },
            {
              "enrichment": "contact.streetName"
            },
            {
              "enrichment": "contact.houseNumber"
            },
            {
              "enrichment": "contact.state"
            },
            {
              "enrichment": "contact.postBox"
            },
            {
              "enrichment": "contact.zip4"
            },
            {
              "enrichment": "contact.region"
            },
            {
              "enrichment": "contact.municipality"
            },
            {
              "enrichment": "contact.province"
            },
            {
              "enrichment": "contact.mailing.addressLine1"
            },
            {
              "enrichment": "contact.mailing.addressLine2"
            },
            {
              "enrichment": "contact.mailing.addressLine3"
            },
            {
              "enrichment": "contact.mailing.addressLine4"
            },
            {
              "enrichment": "contact.mailing.streetName"
            },
            {
              "enrichment": "contact.mailing.houseNumber"
            },
            {
              "enrichment": "contact.mailing.province"
            },
            {
              "enrichment": "contact.mailing.postalCode"
            },
            {
              "enrichment": "contact.nonMailingIndicator"
            },
            {
              "enrichment": "contact.officeAddress1"
            },
            {
              "enrichment": "contact.officeAddress2"
            },
            {
              "enrichment": "contact.officeAddress3"
            },
            {
              "enrichment": "contact.addressType"
            },
            {
              "enrichment": "contact.paf.addressLine1"
            },
            {
              "enrichment": "contact.paf.addressLine2"
            },
            {
              "enrichment": "contact.paf.addressLine3"
            },
            {
              "enrichment": "contact.paf.addressLine4"
            },
            {
              "enrichment": "contact.paf.postalCode"
            },
            {
              "enrichment": "general.locationType"
            },
            {
              "enrichment": "contact.contactPhone"
            },
            {
              "enrichment": "contact.tps"
            },
            {
              "enrichment": "contact.marketingAllowed"
            },
            {
              "enrichment": "contact.fax"
            },
            {
              "enrichment": "contact.specialDistribution"
            },
            {
              "enrichment": "contact.additionToAddress"
            },
            {
              "enrichment": "general.activityCode"
            },
            {
              "enrichment": "general.activityCodeDesc.en"
            },
            {
              "enrichment": "general.activityCodeDesc.jp"
            },
            {
              "enrichment": "general.activityCodeDesc.it"
            },
            {
              "enrichment": "general.activityCodeDesc.fr"
            },
            {
              "enrichment": "general.activityCodeDesc.se"
            },
            {
              "enrichment": "general.activityCodeDesc.de"
            },
            {
              "enrichment": "general.activityCode2"
            },
            {
              "enrichment": "general.activityCode2Desc.en"
            },
            {
              "enrichment": "general.activityCode2Desc.jp"
            },
            {
              "enrichment": "general.activityCode3"
            },
            {
              "enrichment": "general.activityCode3Desc.en"
            },
            {
              "enrichment": "general.sectorCode"
            },
            {
              "enrichment": "general.legalForm"
            },
            {
              "enrichment": "general.legalFormCategory"
            },
            {
              "enrichment": "general.legalFormDetails"
            },
            {
              "enrichment": "general.legalFormDesc.en"
            },
            {
              "enrichment": "general.legalFormDesc.it"
            },
            {
              "enrichment": "general.legalFormDesc.nl"
            },
            {
              "enrichment": "general.legalFormDesc.fr"
            },
            {
              "enrichment": "general.legalFormDesc.de"
            },
            {
              "enrichment": "general.legalFormDesc.no"
            },
            {
              "enrichment": "general.naicsCode"
            },
            {
              "enrichment": "general.naicsCodeDesc.en"
            },
            {
              "enrichment": "general.website"
            },
            {
              "enrichment": "contact.email"
            },
            {
              "enrichment": "general.establishDate"
            },
            {
              "enrichment": "general.registrationDate"
            },
            {
              "enrichment": "general.registrationLocation"
            },
            {
              "enrichment": "general.employees"
            },
            {
              "enrichment": "general.workforceCode"
            },
            {
              "enrichment": "general.workforceCodeDesc.en"
            },
            {
              "enrichment": "general.workforceCodeDesc.fr"
            },
            {
              "enrichment": "general.minimalWorkforceRange"
            },
            {
              "enrichment": "general.annualSales"
            },
            {
              "enrichment": "general.juridicalForm"
            },
            {
              "enrichment": "general.juridicalFormDesc.en"
            },
            {
              "enrichment": "general.juridicalFormDesc.fr"
            },
            {
              "enrichment": "general.juridicalFormDesc.nl"
            },
            {
              "enrichment": "general.status"
            },
            {
              "enrichment": "general.statusDesc.fr"
            },
            {
              "enrichment": "general.statusDesc.nl"
            },
            {
              "enrichment": "general.statusDescShort.en"
            },
            {
              "enrichment": "general.statusDescShort.fr"
            },
            {
              "enrichment": "general.active"
            },
            {
              "enrichment": "financials.shareCapital"
            },
            {
              "enrichment": "financials.bankName"
            },
            {
              "enrichment": "financials.shareCapitalCurrency"
            },
            {
              "enrichment": "financials.bankCode"
            },
            {
              "enrichment": "general.sosFederalTaxId"
            },
            {
              "enrichment": "general.sosCharterNo"
            },
            {
              "enrichment": "general.sosStatus"
            },
            {
              "enrichment": "general.incorporatedState"
            },
            {
              "enrichment": "general.sosAddress"
            },
            {
              "enrichment": "general.sosCity"
            },
            {
              "enrichment": "general.sosState"
            },
            {
              "enrichment": "general.sosZip"
            },
            {
              "enrichment": "general.sosZip4"
            },
            {
              "enrichment": "general.incorporationDate"
            },
            {
              "enrichment": "group.parent.siret"
            },
            {
              "enrichment": "group.parent.siren"
            },
            {
              "enrichment": "group.ultimateParent.siren"
            },
            {
              "enrichment": "general.importFlag"
            },
            {
              "enrichment": "general.exportFlag"
            },
            {
              "enrichment": "general.ltdNonLtdFlag"
            },
            {
              "enrichment": "general.priority"
            },
            {
              "enrichment": "general.activityCodeDesc.nl"
            },
            {
              "enrichment": "general.mainOfficeFlag"
            },
            {
              "enrichment": "general.yearsTrading"
            },
            {
              "enrichment": "general.foundingDeedDate"
            },
            {
              "enrichment": "general.continuanceDate"
            },
            {
              "enrichment": "general.discontinuanceDate"
            },
            {
              "enrichment": "general.mortgages.partiallySatisfied"
            },
            {
              "enrichment": "general.mortgages.satisfied"
            },
            {
              "enrichment": "general.mortgages.outstanding"
            },
            {
              "enrichment": "general.mortgages.total"
            },
            {
              "enrichment": "general.managerType"
            },
            {
              "enrichment": "general.managerTypeDesc.en"
            },
            {
              "enrichment": "general.managerTypeDesc.fr"
            },
            {
              "enrichment": "financials.consolidationCode"
            },
            {
              "enrichment": "contact.addressLine2"
            },
            {
              "enrichment": "contact.postalCode"
            }
          ]
        }
      },
      "standard": {
        "type": "object",
        "properties": {
          "enrichments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "enrichment": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "enrichments": [
            {
              "enrichment": "general.safeNumber"
            },
            {
              "enrichment": "general.connectId"
            },
            {
              "enrichment": "general.ggsId"
            },
            {
              "enrichment": "general.companyName"
            },
            {
              "enrichment": "general.companyId"
            },
            {
              "enrichment": "general.companyNameKanji"
            },
            {
              "enrichment": "general.companyNameKana"
            },
            {
              "enrichment": "general.aliasName"
            },
            {
              "enrichment": "general.tradeName"
            },
            {
              "enrichment": "general.tradeNumber"
            },
            {
              "enrichment": "general.acronym"
            },
            {
              "enrichment": "general.organisationNumber"
            },
            {
              "enrichment": "general.legalRegistrationNumber"
            },
            {
              "enrichment": "general.siret"
            },
            {
              "enrichment": "general.siren"
            },
            {
              "enrichment": "general.companyNumber"
            },
            {
              "enrichment": "general.kvkNumber"
            },
            {
              "enrichment": "contact.eircode"
            },
            {
              "enrichment": "contact.country"
            },
            {
              "enrichment": "contact.mailing.city"
            },
            {
              "enrichment": "general.companyType"
            },
            {
              "enrichment": "general.companyTypeDesc.en"
            },
            {
              "enrichment": "general.legalName"
            },
            {
              "enrichment": "general.legalNameAlt"
            },
            {
              "enrichment": "general.rsin"
            },
            {
              "enrichment": "general.tradingName"
            },
            {
              "enrichment": "general.regDeletionNumber"
            },
            {
              "enrichment": "general.pattern"
            },
            {
              "enrichment": "general.banding"
            },
            {
              "enrichment": "general.bandingDesc"
            },
            {
              "enrichment": "general.rowNumber"
            },
            {
              "enrichment": "general.duplicate"
            },
            {
              "enrichment": "general.duplicateId"
            },
            {
              "enrichment": "contact.city"
            },
            {
              "enrichment": "general.taxCode"
            },
            {
              "enrichment": "general.vatNumber"
            },
            {
              "enrichment": "general.vatLiable"
            },
            {
              "enrichment": "general.principalActivity"
            },
            {
              "enrichment": "general.principalActivity2"
            },
            {
              "enrichment": "general.principalActivity3"
            },
            {
              "enrichment": "general.principalActivity4"
            },
            {
              "enrichment": "general.principalActivity5"
            },
            {
              "enrichment": "general.statusDesc.en"
            },
            {
              "enrichment": "contact.addressLine1"
            },
            {
              "enrichment": "contact.addressLine3"
            },
            {
              "enrichment": "contact.addressLine4"
            },
            {
              "enrichment": "contact.addressLine5"
            },
            {
              "enrichment": "contact.addressLine6"
            },
            {
              "enrichment": "contact.streetName"
            },
            {
              "enrichment": "contact.houseNumber"
            },
            {
              "enrichment": "contact.state"
            },
            {
              "enrichment": "contact.postBox"
            },
            {
              "enrichment": "contact.zip4"
            },
            {
              "enrichment": "contact.region"
            },
            {
              "enrichment": "contact.municipality"
            },
            {
              "enrichment": "contact.province"
            },
            {
              "enrichment": "contact.mailing.addressLine1"
            },
            {
              "enrichment": "contact.mailing.addressLine2"
            },
            {
              "enrichment": "contact.mailing.addressLine3"
            },
            {
              "enrichment": "contact.mailing.addressLine4"
            },
            {
              "enrichment": "contact.mailing.streetName"
            },
            {
              "enrichment": "contact.mailing.houseNumber"
            },
            {
              "enrichment": "contact.mailing.province"
            },
            {
              "enrichment": "contact.mailing.postalCode"
            },
            {
              "enrichment": "contact.nonMailingIndicator"
            },
            {
              "enrichment": "contact.officeAddress1"
            },
            {
              "enrichment": "contact.officeAddress2"
            },
            {
              "enrichment": "contact.officeAddress3"
            },
            {
              "enrichment": "contact.addressType"
            },
            {
              "enrichment": "contact.paf.addressLine1"
            },
            {
              "enrichment": "contact.paf.addressLine2"
            },
            {
              "enrichment": "contact.paf.addressLine3"
            },
            {
              "enrichment": "contact.paf.addressLine4"
            },
            {
              "enrichment": "contact.paf.postalCode"
            },
            {
              "enrichment": "general.locationType"
            },
            {
              "enrichment": "contact.contactPhone"
            },
            {
              "enrichment": "contact.tps"
            },
            {
              "enrichment": "contact.marketingAllowed"
            },
            {
              "enrichment": "contact.fax"
            },
            {
              "enrichment": "contact.specialDistribution"
            },
            {
              "enrichment": "contact.additionToAddress"
            },
            {
              "enrichment": "general.activityCode"
            },
            {
              "enrichment": "general.activityCodeDesc.en"
            },
            {
              "enrichment": "general.activityCodeDesc.jp"
            },
            {
              "enrichment": "general.activityCodeDesc.it"
            },
            {
              "enrichment": "general.activityCodeDesc.fr"
            },
            {
              "enrichment": "general.activityCodeDesc.se"
            },
            {
              "enrichment": "general.activityCodeDesc.de"
            },
            {
              "enrichment": "general.activityCode2"
            },
            {
              "enrichment": "general.activityCode2Desc.en"
            },
            {
              "enrichment": "general.activityCode2Desc.jp"
            },
            {
              "enrichment": "general.activityCode3"
            },
            {
              "enrichment": "general.activityCode3Desc.en"
            },
            {
              "enrichment": "general.sectorCode"
            },
            {
              "enrichment": "general.legalForm"
            },
            {
              "enrichment": "general.legalFormCategory"
            },
            {
              "enrichment": "general.legalFormDetails"
            },
            {
              "enrichment": "general.legalFormDesc.en"
            },
            {
              "enrichment": "general.legalFormDesc.it"
            },
            {
              "enrichment": "general.legalFormDesc.nl"
            },
            {
              "enrichment": "general.legalFormDesc.fr"
            },
            {
              "enrichment": "general.legalFormDesc.de"
            },
            {
              "enrichment": "general.legalFormDesc.no"
            },
            {
              "enrichment": "general.naicsCode"
            },
            {
              "enrichment": "general.naicsCodeDesc.en"
            },
            {
              "enrichment": "general.website"
            },
            {
              "enrichment": "contact.email"
            },
            {
              "enrichment": "general.establishDate"
            },
            {
              "enrichment": "general.registrationDate"
            },
            {
              "enrichment": "general.registrationLocation"
            },
            {
              "enrichment": "general.employees"
            },
            {
              "enrichment": "general.workforceCode"
            },
            {
              "enrichment": "general.workforceCodeDesc.en"
            },
            {
              "enrichment": "general.workforceCodeDesc.fr"
            },
            {
              "enrichment": "general.minimalWorkforceRange"
            },
            {
              "enrichment": "general.annualSales"
            },
            {
              "enrichment": "general.juridicalForm"
            },
            {
              "enrichment": "general.juridicalFormDesc.en"
            },
            {
              "enrichment": "general.juridicalFormDesc.fr"
            },
            {
              "enrichment": "general.juridicalFormDesc.nl"
            },
            {
              "enrichment": "general.status"
            },
            {
              "enrichment": "general.statusDesc.fr"
            },
            {
              "enrichment": "general.statusDesc.nl"
            },
            {
              "enrichment": "general.statusDescShort.en"
            },
            {
              "enrichment": "general.statusDescShort.fr"
            },
            {
              "enrichment": "general.active"
            },
            {
              "enrichment": "financials.shareCapital"
            },
            {
              "enrichment": "financials.bankName"
            },
            {
              "enrichment": "financials.shareCapitalCurrency"
            },
            {
              "enrichment": "financials.bankCode"
            },
            {
              "enrichment": "general.sosFederalTaxId"
            },
            {
              "enrichment": "general.sosCharterNo"
            },
            {
              "enrichment": "general.sosStatus"
            },
            {
              "enrichment": "general.incorporatedState"
            },
            {
              "enrichment": "general.sosAddress"
            },
            {
              "enrichment": "general.sosCity"
            },
            {
              "enrichment": "general.sosState"
            },
            {
              "enrichment": "general.sosZip"
            },
            {
              "enrichment": "general.sosZip4"
            },
            {
              "enrichment": "general.incorporationDate"
            },
            {
              "enrichment": "group.parent.siret"
            },
            {
              "enrichment": "group.parent.siren"
            },
            {
              "enrichment": "group.ultimateParent.siren"
            },
            {
              "enrichment": "general.importFlag"
            },
            {
              "enrichment": "general.exportFlag"
            },
            {
              "enrichment": "general.ltdNonLtdFlag"
            },
            {
              "enrichment": "general.priority"
            },
            {
              "enrichment": "general.activityCodeDesc.nl"
            },
            {
              "enrichment": "general.mainOfficeFlag"
            },
            {
              "enrichment": "general.yearsTrading"
            },
            {
              "enrichment": "general.foundingDeedDate"
            },
            {
              "enrichment": "general.continuanceDate"
            },
            {
              "enrichment": "general.discontinuanceDate"
            },
            {
              "enrichment": "general.mortgages.partiallySatisfied"
            },
            {
              "enrichment": "general.mortgages.satisfied"
            },
            {
              "enrichment": "general.mortgages.outstanding"
            },
            {
              "enrichment": "general.mortgages.total"
            },
            {
              "enrichment": "general.managerType"
            },
            {
              "enrichment": "general.managerTypeDesc.en"
            },
            {
              "enrichment": "general.managerTypeDesc.fr"
            },
            {
              "enrichment": "financials.consolidationCode"
            },
            {
              "enrichment": "contact.addressLine2"
            },
            {
              "enrichment": "contact.postalCode"
            },
            {
              "enrichment": "general.federalTaxId"
            },
            {
              "enrichment": "general.inactivityDate"
            },
            {
              "enrichment": "negatives.legalFilings"
            },
            {
              "enrichment": "negatives.uccCount"
            },
            {
              "enrichment": "negatives.lienCount"
            },
            {
              "enrichment": "negatives.lienAmount"
            },
            {
              "enrichment": "negatives.lienDate"
            },
            {
              "enrichment": "negatives.suitCount"
            },
            {
              "enrichment": "negatives.suitAmount"
            },
            {
              "enrichment": "negatives.suitDate"
            },
            {
              "enrichment": "negatives.bankruptcyCount"
            },
            {
              "enrichment": "negatives.bankruptcyAmount"
            },
            {
              "enrichment": "negatives.bankruptcyDate"
            },
            {
              "enrichment": "negatives.judgementCount"
            },
            {
              "enrichment": "negatives.judgementAmount"
            },
            {
              "enrichment": "negatives.judgementDate"
            },
            {
              "enrichment": "negatives.chequeCount"
            },
            {
              "enrichment": "negatives.chequeAmount"
            },
            {
              "enrichment": "negatives.chequeDate"
            },
            {
              "enrichment": "negatives.otherItemCount"
            },
            {
              "enrichment": "negatives.otherItemAmount"
            },
            {
              "enrichment": "negatives.otherItemDate"
            },
            {
              "enrichment": "negatives.uccCautionaryCount"
            },
            {
              "enrichment": "negatives.legalFilingsAmount"
            },
            {
              "enrichment": "negatives.ofacFlag"
            },
            {
              "enrichment": "negatives.ccjCount"
            },
            {
              "enrichment": "negatives.ccjValue"
            },
            {
              "enrichment": "financials.pretaxNetOperatingIncome"
            },
            {
              "enrichment": "financials.extraordinaryIncome"
            },
            {
              "enrichment": "financials.extraordinaryCharges"
            },
            {
              "enrichment": "financials.extraordinaryProfitLoss"
            },
            {
              "enrichment": "financials.tradingMargin"
            },
            {
              "enrichment": "financials.addedValue"
            },
            {
              "enrichment": "financials.grossOperatingSurplus"
            },
            {
              "enrichment": "financials.balance.period1Late"
            },
            {
              "enrichment": "financials.balance.period2Late"
            },
            {
              "enrichment": "financials.balance.period3Late"
            },
            {
              "enrichment": "financials.lastUpdateDate"
            },
            {
              "enrichment": "financials.closureDate"
            },
            {
              "enrichment": "financials.accountPeriodInMonths"
            },
            {
              "enrichment": "financials.capitalNotCalled"
            },
            {
              "enrichment": "financials.financialAssets"
            },
            {
              "enrichment": "financialsNonConsolidated.financialAssets"
            },
            {
              "enrichment": "financials.netCurrentAssets"
            },
            {
              "enrichment": "financials.advancedPayments"
            },
            {
              "enrichment": "financials.receivables"
            },
            {
              "enrichment": "financials.securitiesAndCash"
            },
            {
              "enrichment": "financials.prepaidExpenses"
            },
            {
              "enrichment": "financialsNonConsolidated.prepaidExpenses"
            },
            {
              "enrichment": "financials.shareholdersEquity"
            },
            {
              "enrichment": "financials.otherCapitalResources"
            },
            {
              "enrichment": "financials.riskProvisions"
            },
            {
              "enrichment": "financials.liabilities"
            },
            {
              "enrichment": "financialsNonConsolidated.liabilities"
            },
            {
              "enrichment": "financials.financialLiabilities"
            },
            {
              "enrichment": "financials.advancedPaymentsReceived"
            },
            {
              "enrichment": "financials.tradeAccountPayables"
            },
            {
              "enrichment": "financials.taxAndSocialLiabilities"
            },
            {
              "enrichment": "financials.currency"
            },
            {
              "enrichment": "financialsNonConsolidated.currency"
            },
            {
              "enrichment": "financials.otherDebtsAndFixedAssets"
            },
            {
              "enrichment": "financials.accountsRegularisation"
            },
            {
              "enrichment": "financials.salesOfGoods"
            },
            {
              "enrichment": "financials.netTurnover"
            },
            {
              "enrichment": "financials.netExportTurnover"
            },
            {
              "enrichment": "financials.operatingCharges"
            },
            {
              "enrichment": "financials.financialProfit"
            },
            {
              "enrichment": "financials.accountsOfRegularisation"
            },
            {
              "enrichment": "rating.current.date"
            },
            {
              "enrichment": "rating.current.score"
            },
            {
              "enrichment": "rating.current.description.en"
            },
            {
              "enrichment": "rating.current.description.nl"
            },
            {
              "enrichment": "rating.current.description.no"
            },
            {
              "enrichment": "rating.current.description.fr"
            },
            {
              "enrichment": "rating.current.description.jp"
            },
            {
              "enrichment": "rating.current.fullDescription.en"
            },
            {
              "enrichment": "rating.current.fullDescription.no"
            },
            {
              "enrichment": "rating.current.local"
            },
            {
              "enrichment": "rating.current.creditIndex"
            },
            {
              "enrichment": "rating.current.cds"
            },
            {
              "enrichment": "rating.current.pod"
            },
            {
              "enrichment": "limit.current.value"
            },
            {
              "enrichment": "limit.current.date"
            },
            {
              "enrichment": "rating.current.common"
            },
            {
              "enrichment": "rating.current.colour"
            },
            {
              "enrichment": "rating.previous.score"
            },
            {
              "enrichment": "rating.previous.description.en"
            },
            {
              "enrichment": "rating.previous.description.no"
            },
            {
              "enrichment": "rating.previous.fullDescription.en"
            },
            {
              "enrichment": "rating.previous.fullDescription.no"
            },
            {
              "enrichment": "rating.previous.date"
            },
            {
              "enrichment": "limit.previous.value"
            },
            {
              "enrichment": "limit.previous.date"
            },
            {
              "enrichment": "rating.previous.common"
            },
            {
              "enrichment": "rating.creditworthy"
            },
            {
              "enrichment": "financials.plAccountReserve"
            },
            {
              "enrichment": "financials.otherShortTermFinance"
            },
            {
              "enrichment": "financials.retainedProfit"
            },
            {
              "enrichment": "financials.reserves"
            },
            {
              "enrichment": "financials.debtorDays"
            },
            {
              "enrichment": "financials.bankOverdraftLtl"
            },
            {
              "enrichment": "financials.otherCurrentDebtors"
            },
            {
              "enrichment": "financials.paidShareCapital"
            },
            {
              "enrichment": "financials.preTaxProfitMargin"
            },
            {
              "enrichment": "financials.auditComments"
            },
            {
              "enrichment": "financials.bankers"
            },
            {
              "enrichment": "financials.bankBranchCode"
            },
            {
              "enrichment": "financials.dbt.current"
            },
            {
              "enrichment": "financials.dbt.previous"
            },
            {
              "enrichment": "financials.dbt.local"
            },
            {
              "enrichment": "financials.amortizationAndDepreciation"
            },
            {
              "enrichment": "financials.directorRemuneration"
            },
            {
              "enrichment": "financials.dividends"
            },
            {
              "enrichment": "financials.employeeCosts"
            },
            {
              "enrichment": "financials.employeePensionCosts"
            },
            {
              "enrichment": "financials.equityInPercentage"
            },
            {
              "enrichment": "financials.extraordinaryItems"
            },
            {
              "enrichment": "financials.financialCharges"
            },
            {
              "enrichment": "financials.financialFixedAssets"
            },
            {
              "enrichment": "financials.financialIncome"
            },
            {
              "enrichment": "financials.finishedGoods"
            },
            {
              "enrichment": "financials.intangibleFixedAssets"
            },
            {
              "enrichment": "financials.inventories"
            },
            {
              "enrichment": "financials.issuedShareCapital"
            },
            {
              "enrichment": "financials.landAndBuilding"
            },
            {
              "enrichment": "financials.operatingIncome"
            },
            {
              "enrichment": "financials.otherAmountsReceivable"
            },
            {
              "enrichment": "financials.otherEmployeeCosts"
            },
            {
              "enrichment": "financials.otherStocks"
            },
            {
              "enrichment": "financials.turnover"
            },
            {
              "enrichment": "financials.otherTangibleAssets"
            },
            {
              "enrichment": "financials.otherTermLiabilities"
            },
            {
              "enrichment": "financials.otherTermLoans"
            },
            {
              "enrichment": "financials.plantAndMachinery"
            },
            {
              "enrichment": "financials.preProfitMargin"
            },
            {
              "enrichment": "financials.profitBeforeTax"
            },
            {
              "enrichment": "financials.rawAndConsumables"
            },
            {
              "enrichment": "financials.resultsAfterTaxation"
            },
            {
              "enrichment": "financials.salesWorkingCapital"
            },
            {
              "enrichment": "financials.sharePremiumAccount"
            },
            {
              "enrichment": "financials.socialSecurityContributions"
            },
            {
              "enrichment": "financials.tangibleFixedAssets"
            },
            {
              "enrichment": "financials.totalOperatingExpenses"
            },
            {
              "enrichment": "financials.totalTermDebts"
            },
            {
              "enrichment": "financials.workInProgress"
            },
            {
              "enrichment": "financials.accountingDate"
            },
            {
              "enrichment": "financialsNonConsolidated.accountingDate"
            },
            {
              "enrichment": "financials.numberOfWeeks"
            },
            {
              "enrichment": "financialsNonConsolidated.numberOfWeeks"
            },
            {
              "enrichment": "financials.assets"
            },
            {
              "enrichment": "financialsNonConsolidated.assets"
            },
            {
              "enrichment": "financials.tradeUpdateDate"
            },
            {
              "enrichment": "financials.tradelines"
            },
            {
              "enrichment": "financials.fixedAssets"
            },
            {
              "enrichment": "financialsNonConsolidated.fixedAssets"
            },
            {
              "enrichment": "financials.currentAssets"
            },
            {
              "enrichment": "financialsNonConsolidated.currentAssets"
            },
            {
              "enrichment": "financials.inventory"
            },
            {
              "enrichment": "financialsNonConsolidated.inventory"
            },
            {
              "enrichment": "financials.receivablesAndOther"
            },
            {
              "enrichment": "financialsNonConsolidated.receivablesAndOther"
            },
            {
              "enrichment": "financials.therefromTradeReceivables"
            },
            {
              "enrichment": "financialsNonConsolidated.therefromTradeReceivables"
            },
            {
              "enrichment": "financials.securities"
            },
            {
              "enrichment": "financialsNonConsolidated.securities"
            },
            {
              "enrichment": "financials.liquidAssets"
            },
            {
              "enrichment": "financialsNonConsolidated.liquidAssets"
            },
            {
              "enrichment": "financials.deferedTax"
            },
            {
              "enrichment": "financialsNonConsolidated.deferedTax"
            },
            {
              "enrichment": "financials.activeDiffBetweenAssetAllocation"
            },
            {
              "enrichment": "financialsNonConsolidated.activeDiffBetweenAssetAllocation"
            },
            {
              "enrichment": "financials.deficitNcbCapital"
            },
            {
              "enrichment": "financialsNonConsolidated.deficitNcbCapital"
            },
            {
              "enrichment": "financials.deficitNcblLossCapital"
            },
            {
              "enrichment": "financialsNonConsolidated.deficitNcblLossCapital"
            },
            {
              "enrichment": "financials.balanceSheetTotalAssets"
            },
            {
              "enrichment": "financialsNonConsolidated.balanceSheetTotalAssets"
            },
            {
              "enrichment": "financials.equity"
            },
            {
              "enrichment": "financialsNonConsolidated.equity"
            },
            {
              "enrichment": "financials.subscribedCapital"
            },
            {
              "enrichment": "financialsNonConsolidated.subscribedCapital"
            },
            {
              "enrichment": "financials.privateAccount"
            },
            {
              "enrichment": "financialsNonConsolidated.privateAccount"
            },
            {
              "enrichment": "financials.sharesNcblUnlimitedPartners"
            },
            {
              "enrichment": "financialsNonConsolidated.sharesNcblUnlimitedPartners"
            },
            {
              "enrichment": "financials.sharesNcblLimitedPartners"
            },
            {
              "enrichment": "financialsNonConsolidated.sharesNcblLimitedPartners"
            },
            {
              "enrichment": "financials.fixedEquity"
            },
            {
              "enrichment": "financialsNonConsolidated.fixedEquity"
            },
            {
              "enrichment": "financials.variableEquity"
            },
            {
              "enrichment": "financialsNonConsolidated.variableEquity"
            },
            {
              "enrichment": "financials.balance.current"
            },
            {
              "enrichment": "financials.balance.1to30"
            },
            {
              "enrichment": "financials.balance.31to60"
            },
            {
              "enrichment": "financials.balance.61to90"
            },
            {
              "enrichment": "financials.balance.91plus"
            },
            {
              "enrichment": "financials.balance.total"
            },
            {
              "enrichment": "financials.capitalReserve"
            },
            {
              "enrichment": "financialsNonConsolidated.capitalReserve"
            },
            {
              "enrichment": "financials.revenueReserve"
            },
            {
              "enrichment": "financialsNonConsolidated.revenueReserve"
            },
            {
              "enrichment": "financials.retainedEarnings"
            },
            {
              "enrichment": "financialsNonConsolidated.retainedEarnings"
            },
            {
              "enrichment": "financials.balanceSheetNetIncome"
            },
            {
              "enrichment": "financialsNonConsolidated.balanceSheetNetIncome"
            },
            {
              "enrichment": "financials.accruals"
            },
            {
              "enrichment": "financialsNonConsolidated.accruals"
            },
            {
              "enrichment": "financials.therefromAccrualsPension"
            },
            {
              "enrichment": "financialsNonConsolidated.therefromAccrualsPension"
            },
            {
              "enrichment": "financials.therefromAccrualsTax"
            },
            {
              "enrichment": "financialsNonConsolidated.therefromAccrualsTax"
            },
            {
              "enrichment": "financials.therefromTradePayables"
            },
            {
              "enrichment": "financialsNonConsolidated.therefromTradePayables"
            },
            {
              "enrichment": "financials.defferedIncome"
            },
            {
              "enrichment": "financialsNonConsolidated.defferedIncome"
            },
            {
              "enrichment": "financials.defferedLiabilities"
            },
            {
              "enrichment": "financialsNonConsolidated.defferedLiabilities"
            },
            {
              "enrichment": "financials.balanceSheetTotal"
            },
            {
              "enrichment": "financialsNonConsolidated.balanceSheetTotal"
            },
            {
              "enrichment": "financials.inventoryChange"
            },
            {
              "enrichment": "financialsNonConsolidated.inventoryChange"
            },
            {
              "enrichment": "financials.ownWork"
            },
            {
              "enrichment": "financialsNonConsolidated.ownWork"
            },
            {
              "enrichment": "financials.otherOperationalRevenue"
            },
            {
              "enrichment": "financialsNonConsolidated.otherOperationalRevenue"
            },
            {
              "enrichment": "financials.materials"
            },
            {
              "enrichment": "financialsNonConsolidated.materials"
            },
            {
              "enrichment": "financials.staff"
            },
            {
              "enrichment": "financialsNonConsolidated.staff"
            },
            {
              "enrichment": "financials.amortisation"
            },
            {
              "enrichment": "financialsNonConsolidated.amortisation"
            },
            {
              "enrichment": "financials.otherCosts"
            },
            {
              "enrichment": "financialsNonConsolidated.otherCosts"
            },
            {
              "enrichment": "financials.profitLoss"
            },
            {
              "enrichment": "financialsNonConsolidated.profitLoss"
            },
            {
              "enrichment": "financials.profit"
            },
            {
              "enrichment": "financials.operationalResult"
            },
            {
              "enrichment": "financialsNonConsolidated.operationalResult"
            },
            {
              "enrichment": "financials.therefromOtherInterestSimilarIncome"
            },
            {
              "enrichment": "financialsNonConsolidated.therefromOtherInterestSimilarIncome"
            },
            {
              "enrichment": "financials.therefromInterestsSimilarExpenses"
            },
            {
              "enrichment": "financialsNonConsolidated.therefromInterestsSimilarExpenses"
            },
            {
              "enrichment": "financials.financialResult"
            },
            {
              "enrichment": "financialsNonConsolidated.financialResult"
            },
            {
              "enrichment": "financials.ordinaryOperationalResult"
            },
            {
              "enrichment": "financialsNonConsolidated.ordinaryOperationalResult"
            },
            {
              "enrichment": "financials.extraordinaryResult"
            },
            {
              "enrichment": "financialsNonConsolidated.extraordinaryResult"
            },
            {
              "enrichment": "financials.tax"
            },
            {
              "enrichment": "financialsNonConsolidated.tax"
            },
            {
              "enrichment": "financials.otherTaxes"
            },
            {
              "enrichment": "financialsNonConsolidated.otherTaxes"
            },
            {
              "enrichment": "financials.netIncome"
            },
            {
              "enrichment": "financialsNonConsolidated.netIncome"
            },
            {
              "enrichment": "financials.yearOfBalance"
            },
            {
              "enrichment": "financials.totalShareholdersEquity"
            },
            {
              "enrichment": "financials.totalOperatingIncome"
            },
            {
              "enrichment": "financials.salesRevenue"
            },
            {
              "enrichment": "financials.otherOperatingIncome"
            },
            {
              "enrichment": "financials.costOfStocks"
            },
            {
              "enrichment": "financials.changeInStock"
            },
            {
              "enrichment": "financials.changeInWorkInProgress"
            },
            {
              "enrichment": "financials.writeDownOfFixedAssets"
            },
            {
              "enrichment": "financials.otherOperatingExpenses"
            },
            {
              "enrichment": "financials.allocatedDividend"
            },
            {
              "enrichment": "financials.revenueSubsidiaries"
            },
            {
              "enrichment": "financials.revenueGroupCompanies"
            },
            {
              "enrichment": "financials.revenueAssociatedCompanies"
            },
            {
              "enrichment": "financials.interestIncomeGroup"
            },
            {
              "enrichment": "financials.otherInterestIncome"
            },
            {
              "enrichment": "financials.otherFinancialIncome"
            },
            {
              "enrichment": "financials.changeValueCurrentAssets"
            },
            {
              "enrichment": "financials.writedownsCurrentAssets"
            },
            {
              "enrichment": "financials.writedownsFixedAssets"
            },
            {
              "enrichment": "financials.otherInterestExpensesGroup"
            },
            {
              "enrichment": "financials.otherInterestExpenses"
            },
            {
              "enrichment": "financials.otherFinancialExpenses"
            },
            {
              "enrichment": "financials.otherFinancialCosts"
            },
            {
              "enrichment": "financials.financialExpenses"
            },
            {
              "enrichment": "financials.totalNetFinancialItems"
            },
            {
              "enrichment": "financials.netProfitLoss"
            },
            {
              "enrichment": "financials.taxOnExtraordinaryResult"
            },
            {
              "enrichment": "financials.minorityShare"
            },
            {
              "enrichment": "financials.netResultAfterDividends"
            },
            {
              "enrichment": "financials.groupContributions"
            },
            {
              "enrichment": "financials.allocationOtherEquity"
            },
            {
              "enrichment": "financials.totalTransfersAllocations"
            },
            {
              "enrichment": "financials.researchAndDevelopment"
            },
            {
              "enrichment": "financials.concessions"
            },
            {
              "enrichment": "financials.deferredTaxAsset"
            },
            {
              "enrichment": "financials.goodwillIntangibleAssets"
            },
            {
              "enrichment": "financials.otherIntangibleFixedAssets"
            },
            {
              "enrichment": "financials.landAndBuildings"
            },
            {
              "enrichment": "financials.shipsRigsAircraft"
            },
            {
              "enrichment": "financials.operatingEquipment"
            },
            {
              "enrichment": "financials.otherOperationFactors"
            },
            {
              "enrichment": "financials.totalTangibleAssets"
            },
            {
              "enrichment": "financials.sharesInvestmentSubsidiaries"
            },
            {
              "enrichment": "financials.investmentsInGroupCompanies"
            },
            {
              "enrichment": "financials.investmentsInAssociatedCompanies"
            },
            {
              "enrichment": "financials.investmentsInShares"
            },
            {
              "enrichment": "financials.bondsAndAccountsReceivables"
            },
            {
              "enrichment": "financials.pensionFunds"
            },
            {
              "enrichment": "financials.otherFinancialFixedAssets"
            },
            {
              "enrichment": "financials.bonds"
            },
            {
              "enrichment": "financials.otherReceivables"
            },
            {
              "enrichment": "financials.otherReceivables2"
            },
            {
              "enrichment": "financials.otherFixedAssets"
            },
            {
              "enrichment": "financials.rawMaterials"
            },
            {
              "enrichment": "financials.otherInventories"
            },
            {
              "enrichment": "financials.totalInventories"
            },
            {
              "enrichment": "financials.tradeReceivables"
            },
            {
              "enrichment": "financials.receivablesToCompInGroup"
            },
            {
              "enrichment": "financials.totalReceivable"
            },
            {
              "enrichment": "financials.sharesAndInterestsInGroup"
            },
            {
              "enrichment": "financials.quotedInvestmentShares"
            },
            {
              "enrichment": "financials.quotedBonds"
            },
            {
              "enrichment": "financials.otherMarkedBasedFinancial"
            },
            {
              "enrichment": "financials.otherFinancialInstr"
            },
            {
              "enrichment": "financials.otherInvestments"
            },
            {
              "enrichment": "financials.cashAndBankDeposits"
            },
            {
              "enrichment": "financials.totalFunds"
            },
            {
              "enrichment": "financials.ownShares"
            },
            {
              "enrichment": "financials.sharePremiumReserve"
            },
            {
              "enrichment": "financials.otherPaidInCapital"
            },
            {
              "enrichment": "financials.totalEquityDeposits"
            },
            {
              "enrichment": "financials.valuationReserve"
            },
            {
              "enrichment": "financials.otherEquity"
            },
            {
              "enrichment": "financials.minorityInterestsGroups"
            },
            {
              "enrichment": "financials.totalRetainedEarnings"
            },
            {
              "enrichment": "financials.otherReserves"
            },
            {
              "enrichment": "financials.longtermPensionCommitments"
            },
            {
              "enrichment": "financials.deferredTaxLiabilities"
            },
            {
              "enrichment": "financials.otherProvisions"
            },
            {
              "enrichment": "financials.totalProvisionsLiabilities"
            },
            {
              "enrichment": "financials.convertibleLoans"
            },
            {
              "enrichment": "financials.otherLongtermLoans"
            },
            {
              "enrichment": "financials.longtermLiabilitiesFinInst"
            },
            {
              "enrichment": "financials.longtermGroupContrLiabilities"
            },
            {
              "enrichment": "financials.liableLoanCapital"
            },
            {
              "enrichment": "financials.otherLongtermLiabilities"
            },
            {
              "enrichment": "financials.totalOtherLongtermLiabilities"
            },
            {
              "enrichment": "financials.convertibleLoan"
            },
            {
              "enrichment": "financials.certificateLoan"
            },
            {
              "enrichment": "financials.shorttermLiabilitiesFinInst"
            },
            {
              "enrichment": "financials.payableTax"
            },
            {
              "enrichment": "financials.specialGovernmentTaxes"
            },
            {
              "enrichment": "financials.suggestedDividend"
            },
            {
              "enrichment": "financials.shorttermLiabilitiesGroup"
            },
            {
              "enrichment": "financials.otherCreditors"
            },
            {
              "enrichment": "financials.totalLiabilitiesEquity"
            },
            {
              "enrichment": "financials.solvencyRatio"
            },
            {
              "enrichment": "financials.recentHighCredit"
            },
            {
              "enrichment": "financials.operatingProfit"
            },
            {
              "enrichment": "financials.depreciation"
            },
            {
              "enrichment": "financials.auditFees"
            },
            {
              "enrichment": "financials.currentRatio"
            },
            {
              "enrichment": "financials.netWorkingCapital"
            },
            {
              "enrichment": "financials.gearingRatio"
            },
            {
              "enrichment": "financials.creditorDays"
            },
            {
              "enrichment": "financials.liquidityAcidTest"
            },
            {
              "enrichment": "financials.returnOnCapitalEmployed"
            },
            {
              "enrichment": "financials.returnOnTotalAssetsEmployed"
            },
            {
              "enrichment": "financials.currentDebtRatio"
            },
            {
              "enrichment": "financials.totalDebtRatio"
            },
            {
              "enrichment": "financials.stockTurnoverRatio"
            },
            {
              "enrichment": "financials.returnOnNetAssetsEmployed"
            },
            {
              "enrichment": "financials.netCashflowFromOperations"
            },
            {
              "enrichment": "financials.netCashflowBeforeFinancing"
            },
            {
              "enrichment": "financials.netCashflowFromFinancing"
            },
            {
              "enrichment": "financials.auditorsQualification"
            },
            {
              "enrichment": "financials.auditors"
            },
            {
              "enrichment": "financials.capitalEmployed"
            },
            {
              "enrichment": "financials.contingentLiability"
            },
            {
              "enrichment": "financials.latestAccountDate"
            },
            {
              "enrichment": "financials.profitLossAccount"
            },
            {
              "enrichment": "financials.paidUpCapital"
            },
            {
              "enrichment": "financials.accountsType"
            },
            {
              "enrichment": "financials.accountsFrom"
            },
            {
              "enrichment": "financials.accountsTo"
            },
            {
              "enrichment": "financials.accountsMonths"
            },
            {
              "enrichment": "financials.preTaxMargin"
            },
            {
              "enrichment": "financials.retainedProfits"
            },
            {
              "enrichment": "financials.dividendsPayable"
            },
            {
              "enrichment": "financials.profitAfterTax"
            },
            {
              "enrichment": "financials.taxation"
            },
            {
              "enrichment": "financials.preTaxProfit"
            },
            {
              "enrichment": "financials.interestPayments"
            },
            {
              "enrichment": "financials.consolidatedAccounts"
            },
            {
              "enrichment": "financials.exports"
            },
            {
              "enrichment": "financials.costOfSales"
            },
            {
              "enrichment": "financials.grossProfit"
            },
            {
              "enrichment": "financialsNonConsolidated.grossProfit"
            },
            {
              "enrichment": "financials.wagesSalaries"
            },
            {
              "enrichment": "financials.directorsEmoluments"
            },
            {
              "enrichment": "negatives.totalCollectionAmount"
            },
            {
              "enrichment": "negatives.bankruptcy"
            },
            {
              "enrichment": "negatives.delinquencyCount"
            },
            {
              "enrichment": "negatives.delinquencyAmount"
            },
            {
              "enrichment": "negatives.collectionCases"
            },
            {
              "enrichment": "negatives.collectionCount"
            },
            {
              "enrichment": "negatives.collectionAmount"
            },
            {
              "enrichment": "negatives.collectionDate"
            },
            {
              "enrichment": "financials.netAssets"
            },
            {
              "enrichment": "financials.totalLiabilities"
            },
            {
              "enrichment": "financials.totalLongTermLiabilities"
            },
            {
              "enrichment": "financials.otherLongTermFinance"
            },
            {
              "enrichment": "financials.miscCurrentLiabilities"
            },
            {
              "enrichment": "financials.otherShortTermFinancials"
            },
            {
              "enrichment": "financials.bankOverdraft"
            },
            {
              "enrichment": "financials.totalAssets"
            },
            {
              "enrichment": "financials.miscCurrentAssets"
            },
            {
              "enrichment": "financials.otherCurrentAssets"
            },
            {
              "enrichment": "financials.tradeDebtors"
            },
            {
              "enrichment": "financials.intangibleAssets"
            },
            {
              "enrichment": "financialsNonConsolidated.intangibleAssets"
            },
            {
              "enrichment": "financials.tangibleAssets"
            },
            {
              "enrichment": "financials.stocks"
            },
            {
              "enrichment": "financials.cash"
            },
            {
              "enrichment": "financials.shareholderFunds"
            },
            {
              "enrichment": "financials.revaluationReserve"
            },
            {
              "enrichment": "financials.sundryReserves"
            },
            {
              "enrichment": "financials.coefficientLinear"
            },
            {
              "enrichment": "financials.workingCapital"
            },
            {
              "enrichment": "financials.accountsStartDate"
            },
            {
              "enrichment": "financials.accountsEndDate"
            },
            {
              "enrichment": "financials.totalFixedAssets"
            },
            {
              "enrichment": "financials.totalCurrentAssets"
            },
            {
              "enrichment": "financials.tradeCreditors"
            },
            {
              "enrichment": "financials.totalCurrentLiabilities"
            },
            {
              "enrichment": "financials.longTermLiabilities"
            },
            {
              "enrichment": "financials.totalEquity"
            },
            {
              "enrichment": "financials.netWorth"
            },
            {
              "enrichment": "financials.liquidityRatio"
            },
            {
              "enrichment": "financials.netResult"
            },
            {
              "enrichment": "financials.capital"
            },
            {
              "enrichment": "financials.nominalCapital"
            },
            {
              "enrichment": "financials.placedCapital"
            },
            {
              "enrichment": "financials.depositedCapital"
            },
            {
              "enrichment": "group.daughter.name"
            },
            {
              "enrichment": "group.daughter.country"
            },
            {
              "enrichment": "group.parent.id"
            },
            {
              "enrichment": "group.parent.safeNumber"
            },
            {
              "enrichment": "group.parent.name"
            },
            {
              "enrichment": "group.parent.companyNo"
            },
            {
              "enrichment": "group.parent.rating.current.score"
            },
            {
              "enrichment": "group.parent.rating.current.description.en"
            },
            {
              "enrichment": "group.parent.rating.current.description.nl"
            },
            {
              "enrichment": "group.parent.limit.current.value"
            },
            {
              "enrichment": "group.parent.addressLine1"
            },
            {
              "enrichment": "group.parent.city"
            },
            {
              "enrichment": "group.parent.postalCode"
            },
            {
              "enrichment": "group.parent.country"
            },
            {
              "enrichment": "group.ultimateParent.id"
            },
            {
              "enrichment": "group.ultimateParent.safeNumber"
            },
            {
              "enrichment": "group.ultimateParent.name"
            },
            {
              "enrichment": "group.ultimateParent.companyNo"
            },
            {
              "enrichment": "group.ultimateParent.rating.current.score"
            },
            {
              "enrichment": "group.ultimateParent.rating.current.description.en"
            },
            {
              "enrichment": "group.ultimateParent.rating.current.description.nl"
            },
            {
              "enrichment": "group.ultimateParent.limit.current.value"
            },
            {
              "enrichment": "group.ultimateParent.country"
            },
            {
              "enrichment": "group.ultimateParent.entityType"
            },
            {
              "enrichment": "group.ultimateParent.isoCode"
            },
            {
              "enrichment": "group.ultimateParent.address"
            },
            {
              "enrichment": "group.ultimateParent.poBox"
            },
            {
              "enrichment": "group.ultimateParent.city"
            },
            {
              "enrichment": "group.ultimateParent.inseeCityCode"
            },
            {
              "enrichment": "group.ultimateParent.postalCode"
            },
            {
              "enrichment": "group.ultimateParent.contactPhone"
            },
            {
              "enrichment": "group.headquarter.id"
            },
            {
              "enrichment": "directors.title.en"
            },
            {
              "enrichment": "directors.title.nl"
            },
            {
              "enrichment": "directors.title.fr"
            },
            {
              "enrichment": "directors.firstName"
            },
            {
              "enrichment": "directors.fullNameKana"
            },
            {
              "enrichment": "directors.middleName"
            },
            {
              "enrichment": "directors.lastName"
            },
            {
              "enrichment": "directors.fullName"
            },
            {
              "enrichment": "directors.salutation"
            },
            {
              "enrichment": "directors.gender"
            },
            {
              "enrichment": "directors.addressLine1"
            },
            {
              "enrichment": "directors.addressLine2"
            },
            {
              "enrichment": "directors.addressLine3"
            },
            {
              "enrichment": "directors.addressLine4"
            },
            {
              "enrichment": "directors.city"
            },
            {
              "enrichment": "directors.region"
            },
            {
              "enrichment": "directors.state"
            },
            {
              "enrichment": "directors.postalCode"
            },
            {
              "enrichment": "directors.country"
            },
            {
              "enrichment": "directors.birthDate"
            },
            {
              "enrichment": "directors.birthPlace"
            },
            {
              "enrichment": "directors.appointmentDate"
            },
            {
              "enrichment": "directors.endDate"
            },
            {
              "enrichment": "directors.nationality"
            },
            {
              "enrichment": "directors.honours"
            },
            {
              "enrichment": "directors.managerPositionCode"
            },
            {
              "enrichment": "shareholders.name"
            },
            {
              "enrichment": "shareholders.info"
            },
            {
              "enrichment": "shareholders.currency"
            },
            {
              "enrichment": "general.isHeadquarter"
            }
          ]
        }
      },
      "CreditsafeLocalSolutionsGBLandRegistry": {
        "type": "object",
        "example": {
          "totalSize": 64293,
          "data": [
            {
              "rn": 1,
              "address": "Land at Gorse Hill, Farningham, Dartford, Kent, South East",
              "tenure": "Freehold",
              "registeredTitle": "K945315",
              "proprietorship": "Limited Company or Public Limited Company",
              "correspondenceAddress": "Bridge House, 1 Walnut Tree Close, Guildford, Surrey GU1 4LZ, Ash House Falcon Road, Sowton, Exeter EX2 7LB",
              "changeDate": "2015-08-20T00:00:00",
              "propertyType": "Other",
              "newlyBuild": "No",
              "companyRegistrationNo": "09346363"
            },
            {
              "rn": 2,
              "address": "Land at Gorse Hill, Farningham, Dartford, Kent, South East",
              "tenure": "Freehold",
              "registeredTitle": "K945323",
              "proprietorship": "Limited Company or Public Limited Company",
              "correspondenceAddress": "Bridge House, 1 Walnut Tree Close, Guildford, Surrey GU1 4LZ, Ash House Falcon Road, Sowton, Exeter EX2 7LB",
              "changeDate": "2015-08-20T00:00:00",
              "propertyType": "Other",
              "newlyBuild": "No",
              "companyRegistrationNo": "09346363"
            }
          ]
        }
      },
      "GetDecisionEngineInstancesResponse": {
        "type": "object",
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "instances": {
            "description": "The list of decision trees and GUID's available to user.",
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "guid": {
                  "type": "string"
                },
                "decisionTreeName": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "UpdateDecisionEngineInstanceRequestBodyWithExample": {
        "allOf": [
          {
            "$ref": "#/components/schemas/UpdateDecisionEngineInstanceRequestBody"
          },
          {
            "type": "object",
            "example": {
              "$ref": "#/components/examples/UpdateDecisionEngineInstanceRequestBodyExample"
            }
          }
        ]
      },
      "UpdateDecisionEngineInstanceRequestBody": {
        "type": "object",
        "required": [
          "templateId",
          "guid",
          "decisionTreeName"
        ],
        "properties": {
          "templateId": {
            "type": "string",
            "description": "The template ID of the decision tree to be updated.",
            "example": "72a7e73e799a4c3ea2a8b89bd2002829"
          },
          "guid": {
            "type": "string",
            "description": "The GUID to be updated.",
            "example": "02dce1bbb81b11ed962c01ff1787b18e"
          },
          "decisionTreeName": {
            "type": "string",
            "description": "The name of the decision tree to be updated.",
            "example": "Test US after NL test update5"
          },
          "customerId": {
            "type": "integer",
            "description": "The customer ID to be updated.",
            "example": 103361848
          },
          "inputParams": {
            "type": "object",
            "description": "The input parameters to be updated can be obtained from the `GET/instance configuration` endpoint."
          },
          "configurationVariables": {
            "type": "object",
            "description": "The Configuration Variables to be updated can be obtained from the `GET/instance configuration` endpoint."
          },
          "scalarVariables": {
            "type": "object",
            "description": "The Scalar Variables to be updated can be obtained from the `GET/instance configuration` endpoint."
          }
        }
      },
      "DeleteFreshInvetigationsByOrderId": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ConnectUpdateFreshInvestigation": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "consent": {
            "type": "boolean",
            "description": "Including this allows Creditsafe to disclose your company details to the target company in the aim of improving the quality of our Investigation Report"
          },
          "contactInfo": {
            "$ref": "#/components/schemas/ConnectFreshInvInvestigationContactInfo"
          },
          "chargeReference": {
            "type": "string",
            "description": "Free text field to add your own personal reference to the order"
          },
          "searchCriteria": {
            "$ref": "#/components/schemas/ConnectFreshInvInvestigationCompanyData"
          },
          "pendingInfo": {
            "type": "object",
            "description": "PendingInfo property contains the information of respective sections, that someone has requested respective information to be modified.",
            "properties": {
              "contactDetails": {
                "description": "Your Contact details of fresh investigation for updating.",
                "$ref": "#/components/schemas/ConnectFreshInvInvestigationContactInfo"
              },
              "searchCriteria": {
                "description": "Search criteria details of the company.",
                "$ref": "#/components/schemas/ConnectFreshInvInvestigationCompanyData"
              }
            }
          }
        }
      },
      "ConnectFreshInvInvestigationContactInfo": {
        "description": "Your contact information",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "name": {
            "type": "string",
            "description": "Your name",
            "nullable": false
          },
          "emailAddress": {
            "type": "string",
            "description": "The address where Investigation creation confirmations are sent",
            "nullable": false
          },
          "telephoneNumber": {
            "type": "string",
            "description": "Your contact number",
            "nullable": true
          },
          "company": {
            "type": "object",
            "additionalProperties": false,
            "description": "your company information",
            "properties": {
              "name": {
                "type": "string",
                "description": "Your company name",
                "nullable": false
              },
              "number": {
                "type": "string",
                "nullable": false,
                "description": "Your company VAT number/Reg Number/Tax Number"
              }
            }
          }
        }
      },
      "ConnectFreshInvInvestigationCompanyData": {
        "type": "object",
        "additionalProperties": false,
        "description": "Details on the company.",
        "properties": {
          "name": {
            "type": "string",
            "description": "Company name."
          },
          "additionalInfo": {
            "type": "string",
            "description": "Further details on the company."
          },
          "telephoneNumber": {
            "type": "string",
            "description": "Company telephone number"
          },
          "address": {
            "type": "object",
            "additionalProperties": false,
            "description": "Company address",
            "properties": {
              "simple": {
                "type": "string"
              },
              "postcode": {
                "type": "string"
              },
              "city": {
                "type": "string"
              }
            }
          },
          "regNo": {
            "type": "string",
            "description": "Company registration number"
          },
          "vatNo": {
            "type": "string",
            "description": "Company VAT number"
          },
          "countryCode": {
            "$ref": "#/components/schemas/Creditsafe.GlobalData.CountryCode"
          }
        }
      },
      "FreshInvestigationAttachmentUploadForOrderRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "importFile": {
            "type": "string",
            "format": "binary",
            "description": "The file which we want to attach to the fresh investigation order"
          },
          "description": {
            "type": "string",
            "description": "Description of the file which we want to attach to the fresh investigation order"
          }
        }
      },
      "FreshInvestigationAttachmentUploadForOrderResponse": {
        "description": "Attachment upload status for the order",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "details": {
            "type": "string"
          }
        }
      },
      "FreshInvestigationGetAttachmentsForOrderResponse": {
        "description": "Attachments for the fresh investigation order",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "Attachments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string"
                },
                "fileName": {
                  "type": "string"
                },
                "fileType": {
                  "type": "string"
                },
                "description": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "FreshInvestigationCommentsForOrderRequest": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "comments": {
            "description": "comments for fresh investigation orderId",
            "type": "string"
          }
        }
      },
      "FreshInvestigationCommentsForOrderResponse": {
        "description": "comments for the fresh investigation orderId",
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "correlationId": {
            "type": "string"
          },
          "message": {
            "type": "string"
          }
        }
      },
      "GetFreshInvestigationCommentsByOrderIdResponse": {
        "type": "object",
        "properties": {
          "totalCount": {
            "type": "integer",
            "description": "Total number of comments for a FreshInvestigation Report"
          },
          "comments": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "userID": {
                  "type": "string",
                  "example": "CSC_123456",
                  "description": "user id"
                },
                "comment": {
                  "type": "string",
                  "example": "testing comments",
                  "description": "comments about the FreshInvestigation Report"
                },
                "creationDate": {
                  "type": "string",
                  "example": "2023-03-10T05:44:06.000Z",
                  "description": "The time when comment has been posted."
                }
              }
            }
          }
        }
      },
      "CreditsafeGlobalDataCoreAttachmentBinaryAttachment": {
        "type": "string",
        "format": "binary"
      },
      "Creditsafe.GlobalData.Reports.IndicatorIndustryComparison": {
        "type": "object",
        "properties": {
          "sectorCode": {
            "type": "string"
          },
          "sectorAverage": {
            "type": "string"
          },
          "sectorCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "totalAverage": {
            "type": "string"
          },
          "totalCount": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          }
        }
      }
    },
    "examples": {
      "UpdateDecisionEngineInstanceRequestBodyExample": {
        "value": {
          "templateId": "72a7e73e799a4c3ea2a8b89bd2002829",
          "guid": "232101f5cfbf11edb2a53f274007bfbe",
          "decisionTreeName": "Default US-Test Tree",
          "publilshed": true,
          "customerId": 103361848,
          "inputParams": {
            "creditAmount": {
              "labelName": "Sales Amount",
              "failedStatus": 3,
              "unavailableStatus": 2,
              "isMandatory": true,
              "orderInde": 100,
              "fieldType": "Integer"
            }
          },
          "configurationVariables": {
            "companyStatus": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2
            },
            "internationalScore": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": "B"
            },
            "riskScore": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 50
            },
            "dbt": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 1
            },
            "possibleOFAC": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2
            },
            "estimatedAnnualRevenue": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 1000
            },
            "yearsInBusiness": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 5
            },
            "derogatoryLegalFilingsCount": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 3
            },
            "derogatoryLegalFilingsValue": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 1000
            },
            "numberOfEmployees": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 1000
            },
            "bankruptcy": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2
            },
            "totalNumberOfTradeLines": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 25
            },
            "percentageOfTotalPastDue": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 15
            },
            "percentageSeverelyPastDue": {
              "isRequired": true,
              "failedStatus": 2,
              "unavailableStatus": 2,
              "value": 10
            },
            "businessCompliance": {
              "isRequired": false,
              "failedStatus": null,
              "unavailableStatus": 2,
              "value": null
            },
            "directorCompliance": {
              "isRequired": true,
              "failedStatus": null,
              "unavailableStatus": null,
              "value": null
            }
          },
          "scalarVariables": {
            "creditLimitAdjustmentModifier": {
              "isRequired": false,
              "value": 1
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerToken": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerToken": []
    }
  ]
}