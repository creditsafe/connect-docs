{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "Creditsafe Connect (Swagger Beta)",
    "description": "Creditsafe Connect is a REST API that provides access to the [Creditsafe Global Company Database](https://www.creditsafe.com/gb/en/more/about/our-data.html) allowing you to qualify your Prospects, make quick informed decisions on Suppliers and monitor your existing Customers. <br><br> [Postman](https://www.getpostman.com/apps) collection of the most common example calls to Creditsafe Connect. <br> [Connect Portal](https://connect-portal.creditsafe.com) Front End Demo Site <br><br> <form action=\"https://www.creditsafe.com/gb/en/forms/free-trial-form.html?cta=view-documenation-api\" method=\"get\" target=\"_blank\"> <button type=\"submit\"><b>Try It Now</b></button>"
  },
  "host": "connect.creditsafe.com",
  "basePath": "/v1",
  "tags": [
    {
      "name": "Authentication",
      "description": "Initial call to generate authentication token"
    },
    {
      "name": "Companies",
      "description": "Search and Report on Companies"
    },
    {
      "name": "Monitoring Companies",
      "description": "Monitoring"
    },
    {
      "name": "People/Directors",
      "description": "Search and Report on People/Directors"
    },
    {
      "name": "Decision Engine",
      "description": "Decision Engine"
    }
  ],
  "schemes": [
    "https"
  ],
  "paths": {
    "/authenticate": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "description": "Endpoint to generate a Bearer/JWT Authentication Token. When calling other endpoints, include this token under the Header value Authorization as proof of authenticity (Bearer security scehema is also accepted). Tokens persist for 1 hour after being issued and can exist concurrently.",
        "operationId": "Generate Auth Token",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "$ref": "#/definitions/authenticationRequest"
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/authenticationSuccessResponse"
            },
            "x-amf-mediaType": "application/json"
          },
          "401": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access denied -  Please check that your username and password are correct.  Please be aware that usernames and passwords are case sensitive. If the problem persists, please contact your Creditsafe account manager."
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "Authentication",
      "x-amf-description": "Calls to Connect require a valid JWT Authentication Token to be supplied as a REST Header. An Authentication Token can be generated by calling the POST /authenticate endpoint with your CS Connect credentials. Please note that both username + password are case sensitive."
    },
    "/companies": {
      "get": {
        "tags": [
          "Companies"
        ],
        "description": "Endpoint to search for Companies based on supplied Search Criteria.",
        "operationId": "Searching Companies",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countries",
            "in": "query",
            "description": "A Comma-separated list of country codes to search for Companies in. The list takes ISO/Alpha 2 format country codes. For example US,GB represents searching for Companies in the United States and Great Britain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "language",
            "in": "query",
            "description": "Search Language -  Typically only used for Countries where more than one  Company Names exist in different languages. Such as Companies with a Japanese Kanji and English names.",
            "required": false,
            "type": "string",
            "default": "en",
            "pattern": "^[a-zA-Z]{2}$"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Connect Id - The primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network. This is returned on all Company Search Results. Use this field to use in other operations such as Ordering Company Credit Report by Id, and Adding Company to Monitoing Portfolio. </br></br> [Searching by Connect ID is a slightly redundant operation (can be used as a fast-lookup to Search Result fields) as the purpose of Search is to obtain this identifier].",
            "required": false,
            "type": "string"
          },
          {
            "name": "safeNo",
            "in": "query",
            "description": "Safe Number - Creditsafe's identifier on all Companies owned in the Creditsafe Universe. This is returned on all Company Search Results",
            "required": false,
            "type": "string"
          },
          {
            "name": "regNo",
            "in": "query",
            "description": "Local Company Identifier - The Company identifier typically associated with a Government Filing Agency. i.e. French SIREN/SIRET, United Kingdom Companies House CRN",
            "required": false,
            "type": "string"
          },
          {
            "name": "vatNo",
            "in": "query",
            "description": "Company VAT Number",
            "required": false,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Company Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "tradeName",
            "in": "query",
            "description": "Trade Name of the Company, typically used in Countries where Name is not uniquely registered.",
            "required": false,
            "type": "string"
          },
          {
            "name": "acronym",
            "in": "query",
            "description": "A (non-unique) identifier to look for Companies by their more commonly known acronym rather than their lesser known full name. Acronym is predominantly available on French Companies.",
            "required": false,
            "type": "string"
          },
          {
            "name": "exact",
            "in": "query",
            "description": "Provide as true to find Companies matching a Name exactly.",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "address",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "street",
            "in": "query",
            "description": "Address part identifier - Street of the Company",
            "required": false,
            "type": "string"
          },
          {
            "name": "houseNo",
            "in": "query",
            "description": "Address part identifier - House/Building Number of the Company",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "description": "Address part identifier - City of the Company",
            "required": false,
            "type": "string"
          },
          {
            "name": "postCode",
            "in": "query",
            "description": "Address part identifier - Postcode/Zip Code of the Company. Can be provided partially to extend to a region with a * as a wildcard. I.e. CF* can represnt all postcodes starting with CF.",
            "required": false,
            "type": "string"
          },
          {
            "name": "province",
            "in": "query",
            "description": "Address part identifier - Province/State of the Company",
            "required": false,
            "type": "string"
          },
          {
            "name": "phone",
            "in": "query",
            "description": "Phone Number of the Company",
            "required": false,
            "type": "string"
          },
          {
            "name": "officeType",
            "in": "query",
            "description": "Indicates whether the Company is a Head Office or a Branch",
            "required": false,
            "type": "string",
            "enum": [
              "headOffice",
              "branch"
            ]
          },
          {
            "name": "status",
            "in": "query",
            "description": "Indicates whether the Company is Active/Trading",
            "required": false,
            "type": "string",
            "enum": [
              "active",
              "nonactive"
            ]
          },
          {
            "name": "type",
            "in": "query",
            "description": "Indicates whether the Company is Limited or NonLimited. Countries without a concept of Limited/NonLimited Companies will not be affected by this parameter",
            "required": false,
            "type": "string",
            "enum": [
              "ltd",
              "nonltd"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of Companies per page",
            "required": false,
            "type": "integer"
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/companySearchSuccessResult"
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "companies": [],
                "totalSize": 0,
                "messages": [
                  {
                    "code": "NoResults",
                    "text": "No companies matching specified search criteria found.",
                    "type": "Information"
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "Companies",
      "x-amf-description": "Endpoint to search for Companies based on supplied Search Criteria."
    },
    "/companies/{id}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "operationId": "Company Report by Id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "Report Language - The JSON structure of the Report is language invariant, but field content will return as the given language, where available.",
            "required": false,
            "type": "string",
            "default": "en",
            "pattern": "^[a-zA-Z]{2}$"
          },
          {
            "name": "template",
            "in": "query",
            "description": "Optional parameter to request a Templated Company Report. A Template adds/reduces sections of the Credit Report depending on your subscription. Do not include this parameter if you have not been given a template to use.",
            "required": false,
            "type": "string",
            "default": "full"
          },
          {
            "name": "customData",
            "in": "query",
            "description": "A Key-Value pair (as a string format key::value) that is required for certain Report requests. I.e. German Report Reason Code. Use /reportcustomdata/{country} endpoint to see the necessary structure/values.",
            "required": false,
            "type": "string"
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "required": false,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "description": "The Connect Id (optionally Safe Number where available) of the Company to order their Company Credit Report.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/gbCompanyReportExampleResponse"
            },
            "x-amf-mediaType": "application/json",
            "x-amf-responsePayloads": [
              {
                "mediaType": "text/html",
                "schema": {}
              },
              {
                "mediaType": "application/pdf",
                "schema": {}
              },
              {
                "mediaType": "text/pdf",
                "schema": {}
              }
            ]
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "Company Report",
      "x-amf-description": "This endpoint orders a Credit Report for a Company by its Connect Id. </br> The Company Credit Report is a JSON object comprising of key business/financial data points, including its Credit Score & Limit. A full list of Company data points can be found in the Data Dictionaries."
    },
    "/companies/searchcriteria": {
      "get": {
        "tags": [
          "Companies"
        ],
        "description": "Provide a Comma-separated list of country codes to return a set of fields common across all countries to search on",
        "operationId": "Search Criteria",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countries",
            "in": "query",
            "description": "A comma separated list of ISO/Alpha 2 format country codes, or singular country Code. e.g. US,GB will return the common searchable Company fields in the United States and Great Britain.",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "Countries": [
                  "GB",
                  "DE"
                ],
                "CriteriaSets": [
                  {
                    "id": {
                      "required": true
                    },
                    "type": {
                      "allowedValues": [
                        "Limited",
                        "NonLimited"
                      ]
                    }
                  },
                  {
                    "safeNo": {
                      "required": true
                    },
                    "type": {
                      "allowedValues": [
                        "Limited",
                        "NonLimited"
                      ]
                    }
                  },
                  {
                    "regNo": {},
                    "vatNo": {},
                    "name": {},
                    "exact": {},
                    "address": {},
                    "city": {},
                    "postCode": {},
                    "status": {
                      "allowedValues": [
                        "Active",
                        "Inactive"
                      ]
                    },
                    "type": {
                      "allowedValues": [
                        "Limited",
                        "NonLimited"
                      ]
                    }
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "Company Search Criteria",
      "x-amf-description": "Use this to return a set of fields that are available to search on per country, or the common searchable fields in a combination of countries.'"
    },
    "/companies/schema/{countryCode}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "operationId": "Report JSON Schema",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "section",
            "in": "query",
            "description": "Use CompanyReportResponse for the Company Credit Report JSON schema, DirectorReportResponse for the Director Report JSON schema.",
            "required": false,
            "type": "string",
            "enum": [
              "CompanyReportResponse",
              "DirectorReportResponse"
            ]
          },
          {
            "name": "template",
            "in": "query",
            "description": "For Templated Company Report JSON Schemas",
            "required": false,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "ISO2 / Alpha 2 Country Code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {},
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "Company Report Schemas",
      "x-amf-description": "Endpoint to retrieve the most up-to-date Report JSON schema for a given country."
    },
    "/access/countries": {
      "get": {
        "tags": [
          "Authentication"
        ],
        "description": "Returns the available countries in your subscription by operation - Company Report, Director Report, Offline Reports and Monitoring.",
        "operationId": "Countries In Subscription",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "countryAccess": [
                  {
                    "Creditsafe Connect Online Reports": [
                      {
                        "countryName": "Italy",
                        "countryIso2": "IT",
                        "used": 243
                      },
                      {
                        "countryName": "Belgium",
                        "countryIso2": "BE",
                        "used": 76
                      },
                      {
                        "countryName": "United Kingdom of Great Britain and Northern Ireland",
                        "countryIso2": "GB",
                        "used": 46
                      },
                      {
                        "countryName": "Denmark",
                        "countryIso2": "DK",
                        "used": 5
                      },
                      {
                        "countryName": "Australia",
                        "countryIso2": "AU",
                        "used": 2
                      },
                      {
                        "countryName": "Indonesia",
                        "countryIso2": "ID",
                        "used": 0
                      },
                      {
                        "countryName": "Sweden",
                        "countryIso2": "SE",
                        "used": 10
                      },
                      {
                        "countryName": "United States of America",
                        "countryIso2": "US",
                        "used": 15
                      },
                      {
                        "countryName": "Afghanistan",
                        "countryIso2": "AF",
                        "used": 0
                      },
                      {
                        "countryName": "Yemen",
                        "countryIso2": "YE",
                        "used": 0
                      },
                      {
                        "countryName": "Czech Republic",
                        "countryIso2": "CZ",
                        "used": 0
                      }
                    ]
                  },
                  {
                    "Creditsafe Connect Offline Reports": []
                  },
                  {
                    "Creditsafe Connect Monitoring": []
                  }
                ],
                "correlationId": "1a5379d0-f923-11e8-bb11-023a939a59f2"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad Request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "Country Access",
      "x-amf-description": "Returns a list of Us"
    },
    "/people": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "description": "Get directors based on the search request",
        "operationId": "Searching People / Directors",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countries",
            "in": "query",
            "description": "A comma-separated list of countries to search for People with registered directorships against. The list takes ISO/Alpha 2 format country codes. For example US,GB represents searching for People/Directorships in the United States and Great Britain.",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "query",
            "description": "Connect Id - The primary Company identifier that is used to uniquely identify all companies across Creditsafe's Universe and Partner Network.",
            "required": false,
            "type": "string"
          },
          {
            "name": "regNo",
            "in": "query",
            "description": "Local Company Identifier - The Company identifier typically associated with a Government Filing Agency. i.e. French SIREN/SIRET, United Kingdom Companies House CRN",
            "required": false,
            "type": "string"
          },
          {
            "name": "safeNumber",
            "in": "query",
            "description": "Safe Number - Creditsafe's identifier on all Companies owned in the Creditsafe Universe. This is returned on all Company Search Results",
            "required": false,
            "type": "string"
          },
          {
            "name": "peopleId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Person's First Name.",
            "required": false,
            "type": "string"
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Person's Last Name",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyName",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "companyNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "localDirectorNumber",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "houseNo",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "street",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "city",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "state",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "postCode",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "province",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "status",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "dateOfBirth",
            "in": "query",
            "description": "Person DOB - provide YYYY-MM-DD or YYYY-MM format.",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "type": "integer"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of Companies per page",
            "required": false,
            "type": "integer"
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "totalSize": 158,
                "directors": [
                  {
                    "firstName": "Roland J.",
                    "lastName": "Bank",
                    "country": "DE",
                    "company": {
                      "id": "DE-0-DE01052297",
                      "companyName": "Berufsförderungswerk der Fachgemeinschaft Bau Berlin und Brandenburg Gemeinnützige GmbH",
                      "safeNumber": "DE01052297",
                      "type": "Ltd",
                      "regNo": "HRB 40555 B"
                    },
                    "address": {
                      "simpleValue": "12277, Berlin",
                      "city": "Berlin",
                      "postCode": "12277"
                    },
                    "status": "former",
                    "dateOfLatestChange": "2019-02-19T21:26:57.000Z",
                    "dateOfBirth": "1947-07-13T00:00:00.000000Z",
                    "localDirectorNumber": "DE01052297_10002486321",
                    "score": 10.625822,
                    "numEmployeesfrom": 100,
                    "numEmployeesTo": 199
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "directors": [],
                "totalSize": 0,
                "messages": [
                  {
                    "code": "NoResults",
                    "text": "No directors matching specified search criteria found.",
                    "type": "Information"
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "People",
      "x-amf-description": "Endpoint to search for Directors/People based on supplied Search Criteria."
    },
    "/people/{personId}": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "operationId": "Director Report by Id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "language",
            "in": "query",
            "description": "language the report is requested in.",
            "required": false,
            "type": "string",
            "default": "en",
            "pattern": "^[a-zA-Z]{2}$"
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "required": false,
            "type": "string"
          },
          {
            "name": "personId",
            "in": "path",
            "description": "the identifier of director.",
            "required": true,
            "type": "string",
            "pattern": "^[a-zA-Z]{2}([0-9]{1,3})?[-]{1}[a-zA-Z0-9$]+$"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "value": {
                  "orderId": "N/A",
                  "directorId": "US-375132490",
                  "dateOfOrder": "2019-05-08T03:22:57.258Z",
                  "userId": "1000017378",
                  "report": {
                    "directorId": "US-375132490",
                    "directorSummary": {
                      "activeAppointments": 1,
                      "inactiveAppointments": 0,
                      "resignedAppointments": 0
                    },
                    "directorDetails": {
                      "name": "JIM  ALFRED",
                      "firstName": "JIM",
                      "surname": "ALFRED",
                      "address": {
                        "simpleValue": "29 ALFRED DR, BRIDGEPORT, WV 26330",
                        "street": "29 ALFRED DR",
                        "city": "BRIDGEPORT",
                        "postalCode": "26330",
                        "province": "WV",
                        "country": "US"
                      },
                      "gender": "Unknown",
                      "directorType": "Person",
                      "hasNegativeInfo": false
                    },
                    "directorships": {
                      "currentActive": [
                        {
                          "id": "375132490",
                          "companyName": "ALFRED CONSTRUCTION INC",
                          "companyNumber": "US43573475",
                          "status": 0,
                          "position": {
                            "positionName": "PRESIDENT"
                          },
                          "legalCount": 2,
                          "legalAmount": 971,
                          "creditRating": {
                            "commonValue": "B",
                            "commonDescription": "Low Risk",
                            "creditLimit": {
                              "value": "75000"
                            },
                            "providerValue": {}
                          },
                          "dbt": 0
                        }
                      ]
                    }
                  }
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string",
                  "enum": [
                    "Policy 456183: The Authorization header has invalid format",
                    "Policy 456183: The message does not contain the Authorization header",
                    "Policy 456183: JWT is not valid"
                  ]
                }
              },
              "example": {
                "error": "Policy 456183: The Authorization header has invalid format"
              },
              "additionalProperties": {}
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "Person / Director Report",
      "x-amf-description": "This endpoint orders a Director Report on a Person by their identifier. </br> The Director Report is a JSON object comprising of information about Current/Previous directorships/appointments"
    },
    "/people/searchcriteria": {
      "get": {
        "tags": [
          "People/Directors"
        ],
        "description": "Get the people search criteria based on the country",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countries",
            "in": "query",
            "description": "accepts a comma separated list of Country codes",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "countries": [
                  "DE",
                  "FR"
                ],
                "criteriaSets": [
                  {
                    "localDirectorNumber": {
                      "required": true
                    }
                  },
                  {
                    "firstName": {
                      "required": false
                    },
                    "lastName": {
                      "required": true
                    },
                    "dateOfBirth": {
                      "required": false
                    },
                    "company": {
                      "id": {
                        "required": false
                      },
                      "regNo": {
                        "required": false
                      },
                      "companyName": {
                        "required": false
                      }
                    },
                    "status": {
                      "allowedValues": [
                        "Current",
                        "Former",
                        "Active",
                        "Inactive"
                      ],
                      "required": false
                    },
                    "address": {
                      "city": {
                        "required": false
                      }
                    }
                  },
                  {
                    "firstName": {
                      "required": false
                    },
                    "lastName": {
                      "required": false
                    },
                    "dateOfBirth": {
                      "required": false
                    },
                    "company": {
                      "id": {
                        "required": true
                      },
                      "regNo": {
                        "required": false
                      },
                      "companyName": {
                        "required": false
                      }
                    },
                    "status": {
                      "allowedValues": [
                        "Current",
                        "Former",
                        "Active",
                        "Inactive"
                      ],
                      "required": false
                    },
                    "address": {
                      "city": {
                        "required": false
                      }
                    }
                  },
                  {
                    "firstName": {
                      "required": false
                    },
                    "lastName": {
                      "required": false
                    },
                    "dateOfBirth": {
                      "required": false
                    },
                    "company": {
                      "id": {
                        "required": false
                      },
                      "regNo": {
                        "required": true
                      },
                      "companyName": {
                        "required": false
                      }
                    },
                    "status": {
                      "allowedValues": [
                        "Current",
                        "Former",
                        "Active",
                        "Inactive"
                      ],
                      "required": false
                    },
                    "address": {
                      "city": {
                        "required": false
                      }
                    }
                  },
                  {
                    "firstName": {
                      "required": false
                    },
                    "lastName": {
                      "required": false
                    },
                    "dateOfBirth": {
                      "required": false
                    },
                    "company": {
                      "id": {
                        "required": false
                      },
                      "regNo": {
                        "required": false
                      },
                      "companyName": {
                        "required": true
                      }
                    },
                    "status": {
                      "allowedValues": [
                        "Current",
                        "Former",
                        "Active",
                        "Inactive"
                      ],
                      "required": false
                    },
                    "address": {
                      "city": {
                        "required": false
                      }
                    }
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "a request for people searchcriteria"
    },
    "/monitoring": {},
    "/monitoring/user/details": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get User details",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "countryCode": "JP",
                "createdDate": "2018-11-02T07:44:49",
                "csCustomerId": 100306,
                "csUserId": 100424,
                "isAutoTracker": false,
                "languageCode": "EN",
                "lastAccessDate": "2018-11-02T07:44:49",
                "modifiedDate": "2018-11-02T07:44:49",
                "contractEndDate": "",
                "userId": 130
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Returns User Object"
    },
    "/monitoring/companies/{id}/events": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Collection of events based on the connect id and which are received from each    country , optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "endDate",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "date-time"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "required": false,
            "type": "integer",
            "default": 50
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              },
              "Link": {
                "type": "string",
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)"
              }
            },
            "schema": {
              "example": {
                "totalCount": 1,
                "paging": {
                  "size": 50,
                  "last": 0
                },
                "data": [
                  {
                    "eventId": 46768998,
                    "companyId": "DE01994341",
                    "portfolioId": 19425,
                    "ruleName": "COMPANY_NAME_CHANGED",
                    "localEventCode": "COMPANY_NAME_CHANGED",
                    "globalEventCode": "NC",
                    "newValue": "new company name ",
                    "oldValue": "previous company name",
                    "eventDate": "2018-10-05T14:00:00",
                    "createdDate": "2018-12-24T12:31:06"
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Event resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "A collection of events"
    },
    "/monitoring/eventRules": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get all eventRules, optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              }
            },
            "schema": {
              "example": [
                {
                  "isActive": 0,
                  "ruleCode": 101,
                  "ruleCountryCode": "XX",
                  "ruleType": 4,
                  "ruleTypeName": "Rating band change - 3 input",
                  "name": "International Rating  |Reduce by {0} Band(s) OR Less than Band {1}",
                  "param0": "1",
                  "param1": "A"
                }
              ]
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "EventRule resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "A collection of events"
    },
    "/monitoring/eventRules/{countryCode}": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get all eventRules, optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country code to show events for",
            "required": true,
            "type": "string",
            "maxLength": 2,
            "minLength": 2
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              }
            },
            "schema": {
              "example": [
                {
                  "isActive": 0,
                  "ruleCode": 101,
                  "ruleCountryCode": "XX",
                  "ruleType": 4,
                  "ruleTypeName": "Rating band change - 3 input",
                  "name": "International Rating  |Reduce by {0} Band(s) OR Less than Band {1}",
                  "param0": "1",
                  "param1": "A"
                }
              ]
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "EventRule resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "A collection of eventRules"
    },
    "/monitoring/notificationEvents": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get all notificationEvents, optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
            "required": true,
            "type": "string",
            "default": "companyName",
            "enum": [
              "companyName",
              "countryCode",
              "eventId",
              "eventDate"
            ]
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "required": false,
            "type": "integer",
            "default": 50
          },
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              },
              "Link": {
                "type": "string",
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)"
              }
            },
            "schema": {
              "type": "object",
              "required": [
                "data"
              ],
              "properties": {
                "paging": {
                  "type": "object",
                  "properties": {
                    "size": {
                      "type": "number"
                    },
                    "prev": {
                      "type": "number"
                    },
                    "next": {
                      "type": "number"
                    },
                    "last": {
                      "type": "number"
                    }
                  },
                  "required": [
                    "last",
                    "size"
                  ]
                },
                "totalCount": {
                  "type": "number"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "eventId": {
                        "type": "number"
                      },
                      "newValue": {
                        "type": "string"
                      },
                      "ruleText": {
                        "type": "string"
                      },
                      "eventDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "oldValue": {
                        "type": "string"
                      },
                      "company": {
                        "type": "object",
                        "properties": {
                          "portfolioId": {
                            "type": "number"
                          },
                          "countryCode": {
                            "type": "string",
                            "description": "Two letter code representing country of origin"
                          },
                          "name": {
                            "type": "string",
                            "description": "Company Name"
                          },
                          "address": {
                            "type": "object",
                            "description": "Address for the company",
                            "properties": {
                              "postcode": {
                                "type": "string"
                              },
                              "simple": {
                                "type": "string"
                              },
                              "city": {
                                "type": "string"
                              }
                            },
                            "required": [
                              "city",
                              "postcode",
                              "simple"
                            ]
                          },
                          "regNumber": {
                            "type": "string"
                          },
                          "safeNumber": {
                            "type": "string"
                          },
                          "portfolioName": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "connectID": {
                            "type": "string"
                          },
                          "scores": {
                            "type": "object",
                            "description": "Local Score, Credit Score, and recommended Credit Limit",
                            "properties": {
                              "creditLimit": {
                                "type": "integer",
                                "description": "Limit of credit we recommend offering the company"
                              },
                              "local": {
                                "type": "integer"
                              },
                              "common": {
                                "type": "string",
                                "enum": [
                                  "A",
                                  "B",
                                  "C",
                                  "D",
                                  "E",
                                  "X"
                                ]
                              }
                            },
                            "required": [
                              "common",
                              "local"
                            ]
                          },
                          "status": {
                            "type": "string",
                            "enum": [
                              "active",
                              "inactive",
                              "unknown"
                            ]
                          }
                        },
                        "required": [
                          "connectID",
                          "countryCode",
                          "id",
                          "name",
                          "portfolioId",
                          "status"
                        ]
                      },
                      "processedDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "notificationId": {
                        "type": "number"
                      },
                      "ruleCode": {
                        "type": "number"
                      },
                      "ruleName": {
                        "type": "string"
                      },
                      "summary": {
                        "type": "string"
                      },
                      "notificationEventId": {
                        "type": "number"
                      },
                      "createdDate": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "company",
                      "createdDate",
                      "eventDate",
                      "eventId",
                      "notificationEventId",
                      "processedDate",
                      "ruleCode"
                    ],
                    "x-amf-examples": {
                      "BasicExample": {
                        "notificationEventId": 384849,
                        "notificationId": 238488,
                        "company": {
                          "name": "Smiths Ltd",
                          "countryCode": "FR",
                          "connectID": "FR-X-59684959",
                          "id": "FR2938484848",
                          "status": "active",
                          "portfolioId": 1049388345,
                          "portfolioName": "Test Notifications1"
                        },
                        "eventId": 38447,
                        "ruleCode": 601,
                        "ruleName": "All - Credit Limit",
                        "newValue": "A",
                        "oldValue": "B",
                        "eventDate": "2017-04-18T14:00:00.05Z",
                        "createdDate": "2017-04-18T15:00:00.05Z",
                        "processedDate": "2017-04-18T15:00:00.05Z",
                        "summary": "Some additional info",
                        "ruleText": "Example Rule Text"
                      }
                    }
                  }
                }
              },
              "additionalProperties": {}
            },
            "x-amf-mediaType": "application/json",
            "x-amf-responsePayloads": [
              {
                "mediaType": "appplication/json",
                "schema": {
                  "example": {
                    "totalCount": 4,
                    "paging": {
                      "size": 50,
                      "last": 0
                    },
                    "data": [
                      {
                        "company": {
                          "id": "DE-0-DE01994341",
                          "safeNumber": "DE01994341",
                          "name": "Bank Bau KG",
                          "countryCode": "DE",
                          "portfolioId": 19425,
                          "portfolioName": "TestData"
                        },
                        "eventId": 46768998,
                        "eventDate": "",
                        "newValue": "new company name ",
                        "oldValue": "previous company name",
                        "createdDate": "",
                        "notificationEventId": 755394,
                        "ruleCode": 104,
                        "ruleName": "Company Name",
                        "ruleText": "Some text about the rule"
                      }
                    ]
                  }
                }
              }
            ]
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "NotificationEvent resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": [],
        "x-amf-queryParameters": {
          "startDate": {
            "required": false,
            "type": "datetime | nil"
          },
          "endDate": {
            "required": false,
            "type": "datetime | nil"
          }
        }
      },
      "x-amf-description": "A collection of notificationEvents"
    },
    "/monitoring/portfolios": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get all portfolios, optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return portfolios that match the given value",
            "required": false,
            "type": "string"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "required": false,
            "type": "integer",
            "default": 50
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              },
              "Link": {
                "type": "string",
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)"
              }
            },
            "schema": {
              "example": {
                "totalCount": 70,
                "paging": {
                  "size": 100,
                  "last": 0
                },
                "data": {
                  "portfolios": [
                    {
                      "portfolioId": 20195,
                      "name": "Connect Portfolio",
                      "isDefault": false,
                      "isSharedPortfolio": 0
                    }
                  ],
                  "sharedPortfolios": []
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Create a new Portfolio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "example": "toDo"
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "portfolioId": 20398,
                "name": "Connect Portfolio",
                "isDefault": false
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "A collection of portfolios"
    },
    "/monitoring/portfolios/{portfolioId}": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get the portfolio with portfolioId = portfolioId}",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "required": [
                "isDefault",
                "name",
                "portfolioId"
              ],
              "properties": {
                "portfolioId": {
                  "type": "number"
                },
                "name": {
                  "type": "string"
                },
                "isDefault": {
                  "type": "boolean"
                }
              },
              "example": {
                "portfolioId": 123456789,
                "name": "My new portfolio",
                "isDefault": true
              },
              "additionalProperties": {}
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "delete": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Delete the portfolio with portfolioId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio removed"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "type": "string",
              "example": "{\"message\": \"Portfolio not found\" }\n"
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "patch": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Update Portfolio details",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "example": "toDo"
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Entity representing a Portfolio"
    },
    "/monitoring/portfolios/{portfolioId}/countries": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get a list of distinct countries of companies monitored with in a portfolio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "FR",
                "LU",
                "DE",
                "DK",
                "SE"
              ]
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Get a list of distinct countries of companies monitored with in a portfolio"
    },
    "/monitoring/portfolios/{portfolioId}/eventRules": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get all eventRules, optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              }
            },
            "schema": {
              "example": [
                {
                  "isActive": 0,
                  "ruleCode": 101,
                  "ruleCountryCode": "XX",
                  "ruleType": 4,
                  "ruleTypeName": "Rating band change - 3 input",
                  "name": "International Rating  |Reduce by {0} Band(s) OR Less than Band {1}",
                  "param0": "1",
                  "param1": "A"
                }
              ]
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "EventRule resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Get all eventRules with portfolioId"
    },
    "/monitoring/portfolios/{portfolioId}/eventRules/{countryCode}": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get all eventRules, optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country code to show events for",
            "required": true,
            "type": "string",
            "maxLength": 2,
            "minLength": 2
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              }
            },
            "schema": {
              "example": [
                {
                  "isActive": 0,
                  "ruleCode": 101,
                  "ruleCountryCode": "XX",
                  "ruleType": 4,
                  "ruleTypeName": "Rating band change - 3 input",
                  "name": "International Rating  |Reduce by {0} Band(s) OR Less than Band {1}",
                  "param0": "1",
                  "param1": "A"
                }
              ]
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "EventRule resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "put": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Update eventRules",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "countryCode",
            "in": "path",
            "description": "Country code to show events for",
            "required": true,
            "type": "string",
            "maxLength": 2,
            "minLength": 2
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "example": [
                {
                  "ruleCode": 1801,
                  "ruleCountryCode": "GB",
                  "isActive": 1,
                  "param0": "15"
                },
                {
                  "ruleCode": 1802,
                  "ruleCountryCode": "GB",
                  "isActive": 1,
                  "param0": "10"
                },
                {
                  "ruleCode": 1815,
                  "ruleCountryCode": "GB",
                  "isActive": 0
                },
                {
                  "ruleCode": 1803,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1804,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1814,
                  "ruleCountryCode": "GB",
                  "isActive": 0
                },
                {
                  "ruleCode": 1805,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1806,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1807,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1808,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1809,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1810,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1811,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1812,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 1813,
                  "ruleCountryCode": "GB",
                  "isActive": 1
                },
                {
                  "ruleCode": 3053,
                  "ruleCountryCode": "GB",
                  "isActive": 0
                },
                {
                  "ruleCode": 3054,
                  "ruleCountryCode": "GB",
                  "isActive": 0
                }
              ]
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "EventRule resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Get all eventRules for a Specific Country with portfolioId"
    },
    "/monitoring/portfolios/{portfolioId}/eventRules/setDefault": {
      "put": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Update (set) event rules to default based on the portfolio id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "a request for setDefault"
    },
    "/monitoring/portfolios/{portfolioId}/import": {
      "post": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Import companies in to a portfolio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "example": "toDo"
            },
            "x-amf-mediaType": "multipart/form-data"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "message": "Accepted for processing. Import Id 7744"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Import CSV file of companies into a portfolio"
    },
    "/monitoring/portfolios/{portfolioId}/sync": {
      "post": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Delete companies from portfolio and update new companies from CSV file",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "example": "toDo"
            },
            "x-amf-mediaType": "multipart/form-data"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "message": "Accepted for processing. Import Id 7744"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Synchronise a portfolio with the companies contained in a CSV file"
    },
    "/monitoring/portfolios/{portfolioId}/riskSummary": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get current portfolio risk summary information",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "totalCompanies": 479,
                "bandACount": 269,
                "bandApc": 56.158663883089766,
                "bandBCount": 110,
                "bandBpc": 22.964509394572026,
                "bandCCount": 59,
                "bandCpc": 12.31732776617954,
                "bandDCount": 13,
                "bandDpc": 2.7139874739039667,
                "bandECount": 28,
                "bandEpc": 5.845511482254697
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolio not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Get event portfolio risk summary information"
    },
    "/monitoring/portfolios/{portfolioId}/notificationEvents": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get all notificationEvents based on the portfolio id , optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "required": false,
            "type": "integer",
            "default": 50
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
            "required": true,
            "type": "string",
            "default": "companyName",
            "enum": [
              "companyName",
              "countryCode",
              "eventId",
              "eventDate",
              "textValueEn"
            ]
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              },
              "Link": {
                "type": "string",
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)"
              }
            },
            "schema": {
              "example": {
                "totalCount": 24,
                "paging": {
                  "size": 2,
                  "prev": 1,
                  "next": 1,
                  "last": 11
                },
                "data": [
                  {
                    "company": {
                      "id": "ES-0-436776",
                      "safeNumber": "ES01481829",
                      "name": "BANK",
                      "countryCode": "ES",
                      "portfolioId": 18707,
                      "portfolioName": "Data"
                    },
                    "eventId": 46762582,
                    "eventDate": "",
                    "newValue": "33 new name",
                    "oldValue": "21name",
                    "createdDate": "",
                    "notificationEventId": 754983,
                    "ruleCode": 104,
                    "ruleName": "Company Name",
                    "ruleText": "Some text about the rule"
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "NotificationEvent resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": [],
        "x-amf-queryParameters": {
          "endDate": {
            "required": false,
            "type": "datetime | nil"
          },
          "startDate": {
            "required": false,
            "type": "datetime | nil"
          }
        }
      },
      "x-amf-description": "A collection of notificationEvents"
    },
    "/monitoring/portfolios/{portfolioId}/companies": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get all companies, optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return companies that match the given value",
            "required": false,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "required": false,
            "type": "integer",
            "default": 50
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "countryCode",
            "in": "query",
            "description": "Return <<resourcePathName>> that match the given countryCode",
            "required": false,
            "type": "string"
          },
          {
            "name": "events",
            "in": "query",
            "description": "If set to true, all events will be returned for each company",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              },
              "Link": {
                "type": "string",
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)"
              }
            },
            "schema": {
              "example": {
                "totalCount": 1,
                "paging": {
                  "size": 100,
                  "next": 1,
                  "last": 4
                },
                "data": [
                  {
                    "id": "",
                    "safeNumber": "UK00216072",
                    "name": "ABU DHABI MARINE AREAS LIMITED",
                    "address": "CHERTSEY ROAD",
                    "countryCode": "GB",
                    "portfolioId": 17781,
                    "creditLimit": 1400000,
                    "dateLastEvent": "",
                    "personalLimit": "",
                    "personalReference": "",
                    "ratingCommon": "B",
                    "ratingLocal": "57",
                    "companyStatus": "1"
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Company resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": [],
        "x-amf-queryParameters": {
          "language": {
            "description": "Translation Locale language code optional",
            "required": false,
            "type": "string | nil"
          }
        }
      },
      "post": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Add new company to portfolio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "example": {
                "id": "GB-0-123456789",
                "personalReference": "Some text",
                "freeText": "Some useful test",
                "personalLimit": "40"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "example": {
                "message": "Company added"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Company resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "A collection of companies"
    },
    "/monitoring/portfolios/{portfolioId}/companies/copy": {
      "post": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Copy companies from one portfolio to single (or) multiple portfolios.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "copyAll",
            "in": "query",
            "description": "When CopyAll queryparameter is False, portfolios and companies list needs to be passed. When CopyAll queryparameter is True, only portfolios need to be passed and companies List must be empty. All companies are copied from current portfolio are considered here.",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "x-amf-examples": {
                "CopyAllFalse": {
                  "portfolios": [
                    196854,
                    197369
                  ],
                  "companies": [
                    {
                      "id": "BE-X-733313367"
                    },
                    {
                      "id": "BE-X-868222848"
                    },
                    {
                      "id": "BE-X-835695382"
                    }
                  ]
                },
                "CopyAllTrue": {
                  "portfolios": [
                    196854,
                    197369
                  ],
                  "companies": []
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "totalPortfoliosCompanies": 10,
                "successfulPortfoliosCompanies": 8,
                "failedPortfoliosCompanies": 2,
                "reason": "Duplicate entry '199483-FR00002855' for key 'PRIMARY'"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad Request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolios not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "copy companies from one portfolio to single (or) multiple portfolios. Portfolios List denotes destination portfolios and companies list denotes the companies to be moved to destination portfolios"
    },
    "/monitoring/portfolios/{portfolioId}/companies/remove": {
      "post": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Move companies from one portfolio to single (or) multiple portfolios.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "removeAll",
            "in": "query",
            "description": "When RemoveAll queryparameter is False, portfolios and companies List needs to be passed. When RemoveAll queryparameter is True, only portfolios need to be passed and companies List must be empty. All companies are moved and deleted from current portfolio",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "x-amf-examples": {
                "RemoveAllFalse": {
                  "portfolios": [
                    196854,
                    197369
                  ],
                  "companies": [
                    {
                      "id": "BE-X-733313367"
                    },
                    {
                      "id": "BE-X-868222848"
                    },
                    {
                      "id": "BE-X-835695382"
                    }
                  ]
                },
                "RemoveAllTrue": {
                  "portfolios": [
                    196854,
                    197369
                  ],
                  "companies": []
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "totalPortfoliosCompanies": 10,
                "successfulPortfoliosCompanies": 8,
                "failedPortfoliosCompanies": 2,
                "reason": "Duplicate entry '199483-FR00002855' for key 'PRIMARY'"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad Request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolios not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "copy companies from one portfolio to single (or) multiple portfolio's and remove from current portfolio Portfolios List denotes destination portfolios and companies list denotes the companies to be moved to destination portfolios"
    },
    "/monitoring/portfolios/{portfolioId}/companies/clear": {
      "patch": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Delete companies from current portfolio",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clearAll",
            "in": "query",
            "description": "When ClearAll queryparameter is False,Companies List needs to be passed. When ClearAll queryparameter is True, Companies List must be empty. All companies will be deleted",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "x-amf-examples": {
                "ClearAllFalse": {
                  "companies": [
                    "BE-X-733313367",
                    "BE-X-868222848"
                  ]
                },
                "ClearAllTrue": {
                  "companies": []
                }
              }
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "message": "Companies deleted from portfolio"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad Request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolios not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "delete companies from current portfolio."
    },
    "/monitoring/portfolios/{portfolioId}/companies/{id}": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Get the company\nwith companyId =\n{companyId}\n",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "type": "object",
              "required": [
                "countryCode",
                "id",
                "name",
                "portfolioId"
              ],
              "properties": {
                "portfolioId": {
                  "type": "number",
                  "description": "Portfolio id"
                },
                "safeNumber": {
                  "type": "string",
                  "description": "SafeNumber of company"
                },
                "countryCode": {
                  "type": "string",
                  "description": "Country code"
                },
                "name": {
                  "type": "string",
                  "description": "Company name"
                },
                "address": {
                  "type": "string",
                  "description": "Company address"
                },
                "personalReference": {
                  "type": "string",
                  "description": "Personal reference"
                },
                "companyStatus": {
                  "type": "string",
                  "description": "CS company status"
                },
                "creditLimit": {
                  "type": "number",
                  "description": "CS company credit limit"
                },
                "ratingLocal": {
                  "type": "number",
                  "description": "CS company local rating"
                },
                "ratingCommon": {
                  "type": "string",
                  "description": "CS company international common rating"
                },
                "dateLastEvent": {
                  "type": "string",
                  "format": "date-time"
                },
                "id": {
                  "type": "string",
                  "description": "Company identifier"
                },
                "events": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "example": {
                      "notificationEventId": 384849,
                      "notificationId": 238488,
                      "eventId": 38447,
                      "ruleCode": 601,
                      "ruleName": "All - Credit Limit",
                      "newValue": "A",
                      "oldValue": "B",
                      "eventDate": "2017-04-18T14:00:00.05Z",
                      "createdDate": "2017-04-18T15:00:00.05Z",
                      "processedDate": "2017-04-18T15:00:00.05Z",
                      "summary": "Some additional info"
                    },
                    "properties": {
                      "eventId": {
                        "type": "number"
                      },
                      "newValue": {
                        "type": "string"
                      },
                      "eventDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "oldValue": {
                        "type": "string"
                      },
                      "processedDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "ruleName": {
                        "type": "string"
                      },
                      "ruleCode": {
                        "type": "number"
                      },
                      "notificationId": {
                        "type": "number"
                      },
                      "summary": {
                        "type": "string"
                      },
                      "notificationEventId": {
                        "type": "number"
                      },
                      "createdDate": {
                        "type": "string",
                        "format": "date-time"
                      }
                    },
                    "required": [
                      "createdDate",
                      "eventDate",
                      "eventId",
                      "notificationEventId",
                      "processedDate",
                      "ruleCode"
                    ]
                  }
                }
              },
              "example": {
                "portfolioId": 23585848,
                "safeNumber": "FR123456789",
                "countryCode": "FR",
                "name": "A Company",
                "address": "24 Leftside, Paris, 23456",
                "personalReference": "Some text",
                "companyStatus": "Active",
                "creditLimit": 10000,
                "ratingLocal": 76,
                "ratingCommon": "B",
                "dateLastEvent": "2017-04-18T15:00:00.05Z",
                "id": "FR01-000-584758989"
              },
              "additionalProperties": {}
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Company resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "delete": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Delete a Company",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "message": "Company removed"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "type": "string",
              "example": "{\"message\": \"Company not found\" }\n"
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "patch": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Updates a Company",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "schema": {
              "example": "toDo"
            },
            "name": "generated",
            "required": false,
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "204": {
            "description": ""
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Company resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Entity representing a Company"
    },
    "/monitoring/portfolios/{portfolioId}/companies/{id}/notificationEvents": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "List of notification events based on the connect id , optionally filtered",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "searchQuery",
            "in": "query",
            "description": "Return notificationEvents that match the given value",
            "required": false,
            "type": "string"
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Number of items to return per Page (max 1000)",
            "required": false,
            "type": "integer",
            "default": 50
          },
          {
            "name": "page",
            "in": "query",
            "description": "Starting page number (indexed from 0)",
            "required": false,
            "type": "integer",
            "default": 0
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
            "required": true,
            "type": "string",
            "default": "companyName",
            "enum": [
              "companyName",
              "countryCode",
              "eventId",
              "eventDate"
            ]
          },
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "headers": {
              "X-Total-Count": {
                "type": "integer",
                "description": "Total number of matching records"
              },
              "Link": {
                "type": "string",
                "description": "Link headers (see https://tools.ietf.org/html/rfc5988#page-6)"
              }
            },
            "schema": {
              "example": {
                "totalCount": 24,
                "paging": {
                  "size": 2,
                  "prev": 1,
                  "next": 1,
                  "last": 11
                },
                "data": [
                  {
                    "company": {
                      "id": "ES-0-436776",
                      "safeNumber": "ES01481829",
                      "name": "BANK",
                      "countryCode": "ES",
                      "portfolioId": 18707,
                      "portfolioName": "Data"
                    },
                    "eventId": 46762582,
                    "eventDate": "",
                    "newValue": "33 new name",
                    "oldValue": "21name",
                    "createdDate": "",
                    "notificationEventId": 754983,
                    "ruleCode": 104,
                    "ruleName": "Company Name",
                    "ruleText": "Some text about the rule"
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "NotificationEvent resource not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": [],
        "x-amf-queryParameters": {
          "endDate": {
            "required": false,
            "type": "datetime | nil"
          },
          "startDate": {
            "required": false,
            "type": "datetime | nil"
          }
        }
      },
      "x-amf-description": "A collection of notificationEvents"
    },
    "/monitoring/portfolios/{portfolioId}/sharingPermissions": {
      "get": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Retrieve user permissions within the customer for portfolio Id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "data": {
                  "portfolioId": "19425",
                  "customerId": 1000029220,
                  "userPermissions": [
                    {
                      "csUserId": 1000029225,
                      "permissions": "View,Add"
                    },
                    {
                      "csUserId": 1000029570,
                      "permissions": "View,Add"
                    }
                  ]
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "details": "No access to monitoring",
                "message": "Forbidden request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolios not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "patch": {
        "tags": [
          "Monitoring Companies"
        ],
        "description": "Update/Create user permissions within the customer for portfolio Id",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portfolioId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "example": {
                "revokeAll": "false",
                "userPermissions": [
                  {
                    "csUserId": 101106166,
                    "permissions": "View,Add"
                  },
                  {
                    "csUserId": 1000027380,
                    "permissions": "View,Add,Edit,Remove"
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "data": {
                  "portfolioId": "19425",
                  "customerId": 1000029220,
                  "status": "Success"
                }
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad Request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "details": "No access to monitoring",
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Portfolios not found"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Sharing Portfolio permissions to other users within the customer"
    },
    "/decisionEngine": {
      "x-amf-description": "Decision(s) for the company based on the Provenir Decision flow"
    },
    "/decisionEngine/{provenirId}": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Get Decision(s) for the company based on the Provenir Decision flow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "the id of the company we want a decision on",
            "required": true,
            "type": "string"
          },
          {
            "name": "originationId",
            "in": "query",
            "description": "the origin id of the company we want a decision on.Only upto 100 characters are allowed.Rest will be truncated.",
            "required": false,
            "type": "string"
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "required": false,
            "type": "string"
          },
          {
            "name": "provenirId",
            "in": "path",
            "description": "the identifier of the decision flow we want to call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "Decision": "Cred Lim D",
                "Audits": [
                  {
                    "description": "BANK OF AMERICA CORPORATION",
                    "RuleName": "Company Name"
                  },
                  {
                    "description": "87.0",
                    "RuleName": "Credit Rating"
                  }
                ],
                "originationId": "123456_@"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "post": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Send a Decision(s) for the company based on the Provenir Decision flow",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "companyId",
            "in": "query",
            "description": "the id of the company we want a decision on",
            "required": true,
            "type": "string"
          },
          {
            "name": "originationId",
            "in": "query",
            "description": "the origin id of the company we want a decision on.Only upto 100 characters are allowed.Rest will be truncated.",
            "required": false,
            "type": "string"
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "required": false,
            "type": "string"
          },
          {
            "name": "provenirId",
            "in": "path",
            "description": "the identifier of the decision flow we want to call.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "generated",
            "required": false,
            "schema": {
              "example": {
                "accountId": "123456",
                "companyName": "Test Company",
                "contact": "Joe Bloggs"
              }
            },
            "x-amf-mediaType": "application/json"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "Decision": "Cred Lim D",
                "Audits": [
                  {
                    "description": "BANK OF AMERICA CORPORATION",
                    "RuleName": "Company Name"
                  },
                  {
                    "description": "87.0",
                    "RuleName": "Credit Rating"
                  }
                ],
                "originationId": "123456_@"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Returns a Decision(s) for the company based on the Provenir Decision flow"
    },
    "/decisionEngine/GUID": {
      "get": {
        "tags": [
          "Decision Engine"
        ],
        "description": "Get a list of GUID's and Friendly Name for particular UserId",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by this column. Null values of sort column are listed after non-nulls.",
            "required": false,
            "type": "string",
            "default": "friendlyName",
            "enum": [
              "friendlyName"
            ]
          },
          {
            "name": "sortDir",
            "in": "query",
            "required": false,
            "type": "string",
            "default": "asc",
            "enum": [
              "asc",
              "desc"
            ]
          },
          {
            "name": "callRef",
            "in": "query",
            "description": "Call Reference",
            "required": false,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "GUIDList": [
                  {
                    "friendlyName": "maindecisionengine0",
                    "GUID": "repoObj_3640880d_163d98361fe_07fdb163d98361fe"
                  },
                  {
                    "friendlyName": "maindecisionengine1",
                    "GUID": "t3st-1d2"
                  },
                  {
                    "friendlyName": "maindecisionengine2",
                    "GUID": "t3st-1d"
                  }
                ]
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-description": "Returns a List of GUID's and Friendly Name for particular UserId"
    },
    "/reportcustomdata/{country}": {
      "get": {
        "tags": [
          "Companies"
        ],
        "description": "Get the Report Customdata of a country.",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "template",
            "in": "query",
            "description": "Report template that will be used for retrieval. Full report by default.",
            "required": false,
            "type": "string",
            "default": "full"
          },
          {
            "name": "country",
            "in": "path",
            "description": "country code the custom data relates to.",
            "required": true,
            "type": "string"
          },
          {
            "name": "Authorization",
            "in": "header",
            "description": "Authentication Token obtained from /authenticate. Can be expressed in the format \"bearer tokenValue\" or \"tokenValue\" alone.\"",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "example": {
                "customData": [
                  {
                    "key": "de_reason_code",
                    "optional": false,
                    "allowedValues": [
                      "1",
                      "2",
                      "3",
                      "4",
                      "5",
                      "6",
                      "7",
                      "8"
                    ],
                    "description": "DE report retrieval reason code:\n1 - Credit Decisioning\n2 - Credit Assessment - Future business connection (with credit risk)\n3 - Credit Assessment - Existing business connection (with credit risk)\n4 - Realisation check receivables collection\n5 - Purchase Contract - Intention of signature of purchase contract (with credit risk)\n6 - Goods Credit Insurance (with credit risk)\n7 - Contract - Intention of signature of leasing or rent contract (with credit risk)\n8 - Insurance Contract - Intention of signature of a insurance contract (with credit risk)"
                  }
                ],
                "country": "DE"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "400": {
            "description": "",
            "schema": {
              "example": {
                "message": "Bad request"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "403": {
            "description": "",
            "schema": {
              "example": {
                "message": "Access forbidden"
              }
            },
            "x-amf-mediaType": "application/json"
          },
          "404": {
            "description": "",
            "schema": {
              "example": {
                "message": "Resource not found "
              }
            },
            "x-amf-mediaType": "application/json"
          }
        },
        "security": []
      },
      "x-amf-displayName": "Report Request Data",
      "x-amf-description": "A set of available/required company report custom data key/value pairs."
    }
  },
  "definitions": {
    "authenticationRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "example": {
        "username": "username@domain.com",
        "password": "password"
      }
    },
    "authenticationSuccessResponse": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      },
      "example": {
        "token": "eyJraWQiOiJEbUZkQXVITDNKS1hMZFpBcXdTREx2S01tOE5qeE1lXC94eDg3a0Y1ZDR3VT0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0Mjk1ZDIwOC1jZjlkLTRhMzYtYjcxMi0yN2VmODQzYWEzZTUiLCJlbWFpbF92ZXJpZmllZCI6dHJ1ZSwiaXNzIjoiaHR0cHM6XC9cL2NvZ25pdG8taWRwLmV1LXdlc3QtMS5hbWF6b25hd3MuY29tXC9ldS13ZXN0LTFfcUNmOURsUVhmIiwiY29nbml0bzp1c2VybmFtZSI6ImNvbm5lY3R1c2VyMzhAbWFpbGluYXRvci5jb20iLCJjdXN0b206Y3NVc2VySWQiOiIxMDAwMDE3Mzc4IiwiYXVkIjoiNXY1ZXJjaHJhdHRiMnFlZDQ2dDJ2OGJ0ZmUiLCJjdXN0b206Y3NVc2VyQ291bnRyeUNvZGUiOiJHQiIsImV2ZW50X2lkIjoiZjY5NTA4NTctMDUwOC0xMWU5LWIxYTYtMjM5ZmMxZWMwMzBlIiwidG9rZW5fdXNlIjoiaWQiLCJjdXN0b206Y3NVc2VyTGFuZ3VhZ2VDb2RlIjoiZW4iLCJhdXRoX3RpbWUiOjE1NDUzODcxNjYsImV4cCI6MTU0NTM5MDc2NiwiaWF0IjoxNTQ1Mzg3MTY2LCJlbWFpbCI6ImNvbm5lY3R1c2VyMzhAbWFpbGluYXRvci5jb20ifQ.YhD6Nr2798pe8Ct1djygKtR7pibzzeHGgWpnduaaKMf468cJyEPH_A7qpcGWDeur0NuYUQvNCAbmtSj_uQWkajOgjwJE3Mt0URVsDDvtdYt3ggRZl6-mByQAcP50HDUxH0SGNLnUeYhAkVbZqoc4PQme-WXwBsGAg2x_kWKRsicfmVfnXE67BDZ06mceC1WpPA72Kg6O-AWcPe5yIC3JpV2N1HWjuPym2fZGv13Rl1gCWSO0NACE069zT6pqePbBr5QWddf-GE6AI0lISmLyF_mTC0NYpGL_k5nl6H-K2mi6e-QcCcfz8eIQHGDFi_icPCXMAtS2WV5lTFw20loQdw"
      }
    },
    "companySearchSuccessResult": {
      "type": "object",
      "properties": {
        "totalSize": {
          "type": "number"
        },
        "companies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "regNo": {
                "type": "string"
              },
              "vatNo": {
                "type": "object"
              },
              "safeNo": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "officeType": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "statusDescription": {
                "type": "string"
              },
              "activityCode": {
                "type": "string"
              },
              "tradingNames": {
                "type": "object"
              },
              "address": {
                "type": "object",
                "properties": {
                  "simpleValue": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "postCode": {
                    "type": "string"
                  },
                  "province": {
                    "type": "string"
                  }
                }
              },
              "dateOfLatestChange": {
                "type": "object"
              },
              "dateOfLatestCAccounts": {
                "type": "object"
              }
            }
          }
        }
      },
      "example": {
        "totalSize": 10780,
        "companies": [
          {
            "id": "GB001-1-3031798",
            "country": "GB",
            "safeNo": "UK10731246",
            "name": "BANKS",
            "address": {
              "simpleValue": "KIMBOLTON ROAD, BOLNHURST, BEDFORD, BEDFORDSHIRE, MK44 2ES",
              "street": "BOLNHURST",
              "city": "BEDFORD",
              "postalCode": "MK44 2ES"
            },
            "status": "Active",
            "type": "NonLtd",
            "dateOfLatestChange": "2009-03-31T23:00:00.000Z"
          },
          {
            "id": "GB001-0-04348058",
            "country": "GB",
            "regNo": "04348058",
            "safeNo": "UK03996906",
            "name": "BANK LTD",
            "address": {
              "simpleValue": "HESKETH HOUSE 43-45 PORTMAN SQUARE, 43-45 PORTMAN SQUARE, LONDON, Greater London, W1H 6HN",
              "street": "43-45 PORTMAN SQUARE",
              "city": "LONDON",
              "postalCode": "W1H 6HN"
            },
            "status": "Active",
            "type": "Ltd",
            "dateOfLatestAccounts": "2016-01-31T00:00:00.000000Z",
            "dateOfLatestChange": "2018-07-04T15:43:14.000Z",
            "activityCode": "9999"
          }
        ]
      }
    },
    "peopleSearchRequest": {
      "type": "object",
      "properties": {
        "totalSize": {
          "type": "number"
        },
        "companies": {
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "type": "string"
              },
              "country": {
                "type": "string"
              },
              "regNo": {
                "type": "string"
              },
              "vatNo": {
                "type": "object"
              },
              "safeNo": {
                "type": "string"
              },
              "name": {
                "type": "string"
              },
              "status": {
                "type": "string"
              },
              "officeType": {
                "type": "string"
              },
              "type": {
                "type": "string"
              },
              "statusDescription": {
                "type": "string"
              },
              "activityCode": {
                "type": "string"
              },
              "tradingNames": {
                "type": "object"
              },
              "address": {
                "type": "object",
                "properties": {
                  "simpleValue": {
                    "type": "string"
                  },
                  "street": {
                    "type": "string"
                  },
                  "city": {
                    "type": "string"
                  },
                  "postCode": {
                    "type": "string"
                  },
                  "province": {
                    "type": "string"
                  }
                }
              },
              "dateOfLatestChange": {
                "type": "object"
              },
              "dateOfLatestCAccounts": {
                "type": "object"
              }
            }
          }
        }
      }
    },
    "monitoringportfoliosportfolioId_emails": {
      "type": "object",
      "required": [
        "emailAddress"
      ],
      "properties": {
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "emailAddress": {
          "type": "string"
        }
      },
      "example": "{\"firstName\":\"Bob\",\"lastName\":\"Smith\",\"emailAddress\":\"bob.smith@adomain.com\"}"
    },
    "monitoringportfolios_emails": {
      "type": "object",
      "properties": {
        "firstName": {
          "x-amf-union": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "lastName": {
          "x-amf-union": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        },
        "emailAddress": {
          "x-amf-union": [
            {
              "type": "string"
            },
            {
              "type": "null"
            }
          ]
        }
      },
      "example": "{\"firstName\":\"Bob\",\"lastName\":\"Smith\",\"emailAddress\":\"bob.smith@adomain.com\"}"
    },
    "gbCompanyReportExampleResponse": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        },
        "companyId": {
          "type": "string"
        },
        "dateOfOrder": {
          "type": "string"
        },
        "language": {
          "type": "string"
        },
        "userId": {
          "type": "string"
        },
        "report": {
          "properties": {
            "companyId": {
              "type": "string"
            },
            "language": {
              "type": "string"
            },
            "companySummary": {
              "properties": {
                "businessName": {
                  "type": "string"
                },
                "country": {
                  "type": "string"
                },
                "companyNumber": {
                  "type": "string"
                },
                "companyRegistrationNumber": {
                  "type": "string"
                },
                "mainActivity": {
                  "properties": {
                    "code": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "classification": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "companyStatus": {
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "latestTurnoverFigure": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "latestShareholdersEquityFigure": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "creditRating": {
                  "properties": {
                    "commonValue": {
                      "type": "string"
                    },
                    "commonDescription": {
                      "type": "string"
                    },
                    "creditLimit": {
                      "required": [
                        "currency",
                        "value"
                      ],
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "providerValue": {
                      "properties": {
                        "maxValue": {
                          "type": "string"
                        },
                        "minValue": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "providerDescription": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "companyIdentification": {
              "properties": {
                "basicInformation": {
                  "properties": {
                    "businessName": {
                      "type": "string"
                    },
                    "registeredCompanyName": {
                      "type": "string"
                    },
                    "companyRegistrationNumber": {
                      "type": "string"
                    },
                    "country": {
                      "type": "string"
                    },
                    "companyRegistrationDate": {
                      "type": "string"
                    },
                    "legalForm": {
                      "properties": {
                        "description": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "companyStatus": {
                      "properties": {
                        "status": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "principalActivity": {
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "classification": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "contactAddress": {
                      "properties": {
                        "type": {
                          "type": "string"
                        },
                        "simpleValue": {
                          "type": "string"
                        },
                        "postalCode": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                },
                "activityClassifications": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "classification": {
                        "type": "string"
                      },
                      "activities": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "code": {
                              "type": "string"
                            },
                            "description": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "previousNames": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "dateChanged": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "type": "object"
            },
            "creditScore": {
              "properties": {
                "currentCreditRating": {
                  "properties": {
                    "commonValue": {
                      "type": "string"
                    },
                    "commonDescription": {
                      "type": "string"
                    },
                    "creditLimit": {
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "providerValue": {
                      "properties": {
                        "maxValue": {
                          "type": "string"
                        },
                        "minValue": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "providerDescription": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "currentContractLimit": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "previousCreditRating": {
                  "properties": {
                    "commonValue": {
                      "type": "string"
                    },
                    "commonDescription": {
                      "type": "string"
                    },
                    "creditLimit": {
                      "properties": {
                        "currency": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "providerValue": {
                      "properties": {
                        "maxValue": {
                          "type": "string"
                        },
                        "minValue": {
                          "type": "string"
                        },
                        "value": {
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "providerDescription": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "latestRatingChangeDate": {
                  "type": "string"
                }
              },
              "type": "object"
            },
            "contactInformation": {
              "properties": {
                "mainAddress": {
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "simpleValue": {
                      "type": "string"
                    },
                    "postalCode": {
                      "type": "string"
                    }
                  },
                  "type": "object"
                },
                "otherAddresses": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string"
                      },
                      "simpleValue": {
                        "type": "string"
                      },
                      "postalCode": {
                        "type": "string"
                      },
                      "telephone": {
                        "type": "string"
                      }
                    }
                  }
                },
                "websites": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                }
              },
              "type": "object"
            },
            "shareCapitalStructure": {
              "properties": {
                "issuedShareCapital": {
                  "properties": {
                    "currency": {
                      "type": "string"
                    },
                    "value": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "numberOfSharesIssued": {
                  "type": "number"
                },
                "shareHolders": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "shareholderType": {
                        "type": "string"
                      },
                      "shareType": {
                        "type": "string"
                      },
                      "currency": {
                        "type": "string"
                      },
                      "totalNumberOfSharesOwned": {
                        "type": "number"
                      },
                      "percentSharesHeld": {
                        "type": "number"
                      }
                    }
                  }
                }
              },
              "type": "object"
            },
            "directors": {
              "properties": {
                "currentDirectors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "firstName": {
                        "type": "string"
                      },
                      "surname": {
                        "type": "string"
                      },
                      "address": {
                        "properties": {
                          "simpleValue": {
                            "type": "string"
                          },
                          "postalCode": {
                            "type": "string"
                          }
                        },
                        "type": "object"
                      },
                      "gender": {
                        "type": "string"
                      },
                      "dateOfBirth": {
                        "type": "string"
                      },
                      "directorType": {
                        "type": "string"
                      },
                      "positions": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "dateAppointed": {
                              "type": "string"
                            },
                            "positionName": {
                              "type": "string"
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "previousDirectors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "gender": {
                        "type": "string"
                      },
                      "directorType": {
                        "type": "string"
                      },
                      "positions": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              },
              "type": "object"
            },
            "otherInformation": {
              "properties": {
                "advisors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "auditorName": {
                        "type": "string"
                      }
                    }
                  }
                },
                "employeesInformation": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "year": {
                        "type": "number"
                      },
                      "numberOfEmployees": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "type": "object"
            },
            "groupStructure": {
              "properties": {
                "subsidiaryCompanies": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "country": {
                        "type": "string"
                      },
                      "id": {
                        "type": "string"
                      },
                      "safeNumber": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "registrationNumber": {
                        "type": "string"
                      }
                    }
                  }
                }
              },
              "type": "object"
            },
            "extendedGroupStructure": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "string"
                  },
                  "country": {
                    "type": "string"
                  },
                  "safeNumber": {
                    "type": "string"
                  },
                  "companyName": {
                    "type": "string"
                  },
                  "registeredNumber": {
                    "type": "string"
                  },
                  "latestAnnualAccounts": {
                    "type": "string"
                  },
                  "level": {
                    "type": "number"
                  },
                  "status": {
                    "type": "string"
                  }
                }
              }
            },
            "financialStatements": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "yearEndDate": {
                    "type": "string"
                  },
                  "numberOfWeeks": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "consolidatedAccounts": {
                    "type": "boolean"
                  },
                  "profitAndLoss": {
                    "properties": {
                      "revenue": {
                        "type": "number"
                      },
                      "operatingCosts": {
                        "type": "number"
                      },
                      "operatingProfit": {
                        "type": "number"
                      },
                      "wagesAndSalaries": {
                        "type": "number"
                      },
                      "pensionCosts": {
                        "type": "number"
                      },
                      "depreciation": {
                        "type": "number"
                      },
                      "amortisation": {
                        "type": "number"
                      },
                      "financialExpenses": {
                        "type": "number"
                      },
                      "profitBeforeTax": {
                        "type": "number"
                      },
                      "tax": {
                        "type": "number"
                      },
                      "profitAfterTax": {
                        "type": "number"
                      },
                      "dividends": {
                        "type": "number"
                      },
                      "minorityInterests": {
                        "type": "number"
                      },
                      "otherAppropriations": {
                        "type": "number"
                      },
                      "retainedProfit": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "balanceSheet": {
                    "properties": {
                      "totalTangibleAssets": {
                        "type": "number"
                      },
                      "totalIntangibleAssets": {
                        "type": "number"
                      },
                      "totalOtherFixedAssets": {
                        "type": "number"
                      },
                      "totalFixedAssets": {
                        "type": "number"
                      },
                      "totalInventories": {
                        "type": "number"
                      },
                      "tradeReceivables": {
                        "type": "number"
                      },
                      "miscellaneousReceivables": {
                        "type": "number"
                      },
                      "totalReceivables": {
                        "type": "number"
                      },
                      "cash": {
                        "type": "number"
                      },
                      "otherCurrentAssets": {
                        "type": "number"
                      },
                      "totalCurrentAssets": {
                        "type": "number"
                      },
                      "totalAssets": {
                        "type": "number"
                      },
                      "tradePayables": {
                        "type": "number"
                      },
                      "bankLiabilities": {
                        "type": "number"
                      },
                      "otherLoansOrFinance": {
                        "type": "number"
                      },
                      "miscellaneousLiabilities": {
                        "type": "number"
                      },
                      "totalCurrentLiabilities": {
                        "type": "number"
                      },
                      "bankLiabilitiesDueAfter1Year": {
                        "type": "number"
                      },
                      "otherLoansOrFinanceDueAfter1Year": {
                        "type": "number"
                      },
                      "miscellaneousLiabilitiesDueAfter1Year": {
                        "type": "number"
                      },
                      "totalLongTermLiabilities": {
                        "type": "number"
                      },
                      "totalLiabilities": {
                        "type": "number"
                      },
                      "calledUpShareCapital": {
                        "type": "number"
                      },
                      "revenueReserves": {
                        "type": "number"
                      },
                      "otherReserves": {
                        "type": "number"
                      },
                      "totalShareholdersEquity": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "otherFinancials": {
                    "properties": {
                      "contingentLiabilities": {
                        "type": "string"
                      },
                      "workingCapital": {
                        "type": "number"
                      },
                      "netWorth": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "ratios": {
                    "properties": {
                      "preTaxProfitMargin": {
                        "type": "number"
                      },
                      "returnOnCapitalEmployed": {
                        "type": "number"
                      },
                      "returnOnTotalAssetsEmployed": {
                        "type": "number"
                      },
                      "returnOnNetAssetsEmployed": {
                        "type": "number"
                      },
                      "salesOrNetWorkingCapital": {
                        "type": "number"
                      },
                      "stockTurnoverRatio": {
                        "type": "number"
                      },
                      "debtorDays": {
                        "type": "number"
                      },
                      "creditorDays": {
                        "type": "number"
                      },
                      "currentRatio": {
                        "type": "number"
                      },
                      "liquidityRatioOrAcidTest": {
                        "type": "number"
                      },
                      "currentDebtRatio": {
                        "type": "number"
                      },
                      "gearing": {
                        "type": "number"
                      },
                      "equityInPercentage": {
                        "type": "number"
                      },
                      "totalDebtRatio": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "localFinancialStatements": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string"
                  },
                  "yearEndDate": {
                    "type": "string"
                  },
                  "numberOfWeeks": {
                    "type": "number"
                  },
                  "currency": {
                    "type": "string"
                  },
                  "consolidatedAccounts": {
                    "type": "boolean"
                  },
                  "auditQualification": {
                    "type": "string"
                  },
                  "profitAndLoss": {
                    "properties": {
                      "turnover": {
                        "type": "number"
                      },
                      "costOfSales": {
                        "type": "number"
                      },
                      "grossProfit": {
                        "type": "number"
                      },
                      "depreciation": {
                        "type": "number"
                      },
                      "auditFees": {
                        "type": "number"
                      },
                      "wagesAndSalaries": {
                        "type": "number"
                      },
                      "directorsRemuneration": {
                        "type": "number"
                      },
                      "operatingProfit": {
                        "type": "number"
                      },
                      "interestExpense": {
                        "type": "number"
                      },
                      "profitBeforeTax": {
                        "type": "number"
                      },
                      "taxation": {
                        "type": "number"
                      },
                      "profitAfterTax": {
                        "type": "number"
                      },
                      "dividends": {
                        "type": "number"
                      },
                      "retainedProfit": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "balanceSheet": {
                    "properties": {
                      "tangibleAssets": {
                        "type": "number"
                      },
                      "intangibleAssets": {
                        "type": "number"
                      },
                      "totalFixedAssets": {
                        "type": "number"
                      },
                      "stock": {
                        "type": "number"
                      },
                      "tradeDebtors": {
                        "type": "number"
                      },
                      "otherDebtors": {
                        "type": "number"
                      },
                      "cash": {
                        "type": "number"
                      },
                      "miscCurrentAssets": {
                        "type": "number"
                      },
                      "totalCurrentAssets": {
                        "type": "number"
                      },
                      "totalAssets": {
                        "type": "number"
                      },
                      "tradeCreditors": {
                        "type": "number"
                      },
                      "bankBorrowingsCurrent": {
                        "type": "number"
                      },
                      "otherShortTermFinance": {
                        "type": "number"
                      },
                      "miscCurrentLiabilities": {
                        "type": "number"
                      },
                      "totalCurrentLiabilities": {
                        "type": "number"
                      },
                      "otherLongTermFinance": {
                        "type": "number"
                      },
                      "totalLongTermLiabilities": {
                        "type": "number"
                      },
                      "totalLiabilities": {
                        "type": "number"
                      },
                      "netAssets": {
                        "type": "number"
                      },
                      "issuedShareCapital": {
                        "type": "number"
                      },
                      "revaluationReserve": {
                        "type": "number"
                      },
                      "revenueReserves": {
                        "type": "number"
                      },
                      "otherReserves": {
                        "type": "number"
                      },
                      "totalShareholdersEquity": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "cashFlow": {
                    "properties": {
                      "netCashFlowFromOperations": {
                        "type": "number"
                      },
                      "netCashFlowBeforeFinancing": {
                        "type": "number"
                      },
                      "netCashFlowFromFinancing": {
                        "type": "number"
                      },
                      "increaseInCash": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "otherFinancials": {
                    "properties": {
                      "contingentLiabilities": {
                        "type": "boolean"
                      },
                      "bankOverdraftAndLTL": {
                        "type": "number"
                      },
                      "workingCapital": {
                        "type": "number"
                      },
                      "capitalEmployed": {
                        "type": "number"
                      },
                      "netWorth": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  },
                  "ratios": {
                    "properties": {
                      "preTaxProfitMargin": {
                        "type": "number"
                      },
                      "returnOnCapitalEmployed": {
                        "type": "number"
                      },
                      "returnOnTotalAssetsEmployed": {
                        "type": "number"
                      },
                      "returnOnNetAssetsEmployed": {
                        "type": "number"
                      },
                      "salesOrNetWorkingCapital": {
                        "type": "number"
                      },
                      "stocKTurnoverRatio": {
                        "type": "number"
                      },
                      "debtorDays": {
                        "type": "number"
                      },
                      "creditorDays": {
                        "type": "number"
                      },
                      "currentRatio": {
                        "type": "number"
                      },
                      "liquidityRatioOrAcidTest": {
                        "type": "number"
                      },
                      "currentDebtRatio": {
                        "type": "number"
                      },
                      "gearing": {
                        "type": "number"
                      },
                      "equityInPercentage": {
                        "type": "number"
                      },
                      "totalDebtRatio": {
                        "type": "number"
                      }
                    },
                    "type": "object"
                  }
                }
              }
            },
            "paymentData": {
              "properties": {
                "paymentsOnFile": {
                  "type": "number"
                },
                "paymentsOnTime": {
                  "type": "number"
                },
                "paymentsPaidLate": {
                  "type": "number"
                },
                "paymentsSentLegal": {
                  "type": "number"
                },
                "paymentsStillOwingLate": {
                  "type": "number"
                },
                "paymentsPaid0to30Days": {
                  "type": "number"
                },
                "highestInvoiceValueOutstandingLate": {
                  "type": "number"
                },
                "paymentsPaid90DaysplusLate": {
                  "type": "number"
                },
                "totalBalanceStillOwingLate": {
                  "type": "number"
                },
                "dbt": {
                  "type": "number"
                },
                "paymentsPaid61to90Days": {
                  "type": "number"
                },
                "totalBalanceStillOwing": {
                  "type": "number"
                },
                "payments31to60DaysLate": {
                  "type": "number"
                },
                "payments61to90DaysLate": {
                  "type": "number"
                },
                "highestInvoiceValueOutstanding": {
                  "type": "number"
                },
                "paymentsStillOwing": {
                  "type": "number"
                },
                "paymentsWithinTerms": {
                  "type": "number"
                },
                "payments0to30Dayslate": {
                  "type": "number"
                },
                "averageInvoiceValue": {
                  "type": "number"
                },
                "paymentsPaid31to60Days": {
                  "type": "number"
                },
                "paymentsPaid90Daysplus": {
                  "type": "number"
                },
                "totalInvoiceValues": {
                  "type": "number"
                },
                "paymentTrend": {
                  "type": "string"
                },
                "industryDBT": {
                  "type": "number"
                }
              },
              "type": "object"
            },
            "negativeInformation": {
              "properties": {
                "ccjSummary": {
                  "properties": {
                    "exactRegistered": {
                      "type": "number"
                    },
                    "possibleRegistered": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "countyCourtJudgements": {
                  "properties": {
                    "registered": {
                      "properties": {
                        "exact": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ccjDate": {
                                "type": "string"
                              },
                              "court": {
                                "type": "string"
                              },
                              "ccjAmount": {
                                "type": "number"
                              },
                              "caseNumber": {
                                "type": "string"
                              },
                              "ccjStatus": {
                                "type": "string"
                              },
                              "incomingRecordDetails": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "possible": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "ccjDate": {
                                "type": "string"
                              },
                              "court": {
                                "type": "string"
                              },
                              "ccjAmount": {
                                "type": "number"
                              },
                              "caseNumber": {
                                "type": "string"
                              },
                              "ccjStatus": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              },
              "type": "object"
            },
            "additionalInformation": {
              "properties": {
                "companyHistory": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      }
                    }
                  }
                },
                "mortgageSummary": {
                  "properties": {
                    "outstanding": {
                      "type": "number"
                    },
                    "satisfied": {
                      "type": "number"
                    }
                  },
                  "type": "object"
                },
                "mortgageDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "mortgageType": {
                        "type": "string"
                      },
                      "dateChargeCreated": {
                        "type": "string"
                      },
                      "dateChargeRegistered": {
                        "type": "string"
                      },
                      "status": {
                        "type": "string"
                      },
                      "personsEntitled": {
                        "type": "string"
                      },
                      "amountSecured": {
                        "type": "string"
                      },
                      "details": {
                        "type": "string"
                      }
                    }
                  }
                },
                "commentaries": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "commentaryText": {
                        "type": "string"
                      },
                      "positiveNegative": {
                        "type": "string"
                      }
                    }
                  }
                },
                "ratingHistory": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "companyValue": {
                        "type": "number"
                      },
                      "ratingDescription": {
                        "type": "string"
                      }
                    }
                  }
                },
                "creditLimitHistory": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string"
                      },
                      "companyValue": {
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                },
                "badDebtDetails": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "statementDate": {
                        "type": "string"
                      },
                      "registrationNumber": {
                        "type": "string"
                      },
                      "companyName": {
                        "type": "string"
                      },
                      "amount": {
                        "properties": {
                          "currency": {
                            "type": "string"
                          },
                          "value": {
                            "type": "number"
                          }
                        },
                        "type": "object"
                      }
                    }
                  }
                }
              },
              "type": "object"
            }
          },
          "type": "object"
        }
      },
      "example": {
        "orderId": "N/A",
        "companyId": "GB-0-03836192",
        "dateOfOrder": "2019-10-23T16:39:07.116Z",
        "language": "en",
        "userId": "100000000",
        "chargeRef": null,
        "report": {
          "companyId": "GB001-0-03836192",
          "language": "EN",
          "companySummary": {
            "businessName": "CREDITSAFE BUSINESS SOLUTIONS LIMITED",
            "country": "GB",
            "companyNumber": "UK03490298",
            "companyRegistrationNumber": "03836192",
            "mainActivity": {
              "code": "7487",
              "description": "Other business activities",
              "classification": "SIC03"
            },
            "companyStatus": {
              "status": "Active",
              "description": "Active - Accounts Filed"
            },
            "latestTurnoverFigure": {
              "value": 45245000
            },
            "latestShareholdersEquityFigure": {
              "value": 11269000
            },
            "creditRating": {
              "commonValue": "B",
              "commonDescription": "Low Risk",
              "creditLimit": {
                "currency": "GBP",
                "value": "785000"
              },
              "providerValue": {
                "maxValue": "100",
                "minValue": "1",
                "value": "55"
              },
              "providerDescription": "Low Risk"
            }
          }
        }
      }
    }
  }
}